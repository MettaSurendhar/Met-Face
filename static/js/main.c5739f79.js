/*! For license information please see main.c5739f79.js.LICENSE.txt */
(()=>{var t={282:(t,e,n)=>{var a=n(141),r=n(619),s=n(422),o=n(304),i=n(597),c=n(982),l=n(274);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=c,t.exports=l},141:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this,n=function(){var t=4022871197,e=function(e){e=e.toString();for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)};return e}();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function i(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function c(t,e){var n=new o(t),a=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.alea=c}(0,t=n.nmd(t),n.amdD)},982:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,a=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-a|0,e.d=a<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var a=0;a<n.length+20;a++)e.b^=0|n.charCodeAt(a),e.next()}function i(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function c(t,e){var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.tychei=c}(0,t=n.nmd(t),n.amdD)},619:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var a=0;a<n.length+64;a++)e.x^=0|n.charCodeAt(a),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function c(t,e){var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xor128=c}(0,t=n.nmd(t),n.amdD)},597:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this;e.next=function(){var t,n,a=e.w,r=e.X,s=e.i;return e.w=a=a+1640531527|0,n=r[s+34&127],t=r[s=s+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[s]=n^t,e.i=s,n+(a^a>>>16)|0},function(t,e){var n,a,r,s,o,i=[],c=128;for(e===(0|e)?(a=e,e=null):(e+="\0",a=0,c=Math.max(c,e.length)),r=0,s=-32;s<c;++s)e&&(a^=e.charCodeAt((s+32)%e.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+1640531527|0,r=0==(n=i[127&s]^=a+o)?r+1:0);for(r>=128&&(i[127&(e&&e.length||0)]=-1),r=127,s=512;s>0;--s)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;t.w=o,t.X=i,t.i=r}(e,t)}function i(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function c(t,e){null==t&&(t=+new Date);var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&(a.X&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xor4096=c}(0,t=n.nmd(t),n.amdD)},304:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this;e.next=function(){var t,n,a=e.x,r=e.i;return t=a[r],n=(t^=t>>>7)^t<<24,n^=(t=a[r+1&7])^t>>>10,n^=(t=a[r+3&7])^t>>>3,n^=(t=a[r+4&7])^t<<7,t=a[r+7&7],n^=(t^=t<<13)^t<<9,a[r]=n,e.i=r+1&7,n},function(t,e){var n,a=[];if(e===(0|e))a[0]=e;else for(e=""+e,n=0;n<e.length;++n)a[7&n]=a[7&n]<<15^e.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],t.x=a,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function i(t,e){return e.x=t.x.slice(),e.i=t.i,e}function c(t,e){null==t&&(t=+new Date);var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&(a.x&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xorshift7=c}(0,t=n.nmd(t),n.amdD)},422:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var a=0;a<n.length+64;a++)e.x^=0|n.charCodeAt(a),a==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function c(t,e){var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xorwow=c}(0,t=n.nmd(t),n.amdD)},274:(t,e,n)=>{var a;!function(r,s){var o,i=this,c=256,l="random",u=s.pow(c,6),h=s.pow(2,52),d=2*h,p=c-1;function f(t,e,n){var a=[],p=b(y((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(r)]:null==t?function(){try{var t;return o&&(t=o.randomBytes)?t=t(c):(t=new Uint8Array(c),(i.crypto||i.msCrypto).getRandomValues(t)),x(t)}catch(a){var e=i.navigator,n=e&&e.plugins;return[+new Date,i,n,i.screen,x(r)]}}():t,3),a),f=new m(a),v=function(){for(var t=f.g(6),e=u,n=0;t<h;)t=(t+n)*c,e*=c,n=f.g(1);for(;t>=d;)t/=2,e/=2,n>>>=1;return(t+n)/e};return v.int32=function(){return 0|f.g(4)},v.quick=function(){return f.g(4)/4294967296},v.double=v,b(x(f.S),r),(e.pass||n||function(t,e,n,a){return a&&(a.S&&g(a,f),t.state=function(){return g(f,{})}),n?(s[l]=t,e):t})(v,p,"global"in e?e.global:this==s,e.state)}function m(t){var e,n=t.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(t=[n++]);r<c;)o[r]=r++;for(r=0;r<c;r++)o[r]=o[s=p&s+t[r%n]+(e=o[r])],o[s]=e;(a.g=function(t){for(var e,n=0,r=a.i,s=a.j,o=a.S;t--;)e=o[r=p&r+1],n=n*c+o[p&(o[r]=o[s=p&s+e])+(o[s]=e)];return a.i=r,a.j=s,n})(c)}function g(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function y(t,e){var n,a=[],r=typeof t;if(e&&"object"==r)for(n in t)try{a.push(y(t[n],e-1))}catch(s){}return a.length?a:"string"==r?t:t+"\0"}function b(t,e){for(var n,a=t+"",r=0;r<a.length;)e[p&r]=p&(n^=19*e[p&r])+a.charCodeAt(r++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(s["seed"+l]=f,b(s.random(),r),t.exports){t.exports=f;try{o=n(778)}catch(v){}}else void 0===(a=function(){return f}.call(e,n,e,t))||(t.exports=a)}([],Math)},987:t=>{t.exports=n;var e=null;try{e=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function n(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function a(t){return!0===(t&&t.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},s={};function o(t,e){var n,a,o;return e?(o=0<=(t>>>=0)&&t<256)&&(a=s[t])?a:(n=c(t,(0|t)<0?-1:0,!0),o&&(s[t]=n),n):(o=-128<=(t|=0)&&t<128)&&(a=r[t])?a:(n=c(t,t<0?-1:0,!1),o&&(r[t]=n),n)}function i(t,e){if(isNaN(t))return e?y:g;if(e){if(t<0)return y;if(t>=p)return k}else{if(t<=-f)return I;if(t+1>=f)return w}return t<0?i(-t,e).neg():c(t%d|0,t/d|0,e)}function c(t,e,a){return new n(t,e,a)}n.fromInt=o,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return g;if("number"===typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(t.substring(1),e,n).neg();for(var r=i(l(n,8)),s=g,o=0;o<t.length;o+=8){var c=Math.min(8,t.length-o),h=parseInt(t.substring(o,o+c),n);if(c<8){var d=i(l(n,c));s=s.mul(d).add(i(h))}else s=(s=s.mul(r)).add(i(h))}return s.unsigned=e,s}function h(t,e){return"number"===typeof t?i(t,e):"string"===typeof t?u(t,e):c(t.low,t.high,"boolean"===typeof e?e:t.unsigned)}n.fromString=u,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var x=o(1,!0);n.UONE=x;var v=o(-1);n.NEG_ONE=v;var w=c(-1,2147483647,!1);n.MAX_VALUE=w;var k=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=c(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var e=i(t),n=this.div(e),a=n.mul(e).sub(this);return n.toString(t)+a.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var r=i(l(t,6),this.unsigned),s=this,o="";;){var c=s.div(r),u=(s.sub(c.mul(r)).toInt()>>>0).toString(t);if((s=c).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1===(1&this.low)},S.isEven=function(){return 0===(1&this.low)},S.equals=function(t){return a(t)||(t=h(t)),(this.unsigned===t.unsigned||this.high>>>31!==1||t.high>>>31!==1)&&(this.high===t.high&&this.low===t.low)},S.eq=S.equals,S.notEquals=function(t){return!this.eq(t)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(t){return this.comp(t)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(t){return this.comp(t)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(t){return this.comp(t)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(t){return this.comp(t)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(t){if(a(t)||(t=h(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(t){a(t)||(t=h(t));var e=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=t.high>>>16,i=65535&t.high,l=t.low>>>16,u=0,d=0,p=0,f=0;return p+=(f+=s+(65535&t.low))>>>16,d+=(p+=r+l)>>>16,u+=(d+=n+i)>>>16,u+=e+o,c((p&=65535)<<16|(f&=65535),(u&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(t){return a(t)||(t=h(t)),this.add(t.neg())},S.sub=S.subtract,S.multiply=function(t){if(this.isZero())return g;if(a(t)||(t=h(t)),e)return c(e.mul(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned);if(t.isZero())return g;if(this.eq(I))return t.isOdd()?I:g;if(t.eq(I))return this.isOdd()?I:g;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(m)&&t.lt(m))return i(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,s=this.low>>>16,o=65535&this.low,l=t.high>>>16,u=65535&t.high,d=t.low>>>16,p=65535&t.low,f=0,y=0,b=0,x=0;return b+=(x+=o*p)>>>16,y+=(b+=s*p)>>>16,b&=65535,y+=(b+=o*d)>>>16,f+=(y+=r*p)>>>16,y&=65535,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=o*u)>>>16,f+=n*p+r*d+s*u+o*l,c((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(t){if(a(t)||(t=h(t)),t.isZero())throw Error("division by zero");var n,r,s;if(e)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?c((this.unsigned?e.div_u:e.div_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return y;if(t.gt(this.shru(1)))return x;s=y}else{if(this.eq(I))return t.eq(b)||t.eq(v)?I:t.eq(I)?b:(n=this.shr(1).div(t).shl(1)).eq(g)?t.isNegative()?b:v:(r=this.sub(t.mul(n)),s=n.add(r.div(t)));if(t.eq(I))return this.unsigned?y:g;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();s=g}for(r=this;r.gte(t);){n=Math.max(1,Math.floor(r.toNumber()/t.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),u=o<=48?1:l(2,o-48),d=i(n),p=d.mul(t);p.isNegative()||p.gt(r);)p=(d=i(n-=u,this.unsigned)).mul(t);d.isZero()&&(d=b),s=s.add(d),r=r.sub(p)}return s},S.div=S.divide,S.modulo=function(t){return a(t)||(t=h(t)),e?c((this.unsigned?e.rem_u:e.rem_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return c(~this.low,~this.high,this.unsigned)},S.and=function(t){return a(t)||(t=h(t)),c(this.low&t.low,this.high&t.high,this.unsigned)},S.or=function(t){return a(t)||(t=h(t)),c(this.low|t.low,this.high|t.high,this.unsigned)},S.xor=function(t){return a(t)||(t=h(t)),c(this.low^t.low,this.high^t.high,this.unsigned)},S.shiftLeft=function(t){return a(t)&&(t=t.toInt()),0===(t&=63)?this:t<32?c(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):c(0,this.low<<t-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(t){return a(t)&&(t=t.toInt()),0===(t&=63)?this:t<32?c(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):c(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(t){if(a(t)&&(t=t.toInt()),0===(t&=63))return this;var e=this.high;return t<32?c(this.low>>>t|e<<32-t,e>>>t,this.unsigned):c(32===t?e:e>>>t-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},S.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},S.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},n.fromBytes=function(t,e,a){return a?n.fromBytesLE(t,e):n.fromBytesBE(t,e)},n.fromBytesLE=function(t,e){return new n(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},n.fromBytesBE=function(t,e){return new n(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}},463:(t,e,n)=>{"use strict";var a=n(791),r=n(296);function s(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function c(t,e){l(t,e),l(t+"Capture",e)}function l(t,e){for(i[t]=e,t=0;t<e.length;t++)o.add(e[t])}var u=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),h=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(t,e,n,a,r,s,o){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=s,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(t){g[t]=new m(t,0,!1,t,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(t){var e=t[0];g[e]=new m(e,1,!1,t[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(t){g[t]=new m(t,2,!1,t.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(t){g[t]=new m(t,2,!1,t,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(t){g[t]=new m(t,3,!1,t.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(t){g[t]=new m(t,3,!0,t,null,!1,!1)})),["capture","download"].forEach((function(t){g[t]=new m(t,4,!1,t,null,!1,!1)})),["cols","rows","size","span"].forEach((function(t){g[t]=new m(t,6,!1,t,null,!1,!1)})),["rowSpan","start"].forEach((function(t){g[t]=new m(t,5,!1,t.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(t){return t[1].toUpperCase()}function x(t,e,n,a){var r=g.hasOwnProperty(e)?g[e]:null;(null!==r?0!==r.type:a||!(2<e.length)||"o"!==e[0]&&"O"!==e[0]||"n"!==e[1]&&"N"!==e[1])&&(function(t,e,n,a){if(null===e||"undefined"===typeof e||function(t,e,n,a){if(null!==n&&0===n.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(t=t.toLowerCase().slice(0,5))&&"aria-"!==t);default:return!1}}(t,e,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,n,r,a)&&(n=null),a||null===r?function(t){return!!h.call(f,t)||!h.call(p,t)&&(d.test(t)?f[t]=!0:(p[t]=!0,!1))}(e)&&(null===n?t.removeAttribute(e):t.setAttribute(e,""+n)):r.mustUseProperty?t[r.propertyName]=null===n?3!==r.type&&"":n:(e=r.attributeName,a=r.attributeNamespace,null===n?t.removeAttribute(e):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?t.setAttributeNS(a,e,n):t.setAttribute(e,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(t){var e=t.replace(y,b);g[e]=new m(e,1,!1,t,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(t){var e=t.replace(y,b);g[e]=new m(e,1,!1,t,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(t){var e=t.replace(y,b);g[e]=new m(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(t){g[t]=new m(t,1,!1,t.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(t){g[t]=new m(t,1,!1,t.toLowerCase(),null,!0,!0)}));var v=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),I=Symbol.for("react.fragment"),S=Symbol.for("react.strict_mode"),N=Symbol.for("react.profiler"),T=Symbol.for("react.provider"),E=Symbol.for("react.context"),C=Symbol.for("react.forward_ref"),R=Symbol.for("react.suspense"),_=Symbol.for("react.suspense_list"),A=Symbol.for("react.memo"),D=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var F=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function M(t){return null===t||"object"!==typeof t?null:"function"===typeof(t=O&&t[O]||t["@@iterator"])?t:null}var L,z=Object.assign;function P(t){if(void 0===L)try{throw Error()}catch(n){var e=n.stack.trim().match(/\n( *(at )?)/);L=e&&e[1]||""}return"\n"+L+t}var B=!1;function W(t,e){if(!t||B)return"";B=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(e,[])}catch(l){var a=l}Reflect.construct(t,[],e)}else{try{e.call()}catch(l){a=l}t.call(e.prototype)}else{try{throw Error()}catch(l){a=l}t()}}catch(l){if(l&&a&&"string"===typeof l.stack){for(var r=l.stack.split("\n"),s=a.stack.split("\n"),o=r.length-1,i=s.length-1;1<=o&&0<=i&&r[o]!==s[i];)i--;for(;1<=o&&0<=i;o--,i--)if(r[o]!==s[i]){if(1!==o||1!==i)do{if(o--,0>--i||r[o]!==s[i]){var c="\n"+r[o].replace(" at new "," at ");return t.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",t.displayName)),c}}while(1<=o&&0<=i);break}}}finally{B=!1,Error.prepareStackTrace=n}return(t=t?t.displayName||t.name:"")?P(t):""}function U(t){switch(t.tag){case 5:return P(t.type);case 16:return P("Lazy");case 13:return P("Suspense");case 19:return P("SuspenseList");case 0:case 2:case 15:return t=W(t.type,!1);case 11:return t=W(t.type.render,!1);case 1:return t=W(t.type,!0);default:return""}}function V(t){if(null==t)return null;if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t;switch(t){case I:return"Fragment";case k:return"Portal";case N:return"Profiler";case S:return"StrictMode";case R:return"Suspense";case _:return"SuspenseList"}if("object"===typeof t)switch(t.$$typeof){case E:return(t.displayName||"Context")+".Consumer";case T:return(t._context.displayName||"Context")+".Provider";case C:var e=t.render;return(t=t.displayName)||(t=""!==(t=e.displayName||e.name||"")?"ForwardRef("+t+")":"ForwardRef"),t;case A:return null!==(e=t.displayName||null)?e:V(t.type)||"Memo";case D:e=t._payload,t=t._init;try{return V(t(e))}catch(n){}}return null}function G(t){var e=t.type;switch(t.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return t=(t=e.render).displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return V(e);case 8:return e===S?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e}return null}function H(t){switch(typeof t){case"boolean":case"number":case"string":case"undefined":case"object":return t;default:return""}}function j(t){var e=t.type;return(t=t.nodeName)&&"input"===t.toLowerCase()&&("checkbox"===e||"radio"===e)}function K(t){t._valueTracker||(t._valueTracker=function(t){var e=j(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),a=""+t[e];if(!t.hasOwnProperty(e)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,s=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return r.call(this)},set:function(t){a=""+t,s.call(this,t)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(t){a=""+t},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}(t))}function q(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),a="";return t&&(a=j(t)?t.checked?"true":"false":t.value),(t=a)!==n&&(e.setValue(t),!0)}function X(t){if("undefined"===typeof(t=t||("undefined"!==typeof document?document:void 0)))return null;try{return t.activeElement||t.body}catch(e){return t.body}}function Y(t,e){var n=e.checked;return z({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:t._wrapperState.initialChecked})}function Q(t,e){var n=null==e.defaultValue?"":e.defaultValue,a=null!=e.checked?e.checked:e.defaultChecked;n=H(null!=e.value?e.value:n),t._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function J(t,e){null!=(e=e.checked)&&x(t,"checked",e,!1)}function Z(t,e){J(t,e);var n=H(e.value),a=e.type;if(null!=n)"number"===a?(0===n&&""===t.value||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if("submit"===a||"reset"===a)return void t.removeAttribute("value");e.hasOwnProperty("value")?tt(t,e.type,n):e.hasOwnProperty("defaultValue")&&tt(t,e.type,H(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(t.defaultChecked=!!e.defaultChecked)}function $(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var a=e.type;if(!("submit"!==a&&"reset"!==a||void 0!==e.value&&null!==e.value))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}""!==(n=t.name)&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,""!==n&&(t.name=n)}function tt(t,e,n){"number"===e&&X(t.ownerDocument)===t||(null==n?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}var et=Array.isArray;function nt(t,e,n,a){if(t=t.options,e){e={};for(var r=0;r<n.length;r++)e["$"+n[r]]=!0;for(n=0;n<t.length;n++)r=e.hasOwnProperty("$"+t[n].value),t[n].selected!==r&&(t[n].selected=r),r&&a&&(t[n].defaultSelected=!0)}else{for(n=""+H(n),e=null,r=0;r<t.length;r++){if(t[r].value===n)return t[r].selected=!0,void(a&&(t[r].defaultSelected=!0));null!==e||t[r].disabled||(e=t[r])}null!==e&&(e.selected=!0)}}function at(t,e){if(null!=e.dangerouslySetInnerHTML)throw Error(s(91));return z({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function rt(t,e){var n=e.value;if(null==n){if(n=e.children,e=e.defaultValue,null!=n){if(null!=e)throw Error(s(92));if(et(n)){if(1<n.length)throw Error(s(93));n=n[0]}e=n}null==e&&(e=""),n=e}t._wrapperState={initialValue:H(n)}}function st(t,e){var n=H(e.value),a=H(e.defaultValue);null!=n&&((n=""+n)!==t.value&&(t.value=n),null==e.defaultValue&&t.defaultValue!==n&&(t.defaultValue=n)),null!=a&&(t.defaultValue=""+a)}function ot(t){var e=t.textContent;e===t._wrapperState.initialValue&&""!==e&&null!==e&&(t.value=e)}function it(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ct(t,e){return null==t||"http://www.w3.org/1999/xhtml"===t?it(e):"http://www.w3.org/2000/svg"===t&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":t}var lt,ut,ht=(ut=function(t,e){if("http://www.w3.org/2000/svg"!==t.namespaceURI||"innerHTML"in t)t.innerHTML=e;else{for((lt=lt||document.createElement("div")).innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=lt.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,e,n,a){MSApp.execUnsafeLocalFunction((function(){return ut(t,e)}))}:ut);function dt(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&3===n.nodeType)return void(n.nodeValue=e)}t.textContent=e}var pt={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ft=["Webkit","ms","Moz","O"];function mt(t,e,n){return null==e||"boolean"===typeof e||""===e?"":n||"number"!==typeof e||0===e||pt.hasOwnProperty(t)&&pt[t]?(""+e).trim():e+"px"}function gt(t,e){for(var n in t=t.style,e)if(e.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=mt(n,e[n],a);"float"===n&&(n="cssFloat"),a?t.setProperty(n,r):t[n]=r}}Object.keys(pt).forEach((function(t){ft.forEach((function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),pt[e]=pt[t]}))}));var yt=z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function bt(t,e){if(e){if(yt[t]&&(null!=e.children||null!=e.dangerouslySetInnerHTML))throw Error(s(137,t));if(null!=e.dangerouslySetInnerHTML){if(null!=e.children)throw Error(s(60));if("object"!==typeof e.dangerouslySetInnerHTML||!("__html"in e.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=e.style&&"object"!==typeof e.style)throw Error(s(62))}}function xt(t,e){if(-1===t.indexOf("-"))return"string"===typeof e.is;switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var vt=null;function wt(t){return(t=t.target||t.srcElement||window).correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}var kt=null,It=null,St=null;function Nt(t){if(t=xr(t)){if("function"!==typeof kt)throw Error(s(280));var e=t.stateNode;e&&(e=wr(e),kt(t.stateNode,t.type,e))}}function Tt(t){It?St?St.push(t):St=[t]:It=t}function Et(){if(It){var t=It,e=St;if(St=It=null,Nt(t),e)for(t=0;t<e.length;t++)Nt(e[t])}}function Ct(t,e){return t(e)}function Rt(){}var _t=!1;function At(t,e,n){if(_t)return t(e,n);_t=!0;try{return Ct(t,e,n)}finally{_t=!1,(null!==It||null!==St)&&(Rt(),Et())}}function Dt(t,e){var n=t.stateNode;if(null===n)return null;var a=wr(n);if(null===a)return null;n=a[e];t:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(t=t.type)||"input"===t||"select"===t||"textarea"===t)),t=!a;break t;default:t=!1}if(t)return null;if(n&&"function"!==typeof n)throw Error(s(231,e,typeof n));return n}var Ft=!1;if(u)try{var Ot={};Object.defineProperty(Ot,"passive",{get:function(){Ft=!0}}),window.addEventListener("test",Ot,Ot),window.removeEventListener("test",Ot,Ot)}catch(ut){Ft=!1}function Mt(t,e,n,a,r,s,o,i,c){var l=Array.prototype.slice.call(arguments,3);try{e.apply(n,l)}catch(u){this.onError(u)}}var Lt=!1,zt=null,Pt=!1,Bt=null,Wt={onError:function(t){Lt=!0,zt=t}};function Ut(t,e,n,a,r,s,o,i,c){Lt=!1,zt=null,Mt.apply(Wt,arguments)}function Vt(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do{0!==(4098&(e=t).flags)&&(n=e.return),t=e.return}while(t)}return 3===e.tag?n:null}function Gt(t){if(13===t.tag){var e=t.memoizedState;if(null===e&&(null!==(t=t.alternate)&&(e=t.memoizedState)),null!==e)return e.dehydrated}return null}function Ht(t){if(Vt(t)!==t)throw Error(s(188))}function jt(t){return null!==(t=function(t){var e=t.alternate;if(!e){if(null===(e=Vt(t)))throw Error(s(188));return e!==t?null:t}for(var n=t,a=e;;){var r=n.return;if(null===r)break;var o=r.alternate;if(null===o){if(null!==(a=r.return)){n=a;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===n)return Ht(r),t;if(o===a)return Ht(r),e;o=o.sibling}throw Error(s(188))}if(n.return!==a.return)n=r,a=o;else{for(var i=!1,c=r.child;c;){if(c===n){i=!0,n=r,a=o;break}if(c===a){i=!0,a=r,n=o;break}c=c.sibling}if(!i){for(c=o.child;c;){if(c===n){i=!0,n=o,a=r;break}if(c===a){i=!0,a=o,n=r;break}c=c.sibling}if(!i)throw Error(s(189))}}if(n.alternate!==a)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?t:e}(t))?Kt(t):null}function Kt(t){if(5===t.tag||6===t.tag)return t;for(t=t.child;null!==t;){var e=Kt(t);if(null!==e)return e;t=t.sibling}return null}var qt=r.unstable_scheduleCallback,Xt=r.unstable_cancelCallback,Yt=r.unstable_shouldYield,Qt=r.unstable_requestPaint,Jt=r.unstable_now,Zt=r.unstable_getCurrentPriorityLevel,$t=r.unstable_ImmediatePriority,te=r.unstable_UserBlockingPriority,ee=r.unstable_NormalPriority,ne=r.unstable_LowPriority,ae=r.unstable_IdlePriority,re=null,se=null;var oe=Math.clz32?Math.clz32:function(t){return t>>>=0,0===t?32:31-(ie(t)/ce|0)|0},ie=Math.log,ce=Math.LN2;var le=64,ue=4194304;function he(t){switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&t;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&t;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return t}}function de(t,e){var n=t.pendingLanes;if(0===n)return 0;var a=0,r=t.suspendedLanes,s=t.pingedLanes,o=268435455&n;if(0!==o){var i=o&~r;0!==i?a=he(i):0!==(s&=o)&&(a=he(s))}else 0!==(o=n&~r)?a=he(o):0!==s&&(a=he(s));if(0===a)return 0;if(0!==e&&e!==a&&0===(e&r)&&((r=a&-a)>=(s=e&-e)||16===r&&0!==(4194240&s)))return e;if(0!==(4&a)&&(a|=16&n),0!==(e=t.entangledLanes))for(t=t.entanglements,e&=a;0<e;)r=1<<(n=31-oe(e)),a|=t[n],e&=~r;return a}function pe(t,e){switch(t){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;default:return-1}}function fe(t){return 0!==(t=-1073741825&t.pendingLanes)?t:1073741824&t?1073741824:0}function me(){var t=le;return 0===(4194240&(le<<=1))&&(le=64),t}function ge(t){for(var e=[],n=0;31>n;n++)e.push(t);return e}function ye(t,e,n){t.pendingLanes|=e,536870912!==e&&(t.suspendedLanes=0,t.pingedLanes=0),(t=t.eventTimes)[e=31-oe(e)]=n}function be(t,e){var n=t.entangledLanes|=e;for(t=t.entanglements;n;){var a=31-oe(n),r=1<<a;r&e|t[a]&e&&(t[a]|=e),n&=~r}}var xe=0;function ve(t){return 1<(t&=-t)?4<t?0!==(268435455&t)?16:536870912:4:1}var we,ke,Ie,Se,Ne,Te=!1,Ee=[],Ce=null,Re=null,_e=null,Ae=new Map,De=new Map,Fe=[],Oe="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Me(t,e){switch(t){case"focusin":case"focusout":Ce=null;break;case"dragenter":case"dragleave":Re=null;break;case"mouseover":case"mouseout":_e=null;break;case"pointerover":case"pointerout":Ae.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":De.delete(e.pointerId)}}function Le(t,e,n,a,r,s){return null===t||t.nativeEvent!==s?(t={blockedOn:e,domEventName:n,eventSystemFlags:a,nativeEvent:s,targetContainers:[r]},null!==e&&(null!==(e=xr(e))&&ke(e)),t):(t.eventSystemFlags|=a,e=t.targetContainers,null!==r&&-1===e.indexOf(r)&&e.push(r),t)}function ze(t){var e=br(t.target);if(null!==e){var n=Vt(e);if(null!==n)if(13===(e=n.tag)){if(null!==(e=Gt(n)))return t.blockedOn=e,void Ne(t.priority,(function(){Ie(n)}))}else if(3===e&&n.stateNode.current.memoizedState.isDehydrated)return void(t.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}t.blockedOn=null}function Pe(t){if(null!==t.blockedOn)return!1;for(var e=t.targetContainers;0<e.length;){var n=Ye(t.domEventName,t.eventSystemFlags,e[0],t.nativeEvent);if(null!==n)return null!==(e=xr(n))&&ke(e),t.blockedOn=n,!1;var a=new(n=t.nativeEvent).constructor(n.type,n);vt=a,n.target.dispatchEvent(a),vt=null,e.shift()}return!0}function Be(t,e,n){Pe(t)&&n.delete(e)}function We(){Te=!1,null!==Ce&&Pe(Ce)&&(Ce=null),null!==Re&&Pe(Re)&&(Re=null),null!==_e&&Pe(_e)&&(_e=null),Ae.forEach(Be),De.forEach(Be)}function Ue(t,e){t.blockedOn===e&&(t.blockedOn=null,Te||(Te=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,We)))}function Ve(t){function e(e){return Ue(e,t)}if(0<Ee.length){Ue(Ee[0],t);for(var n=1;n<Ee.length;n++){var a=Ee[n];a.blockedOn===t&&(a.blockedOn=null)}}for(null!==Ce&&Ue(Ce,t),null!==Re&&Ue(Re,t),null!==_e&&Ue(_e,t),Ae.forEach(e),De.forEach(e),n=0;n<Fe.length;n++)(a=Fe[n]).blockedOn===t&&(a.blockedOn=null);for(;0<Fe.length&&null===(n=Fe[0]).blockedOn;)ze(n),null===n.blockedOn&&Fe.shift()}var Ge=v.ReactCurrentBatchConfig,He=!0;function je(t,e,n,a){var r=xe,s=Ge.transition;Ge.transition=null;try{xe=1,qe(t,e,n,a)}finally{xe=r,Ge.transition=s}}function Ke(t,e,n,a){var r=xe,s=Ge.transition;Ge.transition=null;try{xe=4,qe(t,e,n,a)}finally{xe=r,Ge.transition=s}}function qe(t,e,n,a){if(He){var r=Ye(t,e,n,a);if(null===r)Ha(t,e,a,Xe,n),Me(t,a);else if(function(t,e,n,a,r){switch(e){case"focusin":return Ce=Le(Ce,t,e,n,a,r),!0;case"dragenter":return Re=Le(Re,t,e,n,a,r),!0;case"mouseover":return _e=Le(_e,t,e,n,a,r),!0;case"pointerover":var s=r.pointerId;return Ae.set(s,Le(Ae.get(s)||null,t,e,n,a,r)),!0;case"gotpointercapture":return s=r.pointerId,De.set(s,Le(De.get(s)||null,t,e,n,a,r)),!0}return!1}(r,t,e,n,a))a.stopPropagation();else if(Me(t,a),4&e&&-1<Oe.indexOf(t)){for(;null!==r;){var s=xr(r);if(null!==s&&we(s),null===(s=Ye(t,e,n,a))&&Ha(t,e,a,Xe,n),s===r)break;r=s}null!==r&&a.stopPropagation()}else Ha(t,e,a,null,n)}}var Xe=null;function Ye(t,e,n,a){if(Xe=null,null!==(t=br(t=wt(a))))if(null===(e=Vt(t)))t=null;else if(13===(n=e.tag)){if(null!==(t=Gt(e)))return t;t=null}else if(3===n){if(e.stateNode.current.memoizedState.isDehydrated)return 3===e.tag?e.stateNode.containerInfo:null;t=null}else e!==t&&(t=null);return Xe=t,null}function Qe(t){switch(t){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Zt()){case $t:return 1;case te:return 4;case ee:case ne:return 16;case ae:return 536870912;default:return 16}default:return 16}}var Je=null,Ze=null,$e=null;function tn(){if($e)return $e;var t,e,n=Ze,a=n.length,r="value"in Je?Je.value:Je.textContent,s=r.length;for(t=0;t<a&&n[t]===r[t];t++);var o=a-t;for(e=1;e<=o&&n[a-e]===r[s-e];e++);return $e=r.slice(t,1<e?1-e:void 0)}function en(t){var e=t.keyCode;return"charCode"in t?0===(t=t.charCode)&&13===e&&(t=13):t=e,10===t&&(t=13),32<=t||13===t?t:0}function nn(){return!0}function an(){return!1}function rn(t){function e(e,n,a,r,s){for(var o in this._reactName=e,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=s,this.currentTarget=null,t)t.hasOwnProperty(o)&&(e=t[o],this[o]=e?e(r):r[o]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:an,this.isPropagationStopped=an,this}return z(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():"unknown"!==typeof t.returnValue&&(t.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():"unknown"!==typeof t.cancelBubble&&(t.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),e}var sn,on,cn,ln={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=rn(ln),hn=z({},ln,{view:0,detail:0}),dn=rn(hn),pn=z({},hn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Nn,button:0,buttons:0,relatedTarget:function(t){return void 0===t.relatedTarget?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==cn&&(cn&&"mousemove"===t.type?(sn=t.screenX-cn.screenX,on=t.screenY-cn.screenY):on=sn=0,cn=t),sn)},movementY:function(t){return"movementY"in t?t.movementY:on}}),fn=rn(pn),mn=rn(z({},pn,{dataTransfer:0})),gn=rn(z({},hn,{relatedTarget:0})),yn=rn(z({},ln,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=z({},ln,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),xn=rn(bn),vn=rn(z({},ln,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},In={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Sn(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):!!(t=In[t])&&!!e[t]}function Nn(){return Sn}var Tn=z({},hn,{key:function(t){if(t.key){var e=wn[t.key]||t.key;if("Unidentified"!==e)return e}return"keypress"===t.type?13===(t=en(t))?"Enter":String.fromCharCode(t):"keydown"===t.type||"keyup"===t.type?kn[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Nn,charCode:function(t){return"keypress"===t.type?en(t):0},keyCode:function(t){return"keydown"===t.type||"keyup"===t.type?t.keyCode:0},which:function(t){return"keypress"===t.type?en(t):"keydown"===t.type||"keyup"===t.type?t.keyCode:0}}),En=rn(Tn),Cn=rn(z({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Rn=rn(z({},hn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Nn})),_n=rn(z({},ln,{propertyName:0,elapsedTime:0,pseudoElement:0})),An=z({},pn,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),Dn=rn(An),Fn=[9,13,27,32],On=u&&"CompositionEvent"in window,Mn=null;u&&"documentMode"in document&&(Mn=document.documentMode);var Ln=u&&"TextEvent"in window&&!Mn,zn=u&&(!On||Mn&&8<Mn&&11>=Mn),Pn=String.fromCharCode(32),Bn=!1;function Wn(t,e){switch(t){case"keyup":return-1!==Fn.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(t){return"object"===typeof(t=t.detail)&&"data"in t?t.data:null}var Vn=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return"input"===e?!!Gn[t.type]:"textarea"===e}function jn(t,e,n,a){Tt(a),0<(e=Ka(e,"onChange")).length&&(n=new un("onChange","change",null,n,a),t.push({event:n,listeners:e}))}var Kn=null,qn=null;function Xn(t){Pa(t,0)}function Yn(t){if(q(vr(t)))return t}function Qn(t,e){if("change"===t)return e}var Jn=!1;if(u){var Zn;if(u){var $n="oninput"in document;if(!$n){var ta=document.createElement("div");ta.setAttribute("oninput","return;"),$n="function"===typeof ta.oninput}Zn=$n}else Zn=!1;Jn=Zn&&(!document.documentMode||9<document.documentMode)}function ea(){Kn&&(Kn.detachEvent("onpropertychange",na),qn=Kn=null)}function na(t){if("value"===t.propertyName&&Yn(qn)){var e=[];jn(e,qn,t,wt(t)),At(Xn,e)}}function aa(t,e,n){"focusin"===t?(ea(),qn=n,(Kn=e).attachEvent("onpropertychange",na)):"focusout"===t&&ea()}function ra(t){if("selectionchange"===t||"keyup"===t||"keydown"===t)return Yn(qn)}function sa(t,e){if("click"===t)return Yn(e)}function oa(t,e){if("input"===t||"change"===t)return Yn(e)}var ia="function"===typeof Object.is?Object.is:function(t,e){return t===e&&(0!==t||1/t===1/e)||t!==t&&e!==e};function ca(t,e){if(ia(t,e))return!0;if("object"!==typeof t||null===t||"object"!==typeof e||null===e)return!1;var n=Object.keys(t),a=Object.keys(e);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!h.call(e,r)||!ia(t[r],e[r]))return!1}return!0}function la(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function ua(t,e){var n,a=la(t);for(t=0;a;){if(3===a.nodeType){if(n=t+a.textContent.length,t<=e&&n>=e)return{node:a,offset:e-t};t=n}t:{for(;a;){if(a.nextSibling){a=a.nextSibling;break t}a=a.parentNode}a=void 0}a=la(a)}}function ha(t,e){return!(!t||!e)&&(t===e||(!t||3!==t.nodeType)&&(e&&3===e.nodeType?ha(t,e.parentNode):"contains"in t?t.contains(e):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(e))))}function da(){for(var t=window,e=X();e instanceof t.HTMLIFrameElement;){try{var n="string"===typeof e.contentWindow.location.href}catch(a){n=!1}if(!n)break;e=X((t=e.contentWindow).document)}return e}function pa(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&("input"===e&&("text"===t.type||"search"===t.type||"tel"===t.type||"url"===t.type||"password"===t.type)||"textarea"===e||"true"===t.contentEditable)}function fa(t){var e=da(),n=t.focusedElem,a=t.selectionRange;if(e!==n&&n&&n.ownerDocument&&ha(n.ownerDocument.documentElement,n)){if(null!==a&&pa(n))if(e=a.start,void 0===(t=a.end)&&(t=e),"selectionStart"in n)n.selectionStart=e,n.selectionEnd=Math.min(t,n.value.length);else if((t=(e=n.ownerDocument||document)&&e.defaultView||window).getSelection){t=t.getSelection();var r=n.textContent.length,s=Math.min(a.start,r);a=void 0===a.end?s:Math.min(a.end,r),!t.extend&&s>a&&(r=a,a=s,s=r),r=ua(n,s);var o=ua(n,a);r&&o&&(1!==t.rangeCount||t.anchorNode!==r.node||t.anchorOffset!==r.offset||t.focusNode!==o.node||t.focusOffset!==o.offset)&&((e=e.createRange()).setStart(r.node,r.offset),t.removeAllRanges(),s>a?(t.addRange(e),t.extend(o.node,o.offset)):(e.setEnd(o.node,o.offset),t.addRange(e)))}for(e=[],t=n;t=t.parentNode;)1===t.nodeType&&e.push({element:t,left:t.scrollLeft,top:t.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<e.length;n++)(t=e[n]).element.scrollLeft=t.left,t.element.scrollTop=t.top}}var ma=u&&"documentMode"in document&&11>=document.documentMode,ga=null,ya=null,ba=null,xa=!1;function va(t,e,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;xa||null==ga||ga!==X(a)||("selectionStart"in(a=ga)&&pa(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ba&&ca(ba,a)||(ba=a,0<(a=Ka(ya,"onSelect")).length&&(e=new un("onSelect","select",null,e,n),t.push({event:e,listeners:a}),e.target=ga)))}function wa(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var ka={animationend:wa("Animation","AnimationEnd"),animationiteration:wa("Animation","AnimationIteration"),animationstart:wa("Animation","AnimationStart"),transitionend:wa("Transition","TransitionEnd")},Ia={},Sa={};function Na(t){if(Ia[t])return Ia[t];if(!ka[t])return t;var e,n=ka[t];for(e in n)if(n.hasOwnProperty(e)&&e in Sa)return Ia[t]=n[e];return t}u&&(Sa=document.createElement("div").style,"AnimationEvent"in window||(delete ka.animationend.animation,delete ka.animationiteration.animation,delete ka.animationstart.animation),"TransitionEvent"in window||delete ka.transitionend.transition);var Ta=Na("animationend"),Ea=Na("animationiteration"),Ca=Na("animationstart"),Ra=Na("transitionend"),_a=new Map,Aa="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Da(t,e){_a.set(t,e),c(e,[t])}for(var Fa=0;Fa<Aa.length;Fa++){var Oa=Aa[Fa];Da(Oa.toLowerCase(),"on"+(Oa[0].toUpperCase()+Oa.slice(1)))}Da(Ta,"onAnimationEnd"),Da(Ea,"onAnimationIteration"),Da(Ca,"onAnimationStart"),Da("dblclick","onDoubleClick"),Da("focusin","onFocus"),Da("focusout","onBlur"),Da(Ra,"onTransitionEnd"),l("onMouseEnter",["mouseout","mouseover"]),l("onMouseLeave",["mouseout","mouseover"]),l("onPointerEnter",["pointerout","pointerover"]),l("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ma="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),La=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ma));function za(t,e,n){var a=t.type||"unknown-event";t.currentTarget=n,function(t,e,n,a,r,o,i,c,l){if(Ut.apply(this,arguments),Lt){if(!Lt)throw Error(s(198));var u=zt;Lt=!1,zt=null,Pt||(Pt=!0,Bt=u)}}(a,e,void 0,t),t.currentTarget=null}function Pa(t,e){e=0!==(4&e);for(var n=0;n<t.length;n++){var a=t[n],r=a.event;a=a.listeners;t:{var s=void 0;if(e)for(var o=a.length-1;0<=o;o--){var i=a[o],c=i.instance,l=i.currentTarget;if(i=i.listener,c!==s&&r.isPropagationStopped())break t;za(r,i,l),s=c}else for(o=0;o<a.length;o++){if(c=(i=a[o]).instance,l=i.currentTarget,i=i.listener,c!==s&&r.isPropagationStopped())break t;za(r,i,l),s=c}}}if(Pt)throw t=Bt,Pt=!1,Bt=null,t}function Ba(t,e){var n=e[mr];void 0===n&&(n=e[mr]=new Set);var a=t+"__bubble";n.has(a)||(Ga(e,t,2,!1),n.add(a))}function Wa(t,e,n){var a=0;e&&(a|=4),Ga(n,t,a,e)}var Ua="_reactListening"+Math.random().toString(36).slice(2);function Va(t){if(!t[Ua]){t[Ua]=!0,o.forEach((function(e){"selectionchange"!==e&&(La.has(e)||Wa(e,!1,t),Wa(e,!0,t))}));var e=9===t.nodeType?t:t.ownerDocument;null===e||e[Ua]||(e[Ua]=!0,Wa("selectionchange",!1,e))}}function Ga(t,e,n,a){switch(Qe(e)){case 1:var r=je;break;case 4:r=Ke;break;default:r=qe}n=r.bind(null,e,n,t),r=void 0,!Ft||"touchstart"!==e&&"touchmove"!==e&&"wheel"!==e||(r=!0),a?void 0!==r?t.addEventListener(e,n,{capture:!0,passive:r}):t.addEventListener(e,n,!0):void 0!==r?t.addEventListener(e,n,{passive:r}):t.addEventListener(e,n,!1)}function Ha(t,e,n,a,r){var s=a;if(0===(1&e)&&0===(2&e)&&null!==a)t:for(;;){if(null===a)return;var o=a.tag;if(3===o||4===o){var i=a.stateNode.containerInfo;if(i===r||8===i.nodeType&&i.parentNode===r)break;if(4===o)for(o=a.return;null!==o;){var c=o.tag;if((3===c||4===c)&&((c=o.stateNode.containerInfo)===r||8===c.nodeType&&c.parentNode===r))return;o=o.return}for(;null!==i;){if(null===(o=br(i)))return;if(5===(c=o.tag)||6===c){a=s=o;continue t}i=i.parentNode}}a=a.return}At((function(){var a=s,r=wt(n),o=[];t:{var i=_a.get(t);if(void 0!==i){var c=un,l=t;switch(t){case"keypress":if(0===en(n))break t;case"keydown":case"keyup":c=En;break;case"focusin":l="focus",c=gn;break;case"focusout":l="blur",c=gn;break;case"beforeblur":case"afterblur":c=gn;break;case"click":if(2===n.button)break t;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=Rn;break;case Ta:case Ea:case Ca:c=yn;break;case Ra:c=_n;break;case"scroll":c=dn;break;case"wheel":c=Dn;break;case"copy":case"cut":case"paste":c=xn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=Cn}var u=0!==(4&e),h=!u&&"scroll"===t,d=u?null!==i?i+"Capture":null:i;u=[];for(var p,f=a;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&(null!=(m=Dt(f,d))&&u.push(ja(f,m,p)))),h)break;f=f.return}0<u.length&&(i=new c(i,l,null,n,r),o.push({event:i,listeners:u}))}}if(0===(7&e)){if(c="mouseout"===t||"pointerout"===t,(!(i="mouseover"===t||"pointerover"===t)||n===vt||!(l=n.relatedTarget||n.fromElement)||!br(l)&&!l[fr])&&(c||i)&&(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,c?(c=a,null!==(l=(l=n.relatedTarget||n.toElement)?br(l):null)&&(l!==(h=Vt(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(c=null,l=a),c!==l)){if(u=fn,m="onMouseLeave",d="onMouseEnter",f="mouse","pointerout"!==t&&"pointerover"!==t||(u=Cn,m="onPointerLeave",d="onPointerEnter",f="pointer"),h=null==c?i:vr(c),p=null==l?i:vr(l),(i=new u(m,f+"leave",c,n,r)).target=h,i.relatedTarget=p,m=null,br(r)===a&&((u=new u(d,f+"enter",l,n,r)).target=p,u.relatedTarget=h,m=u),h=m,c&&l)t:{for(d=l,f=0,p=u=c;p;p=qa(p))f++;for(p=0,m=d;m;m=qa(m))p++;for(;0<f-p;)u=qa(u),f--;for(;0<p-f;)d=qa(d),p--;for(;f--;){if(u===d||null!==d&&u===d.alternate)break t;u=qa(u),d=qa(d)}u=null}else u=null;null!==c&&Xa(o,i,c,u,!1),null!==l&&null!==h&&Xa(o,h,l,u,!0)}if("select"===(c=(i=a?vr(a):window).nodeName&&i.nodeName.toLowerCase())||"input"===c&&"file"===i.type)var g=Qn;else if(Hn(i))if(Jn)g=oa;else{g=ra;var y=aa}else(c=i.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=sa);switch(g&&(g=g(t,a))?jn(o,g,n,r):(y&&y(t,i,a),"focusout"===t&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&tt(i,"number",i.value)),y=a?vr(a):window,t){case"focusin":(Hn(y)||"true"===y.contentEditable)&&(ga=y,ya=a,ba=null);break;case"focusout":ba=ya=ga=null;break;case"mousedown":xa=!0;break;case"contextmenu":case"mouseup":case"dragend":xa=!1,va(o,n,r);break;case"selectionchange":if(ma)break;case"keydown":case"keyup":va(o,n,r)}var b;if(On)t:{switch(t){case"compositionstart":var x="onCompositionStart";break t;case"compositionend":x="onCompositionEnd";break t;case"compositionupdate":x="onCompositionUpdate";break t}x=void 0}else Vn?Wn(t,n)&&(x="onCompositionEnd"):"keydown"===t&&229===n.keyCode&&(x="onCompositionStart");x&&(zn&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==x?"onCompositionEnd"===x&&Vn&&(b=tn()):(Ze="value"in(Je=r)?Je.value:Je.textContent,Vn=!0)),0<(y=Ka(a,x)).length&&(x=new vn(x,t,null,n,r),o.push({event:x,listeners:y}),b?x.data=b:null!==(b=Un(n))&&(x.data=b))),(b=Ln?function(t,e){switch(t){case"compositionend":return Un(e);case"keypress":return 32!==e.which?null:(Bn=!0,Pn);case"textInput":return(t=e.data)===Pn&&Bn?null:t;default:return null}}(t,n):function(t,e){if(Vn)return"compositionend"===t||!On&&Wn(t,e)?(t=tn(),$e=Ze=Je=null,Vn=!1,t):null;switch(t){case"paste":default:return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return zn&&"ko"!==e.locale?null:e.data}}(t,n))&&(0<(a=Ka(a,"onBeforeInput")).length&&(r=new vn("onBeforeInput","beforeinput",null,n,r),o.push({event:r,listeners:a}),r.data=b))}Pa(o,e)}))}function ja(t,e,n){return{instance:t,listener:e,currentTarget:n}}function Ka(t,e){for(var n=e+"Capture",a=[];null!==t;){var r=t,s=r.stateNode;5===r.tag&&null!==s&&(r=s,null!=(s=Dt(t,n))&&a.unshift(ja(t,s,r)),null!=(s=Dt(t,e))&&a.push(ja(t,s,r))),t=t.return}return a}function qa(t){if(null===t)return null;do{t=t.return}while(t&&5!==t.tag);return t||null}function Xa(t,e,n,a,r){for(var s=e._reactName,o=[];null!==n&&n!==a;){var i=n,c=i.alternate,l=i.stateNode;if(null!==c&&c===a)break;5===i.tag&&null!==l&&(i=l,r?null!=(c=Dt(n,s))&&o.unshift(ja(n,c,i)):r||null!=(c=Dt(n,s))&&o.push(ja(n,c,i))),n=n.return}0!==o.length&&t.push({event:e,listeners:o})}var Ya=/\r\n?/g,Qa=/\u0000|\uFFFD/g;function Ja(t){return("string"===typeof t?t:""+t).replace(Ya,"\n").replace(Qa,"")}function Za(t,e,n){if(e=Ja(e),Ja(t)!==e&&n)throw Error(s(425))}function $a(){}var tr=null,er=null;function nr(t,e){return"textarea"===t||"noscript"===t||"string"===typeof e.children||"number"===typeof e.children||"object"===typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var ar="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,sr="function"===typeof Promise?Promise:void 0,or="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof sr?function(t){return sr.resolve(null).then(t).catch(ir)}:ar;function ir(t){setTimeout((function(){throw t}))}function cr(t,e){var n=e,a=0;do{var r=n.nextSibling;if(t.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===a)return t.removeChild(r),void Ve(e);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=r}while(n);Ve(e)}function lr(t){for(;null!=t;t=t.nextSibling){var e=t.nodeType;if(1===e||3===e)break;if(8===e){if("$"===(e=t.data)||"$!"===e||"$?"===e)break;if("/$"===e)return null}}return t}function ur(t){t=t.previousSibling;for(var e=0;t;){if(8===t.nodeType){var n=t.data;if("$"===n||"$!"===n||"$?"===n){if(0===e)return t;e--}else"/$"===n&&e++}t=t.previousSibling}return null}var hr=Math.random().toString(36).slice(2),dr="__reactFiber$"+hr,pr="__reactProps$"+hr,fr="__reactContainer$"+hr,mr="__reactEvents$"+hr,gr="__reactListeners$"+hr,yr="__reactHandles$"+hr;function br(t){var e=t[dr];if(e)return e;for(var n=t.parentNode;n;){if(e=n[fr]||n[dr]){if(n=e.alternate,null!==e.child||null!==n&&null!==n.child)for(t=ur(t);null!==t;){if(n=t[dr])return n;t=ur(t)}return e}n=(t=n).parentNode}return null}function xr(t){return!(t=t[dr]||t[fr])||5!==t.tag&&6!==t.tag&&13!==t.tag&&3!==t.tag?null:t}function vr(t){if(5===t.tag||6===t.tag)return t.stateNode;throw Error(s(33))}function wr(t){return t[pr]||null}var kr=[],Ir=-1;function Sr(t){return{current:t}}function Nr(t){0>Ir||(t.current=kr[Ir],kr[Ir]=null,Ir--)}function Tr(t,e){Ir++,kr[Ir]=t.current,t.current=e}var Er={},Cr=Sr(Er),Rr=Sr(!1),_r=Er;function Ar(t,e){var n=t.type.contextTypes;if(!n)return Er;var a=t.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===e)return a.__reactInternalMemoizedMaskedChildContext;var r,s={};for(r in n)s[r]=e[r];return a&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=s),s}function Dr(t){return null!==(t=t.childContextTypes)&&void 0!==t}function Fr(){Nr(Rr),Nr(Cr)}function Or(t,e,n){if(Cr.current!==Er)throw Error(s(168));Tr(Cr,e),Tr(Rr,n)}function Mr(t,e,n){var a=t.stateNode;if(e=e.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var r in a=a.getChildContext())if(!(r in e))throw Error(s(108,G(t)||"Unknown",r));return z({},n,a)}function Lr(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||Er,_r=Cr.current,Tr(Cr,t),Tr(Rr,Rr.current),!0}function zr(t,e,n){var a=t.stateNode;if(!a)throw Error(s(169));n?(t=Mr(t,e,_r),a.__reactInternalMemoizedMergedChildContext=t,Nr(Rr),Nr(Cr),Tr(Cr,t)):Nr(Rr),Tr(Rr,n)}var Pr=null,Br=!1,Wr=!1;function Ur(t){null===Pr?Pr=[t]:Pr.push(t)}function Vr(){if(!Wr&&null!==Pr){Wr=!0;var t=0,e=xe;try{var n=Pr;for(xe=1;t<n.length;t++){var a=n[t];do{a=a(!0)}while(null!==a)}Pr=null,Br=!1}catch(r){throw null!==Pr&&(Pr=Pr.slice(t+1)),qt($t,Vr),r}finally{xe=e,Wr=!1}}return null}var Gr=[],Hr=0,jr=null,Kr=0,qr=[],Xr=0,Yr=null,Qr=1,Jr="";function Zr(t,e){Gr[Hr++]=Kr,Gr[Hr++]=jr,jr=t,Kr=e}function $r(t,e,n){qr[Xr++]=Qr,qr[Xr++]=Jr,qr[Xr++]=Yr,Yr=t;var a=Qr;t=Jr;var r=32-oe(a)-1;a&=~(1<<r),n+=1;var s=32-oe(e)+r;if(30<s){var o=r-r%5;s=(a&(1<<o)-1).toString(32),a>>=o,r-=o,Qr=1<<32-oe(e)+r|n<<r|a,Jr=s+t}else Qr=1<<s|n<<r|a,Jr=t}function ts(t){null!==t.return&&(Zr(t,1),$r(t,1,0))}function es(t){for(;t===jr;)jr=Gr[--Hr],Gr[Hr]=null,Kr=Gr[--Hr],Gr[Hr]=null;for(;t===Yr;)Yr=qr[--Xr],qr[Xr]=null,Jr=qr[--Xr],qr[Xr]=null,Qr=qr[--Xr],qr[Xr]=null}var ns=null,as=null,rs=!1,ss=null;function os(t,e){var n=Dl(5,null,null,0);n.elementType="DELETED",n.stateNode=e,n.return=t,null===(e=t.deletions)?(t.deletions=[n],t.flags|=16):e.push(n)}function is(t,e){switch(t.tag){case 5:var n=t.type;return null!==(e=1!==e.nodeType||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(t.stateNode=e,ns=t,as=lr(e.firstChild),!0);case 6:return null!==(e=""===t.pendingProps||3!==e.nodeType?null:e)&&(t.stateNode=e,ns=t,as=null,!0);case 13:return null!==(e=8!==e.nodeType?null:e)&&(n=null!==Yr?{id:Qr,overflow:Jr}:null,t.memoizedState={dehydrated:e,treeContext:n,retryLane:1073741824},(n=Dl(18,null,null,0)).stateNode=e,n.return=t,t.child=n,ns=t,as=null,!0);default:return!1}}function cs(t){return 0!==(1&t.mode)&&0===(128&t.flags)}function ls(t){if(rs){var e=as;if(e){var n=e;if(!is(t,e)){if(cs(t))throw Error(s(418));e=lr(n.nextSibling);var a=ns;e&&is(t,e)?os(a,n):(t.flags=-4097&t.flags|2,rs=!1,ns=t)}}else{if(cs(t))throw Error(s(418));t.flags=-4097&t.flags|2,rs=!1,ns=t}}}function us(t){for(t=t.return;null!==t&&5!==t.tag&&3!==t.tag&&13!==t.tag;)t=t.return;ns=t}function hs(t){if(t!==ns)return!1;if(!rs)return us(t),rs=!0,!1;var e;if((e=3!==t.tag)&&!(e=5!==t.tag)&&(e="head"!==(e=t.type)&&"body"!==e&&!nr(t.type,t.memoizedProps)),e&&(e=as)){if(cs(t))throw ds(),Error(s(418));for(;e;)os(t,e),e=lr(e.nextSibling)}if(us(t),13===t.tag){if(!(t=null!==(t=t.memoizedState)?t.dehydrated:null))throw Error(s(317));t:{for(t=t.nextSibling,e=0;t;){if(8===t.nodeType){var n=t.data;if("/$"===n){if(0===e){as=lr(t.nextSibling);break t}e--}else"$"!==n&&"$!"!==n&&"$?"!==n||e++}t=t.nextSibling}as=null}}else as=ns?lr(t.stateNode.nextSibling):null;return!0}function ds(){for(var t=as;t;)t=lr(t.nextSibling)}function ps(){as=ns=null,rs=!1}function fs(t){null===ss?ss=[t]:ss.push(t)}var ms=v.ReactCurrentBatchConfig;function gs(t,e){if(t&&t.defaultProps){for(var n in e=z({},e),t=t.defaultProps)void 0===e[n]&&(e[n]=t[n]);return e}return e}var ys=Sr(null),bs=null,xs=null,vs=null;function ws(){vs=xs=bs=null}function ks(t){var e=ys.current;Nr(ys),t._currentValue=e}function Is(t,e,n){for(;null!==t;){var a=t.alternate;if((t.childLanes&e)!==e?(t.childLanes|=e,null!==a&&(a.childLanes|=e)):null!==a&&(a.childLanes&e)!==e&&(a.childLanes|=e),t===n)break;t=t.return}}function Ss(t,e){bs=t,vs=xs=null,null!==(t=t.dependencies)&&null!==t.firstContext&&(0!==(t.lanes&e)&&(vi=!0),t.firstContext=null)}function Ns(t){var e=t._currentValue;if(vs!==t)if(t={context:t,memoizedValue:e,next:null},null===xs){if(null===bs)throw Error(s(308));xs=t,bs.dependencies={lanes:0,firstContext:t}}else xs=xs.next=t;return e}var Ts=null;function Es(t){null===Ts?Ts=[t]:Ts.push(t)}function Cs(t,e,n,a){var r=e.interleaved;return null===r?(n.next=n,Es(e)):(n.next=r.next,r.next=n),e.interleaved=n,Rs(t,a)}function Rs(t,e){t.lanes|=e;var n=t.alternate;for(null!==n&&(n.lanes|=e),n=t,t=t.return;null!==t;)t.childLanes|=e,null!==(n=t.alternate)&&(n.childLanes|=e),n=t,t=t.return;return 3===n.tag?n.stateNode:null}var _s=!1;function As(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ds(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,effects:t.effects})}function Fs(t,e){return{eventTime:t,lane:e,tag:0,payload:null,callback:null,next:null}}function Os(t,e,n){var a=t.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&Rc)){var r=a.pending;return null===r?e.next=e:(e.next=r.next,r.next=e),a.pending=e,Rs(t,n)}return null===(r=a.interleaved)?(e.next=e,Es(a)):(e.next=r.next,r.next=e),a.interleaved=e,Rs(t,n)}function Ms(t,e,n){if(null!==(e=e.updateQueue)&&(e=e.shared,0!==(4194240&n))){var a=e.lanes;n|=a&=t.pendingLanes,e.lanes=n,be(t,n)}}function Ls(t,e){var n=t.updateQueue,a=t.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?r=s=o:s=s.next=o,n=n.next}while(null!==n);null===s?r=s=e:s=s.next=e}else r=s=e;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:s,shared:a.shared,effects:a.effects},void(t.updateQueue=n)}null===(t=n.lastBaseUpdate)?n.firstBaseUpdate=e:t.next=e,n.lastBaseUpdate=e}function zs(t,e,n,a){var r=t.updateQueue;_s=!1;var s=r.firstBaseUpdate,o=r.lastBaseUpdate,i=r.shared.pending;if(null!==i){r.shared.pending=null;var c=i,l=c.next;c.next=null,null===o?s=l:o.next=l,o=c;var u=t.alternate;null!==u&&((i=(u=u.updateQueue).lastBaseUpdate)!==o&&(null===i?u.firstBaseUpdate=l:i.next=l,u.lastBaseUpdate=c))}if(null!==s){var h=r.baseState;for(o=0,u=l=c=null,i=s;;){var d=i.lane,p=i.eventTime;if((a&d)===d){null!==u&&(u=u.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});t:{var f=t,m=i;switch(d=e,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){h=f.call(p,h,d);break t}h=f;break t;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(d="function"===typeof(f=m.payload)?f.call(p,h,d):f)||void 0===d)break t;h=z({},h,d);break t;case 2:_s=!0}}null!==i.callback&&0!==i.lane&&(t.flags|=64,null===(d=r.effects)?r.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===u?(l=u=p,c=h):u=u.next=p,o|=d;if(null===(i=i.next)){if(null===(i=r.shared.pending))break;i=(d=i).next,d.next=null,r.lastBaseUpdate=d,r.shared.pending=null}}if(null===u&&(c=h),r.baseState=c,r.firstBaseUpdate=l,r.lastBaseUpdate=u,null!==(e=r.shared.interleaved)){r=e;do{o|=r.lane,r=r.next}while(r!==e)}else null===s&&(r.shared.lanes=0);zc|=o,t.lanes=o,t.memoizedState=h}}function Ps(t,e,n){if(t=e.effects,e.effects=null,null!==t)for(e=0;e<t.length;e++){var a=t[e],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(s(191,r));r.call(a)}}}var Bs=(new a.Component).refs;function Ws(t,e,n,a){n=null===(n=n(a,e=t.memoizedState))||void 0===n?e:z({},e,n),t.memoizedState=n,0===t.lanes&&(t.updateQueue.baseState=n)}var Us={isMounted:function(t){return!!(t=t._reactInternals)&&Vt(t)===t},enqueueSetState:function(t,e,n){t=t._reactInternals;var a=el(),r=nl(t),s=Fs(a,r);s.payload=e,void 0!==n&&null!==n&&(s.callback=n),null!==(e=Os(t,s,r))&&(al(e,t,r,a),Ms(e,t,r))},enqueueReplaceState:function(t,e,n){t=t._reactInternals;var a=el(),r=nl(t),s=Fs(a,r);s.tag=1,s.payload=e,void 0!==n&&null!==n&&(s.callback=n),null!==(e=Os(t,s,r))&&(al(e,t,r,a),Ms(e,t,r))},enqueueForceUpdate:function(t,e){t=t._reactInternals;var n=el(),a=nl(t),r=Fs(n,a);r.tag=2,void 0!==e&&null!==e&&(r.callback=e),null!==(e=Os(t,r,a))&&(al(e,t,a,n),Ms(e,t,a))}};function Vs(t,e,n,a,r,s,o){return"function"===typeof(t=t.stateNode).shouldComponentUpdate?t.shouldComponentUpdate(a,s,o):!e.prototype||!e.prototype.isPureReactComponent||(!ca(n,a)||!ca(r,s))}function Gs(t,e,n){var a=!1,r=Er,s=e.contextType;return"object"===typeof s&&null!==s?s=Ns(s):(r=Dr(e)?_r:Cr.current,s=(a=null!==(a=e.contextTypes)&&void 0!==a)?Ar(t,r):Er),e=new e(n,s),t.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=Us,t.stateNode=e,e._reactInternals=t,a&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,t.__reactInternalMemoizedMaskedChildContext=s),e}function Hs(t,e,n,a){t=e.state,"function"===typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(n,a),"function"===typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(n,a),e.state!==t&&Us.enqueueReplaceState(e,e.state,null)}function js(t,e,n,a){var r=t.stateNode;r.props=n,r.state=t.memoizedState,r.refs=Bs,As(t);var s=e.contextType;"object"===typeof s&&null!==s?r.context=Ns(s):(s=Dr(e)?_r:Cr.current,r.context=Ar(t,s)),r.state=t.memoizedState,"function"===typeof(s=e.getDerivedStateFromProps)&&(Ws(t,e,s,n),r.state=t.memoizedState),"function"===typeof e.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(e=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),e!==r.state&&Us.enqueueReplaceState(r,r.state,null),zs(t,n,r,a),r.state=t.memoizedState),"function"===typeof r.componentDidMount&&(t.flags|=4194308)}function Ks(t,e,n){if(null!==(t=n.ref)&&"function"!==typeof t&&"object"!==typeof t){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var a=n.stateNode}if(!a)throw Error(s(147,t));var r=a,o=""+t;return null!==e&&null!==e.ref&&"function"===typeof e.ref&&e.ref._stringRef===o?e.ref:(e=function(t){var e=r.refs;e===Bs&&(e=r.refs={}),null===t?delete e[o]:e[o]=t},e._stringRef=o,e)}if("string"!==typeof t)throw Error(s(284));if(!n._owner)throw Error(s(290,t))}return t}function qs(t,e){throw t=Object.prototype.toString.call(e),Error(s(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t))}function Xs(t){return(0,t._init)(t._payload)}function Ys(t){function e(e,n){if(t){var a=e.deletions;null===a?(e.deletions=[n],e.flags|=16):a.push(n)}}function n(n,a){if(!t)return null;for(;null!==a;)e(n,a),a=a.sibling;return null}function a(t,e){for(t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function r(t,e){return(t=Ol(t,e)).index=0,t.sibling=null,t}function o(e,n,a){return e.index=a,t?null!==(a=e.alternate)?(a=a.index)<n?(e.flags|=2,n):a:(e.flags|=2,n):(e.flags|=1048576,n)}function i(e){return t&&null===e.alternate&&(e.flags|=2),e}function c(t,e,n,a){return null===e||6!==e.tag?((e=Pl(n,t.mode,a)).return=t,e):((e=r(e,n)).return=t,e)}function l(t,e,n,a){var s=n.type;return s===I?h(t,e,n.props.children,a,n.key):null!==e&&(e.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===D&&Xs(s)===e.type)?((a=r(e,n.props)).ref=Ks(t,e,n),a.return=t,a):((a=Ml(n.type,n.key,n.props,null,t.mode,a)).ref=Ks(t,e,n),a.return=t,a)}function u(t,e,n,a){return null===e||4!==e.tag||e.stateNode.containerInfo!==n.containerInfo||e.stateNode.implementation!==n.implementation?((e=Bl(n,t.mode,a)).return=t,e):((e=r(e,n.children||[])).return=t,e)}function h(t,e,n,a,s){return null===e||7!==e.tag?((e=Ll(n,t.mode,a,s)).return=t,e):((e=r(e,n)).return=t,e)}function d(t,e,n){if("string"===typeof e&&""!==e||"number"===typeof e)return(e=Pl(""+e,t.mode,n)).return=t,e;if("object"===typeof e&&null!==e){switch(e.$$typeof){case w:return(n=Ml(e.type,e.key,e.props,null,t.mode,n)).ref=Ks(t,null,e),n.return=t,n;case k:return(e=Bl(e,t.mode,n)).return=t,e;case D:return d(t,(0,e._init)(e._payload),n)}if(et(e)||M(e))return(e=Ll(e,t.mode,n,null)).return=t,e;qs(t,e)}return null}function p(t,e,n,a){var r=null!==e?e.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:c(t,e,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===r?l(t,e,n,a):null;case k:return n.key===r?u(t,e,n,a):null;case D:return p(t,e,(r=n._init)(n._payload),a)}if(et(n)||M(n))return null!==r?null:h(t,e,n,a,null);qs(t,n)}return null}function f(t,e,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a)return c(e,t=t.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case w:return l(e,t=t.get(null===a.key?n:a.key)||null,a,r);case k:return u(e,t=t.get(null===a.key?n:a.key)||null,a,r);case D:return f(t,e,n,(0,a._init)(a._payload),r)}if(et(a)||M(a))return h(e,t=t.get(n)||null,a,r,null);qs(e,a)}return null}function m(r,s,i,c){for(var l=null,u=null,h=s,m=s=0,g=null;null!==h&&m<i.length;m++){h.index>m?(g=h,h=null):g=h.sibling;var y=p(r,h,i[m],c);if(null===y){null===h&&(h=g);break}t&&h&&null===y.alternate&&e(r,h),s=o(y,s,m),null===u?l=y:u.sibling=y,u=y,h=g}if(m===i.length)return n(r,h),rs&&Zr(r,m),l;if(null===h){for(;m<i.length;m++)null!==(h=d(r,i[m],c))&&(s=o(h,s,m),null===u?l=h:u.sibling=h,u=h);return rs&&Zr(r,m),l}for(h=a(r,h);m<i.length;m++)null!==(g=f(h,r,m,i[m],c))&&(t&&null!==g.alternate&&h.delete(null===g.key?m:g.key),s=o(g,s,m),null===u?l=g:u.sibling=g,u=g);return t&&h.forEach((function(t){return e(r,t)})),rs&&Zr(r,m),l}function g(r,i,c,l){var u=M(c);if("function"!==typeof u)throw Error(s(150));if(null==(c=u.call(c)))throw Error(s(151));for(var h=u=null,m=i,g=i=0,y=null,b=c.next();null!==m&&!b.done;g++,b=c.next()){m.index>g?(y=m,m=null):y=m.sibling;var x=p(r,m,b.value,l);if(null===x){null===m&&(m=y);break}t&&m&&null===x.alternate&&e(r,m),i=o(x,i,g),null===h?u=x:h.sibling=x,h=x,m=y}if(b.done)return n(r,m),rs&&Zr(r,g),u;if(null===m){for(;!b.done;g++,b=c.next())null!==(b=d(r,b.value,l))&&(i=o(b,i,g),null===h?u=b:h.sibling=b,h=b);return rs&&Zr(r,g),u}for(m=a(r,m);!b.done;g++,b=c.next())null!==(b=f(m,r,g,b.value,l))&&(t&&null!==b.alternate&&m.delete(null===b.key?g:b.key),i=o(b,i,g),null===h?u=b:h.sibling=b,h=b);return t&&m.forEach((function(t){return e(r,t)})),rs&&Zr(r,g),u}return function t(a,s,o,c){if("object"===typeof o&&null!==o&&o.type===I&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case w:t:{for(var l=o.key,u=s;null!==u;){if(u.key===l){if((l=o.type)===I){if(7===u.tag){n(a,u.sibling),(s=r(u,o.props.children)).return=a,a=s;break t}}else if(u.elementType===l||"object"===typeof l&&null!==l&&l.$$typeof===D&&Xs(l)===u.type){n(a,u.sibling),(s=r(u,o.props)).ref=Ks(a,u,o),s.return=a,a=s;break t}n(a,u);break}e(a,u),u=u.sibling}o.type===I?((s=Ll(o.props.children,a.mode,c,o.key)).return=a,a=s):((c=Ml(o.type,o.key,o.props,null,a.mode,c)).ref=Ks(a,s,o),c.return=a,a=c)}return i(a);case k:t:{for(u=o.key;null!==s;){if(s.key===u){if(4===s.tag&&s.stateNode.containerInfo===o.containerInfo&&s.stateNode.implementation===o.implementation){n(a,s.sibling),(s=r(s,o.children||[])).return=a,a=s;break t}n(a,s);break}e(a,s),s=s.sibling}(s=Bl(o,a.mode,c)).return=a,a=s}return i(a);case D:return t(a,s,(u=o._init)(o._payload),c)}if(et(o))return m(a,s,o,c);if(M(o))return g(a,s,o,c);qs(a,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==s&&6===s.tag?(n(a,s.sibling),(s=r(s,o)).return=a,a=s):(n(a,s),(s=Pl(o,a.mode,c)).return=a,a=s),i(a)):n(a,s)}}var Qs=Ys(!0),Js=Ys(!1),Zs={},$s=Sr(Zs),to=Sr(Zs),eo=Sr(Zs);function no(t){if(t===Zs)throw Error(s(174));return t}function ao(t,e){switch(Tr(eo,e),Tr(to,t),Tr($s,Zs),t=e.nodeType){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:ct(null,"");break;default:e=ct(e=(t=8===t?e.parentNode:e).namespaceURI||null,t=t.tagName)}Nr($s),Tr($s,e)}function ro(){Nr($s),Nr(to),Nr(eo)}function so(t){no(eo.current);var e=no($s.current),n=ct(e,t.type);e!==n&&(Tr(to,t),Tr($s,n))}function oo(t){to.current===t&&(Nr($s),Nr(to))}var io=Sr(0);function co(t){for(var e=t;null!==e;){if(13===e.tag){var n=e.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return e}else if(19===e.tag&&void 0!==e.memoizedProps.revealOrder){if(0!==(128&e.flags))return e}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var lo=[];function uo(){for(var t=0;t<lo.length;t++)lo[t]._workInProgressVersionPrimary=null;lo.length=0}var ho=v.ReactCurrentDispatcher,po=v.ReactCurrentBatchConfig,fo=0,mo=null,go=null,yo=null,bo=!1,xo=!1,vo=0,wo=0;function ko(){throw Error(s(321))}function Io(t,e){if(null===e)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!ia(t[n],e[n]))return!1;return!0}function So(t,e,n,a,r,o){if(fo=o,mo=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,ho.current=null===t||null===t.memoizedState?ii:ci,t=n(a,r),xo){o=0;do{if(xo=!1,vo=0,25<=o)throw Error(s(301));o+=1,yo=go=null,e.updateQueue=null,ho.current=li,t=n(a,r)}while(xo)}if(ho.current=oi,e=null!==go&&null!==go.next,fo=0,yo=go=mo=null,bo=!1,e)throw Error(s(300));return t}function No(){var t=0!==vo;return vo=0,t}function To(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===yo?mo.memoizedState=yo=t:yo=yo.next=t,yo}function Eo(){if(null===go){var t=mo.alternate;t=null!==t?t.memoizedState:null}else t=go.next;var e=null===yo?mo.memoizedState:yo.next;if(null!==e)yo=e,go=t;else{if(null===t)throw Error(s(310));t={memoizedState:(go=t).memoizedState,baseState:go.baseState,baseQueue:go.baseQueue,queue:go.queue,next:null},null===yo?mo.memoizedState=yo=t:yo=yo.next=t}return yo}function Co(t,e){return"function"===typeof e?e(t):e}function Ro(t){var e=Eo(),n=e.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=t;var a=go,r=a.baseQueue,o=n.pending;if(null!==o){if(null!==r){var i=r.next;r.next=o.next,o.next=i}a.baseQueue=r=o,n.pending=null}if(null!==r){o=r.next,a=a.baseState;var c=i=null,l=null,u=o;do{var h=u.lane;if((fo&h)===h)null!==l&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),a=u.hasEagerState?u.eagerState:t(a,u.action);else{var d={lane:h,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===l?(c=l=d,i=a):l=l.next=d,mo.lanes|=h,zc|=h}u=u.next}while(null!==u&&u!==o);null===l?i=a:l.next=c,ia(a,e.memoizedState)||(vi=!0),e.memoizedState=a,e.baseState=i,e.baseQueue=l,n.lastRenderedState=a}if(null!==(t=n.interleaved)){r=t;do{o=r.lane,mo.lanes|=o,zc|=o,r=r.next}while(r!==t)}else null===r&&(n.lanes=0);return[e.memoizedState,n.dispatch]}function _o(t){var e=Eo(),n=e.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=t;var a=n.dispatch,r=n.pending,o=e.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{o=t(o,i.action),i=i.next}while(i!==r);ia(o,e.memoizedState)||(vi=!0),e.memoizedState=o,null===e.baseQueue&&(e.baseState=o),n.lastRenderedState=o}return[o,a]}function Ao(){}function Do(t,e){var n=mo,a=Eo(),r=e(),o=!ia(a.memoizedState,r);if(o&&(a.memoizedState=r,vi=!0),a=a.queue,Ho(Mo.bind(null,n,a,t),[t]),a.getSnapshot!==e||o||null!==yo&&1&yo.memoizedState.tag){if(n.flags|=2048,Bo(9,Oo.bind(null,n,a,r,e),void 0,null),null===_c)throw Error(s(349));0!==(30&fo)||Fo(n,e,r)}return r}function Fo(t,e,n){t.flags|=16384,t={getSnapshot:e,value:n},null===(e=mo.updateQueue)?(e={lastEffect:null,stores:null},mo.updateQueue=e,e.stores=[t]):null===(n=e.stores)?e.stores=[t]:n.push(t)}function Oo(t,e,n,a){e.value=n,e.getSnapshot=a,Lo(e)&&zo(t)}function Mo(t,e,n){return n((function(){Lo(e)&&zo(t)}))}function Lo(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!ia(t,n)}catch(a){return!0}}function zo(t){var e=Rs(t,1);null!==e&&al(e,t,1,-1)}function Po(t){var e=To();return"function"===typeof t&&(t=t()),e.memoizedState=e.baseState=t,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Co,lastRenderedState:t},e.queue=t,t=t.dispatch=ni.bind(null,mo,t),[e.memoizedState,t]}function Bo(t,e,n,a){return t={tag:t,create:e,destroy:n,deps:a,next:null},null===(e=mo.updateQueue)?(e={lastEffect:null,stores:null},mo.updateQueue=e,e.lastEffect=t.next=t):null===(n=e.lastEffect)?e.lastEffect=t.next=t:(a=n.next,n.next=t,t.next=a,e.lastEffect=t),t}function Wo(){return Eo().memoizedState}function Uo(t,e,n,a){var r=To();mo.flags|=t,r.memoizedState=Bo(1|e,n,void 0,void 0===a?null:a)}function Vo(t,e,n,a){var r=Eo();a=void 0===a?null:a;var s=void 0;if(null!==go){var o=go.memoizedState;if(s=o.destroy,null!==a&&Io(a,o.deps))return void(r.memoizedState=Bo(e,n,s,a))}mo.flags|=t,r.memoizedState=Bo(1|e,n,s,a)}function Go(t,e){return Uo(8390656,8,t,e)}function Ho(t,e){return Vo(2048,8,t,e)}function jo(t,e){return Vo(4,2,t,e)}function Ko(t,e){return Vo(4,4,t,e)}function qo(t,e){return"function"===typeof e?(t=t(),e(t),function(){e(null)}):null!==e&&void 0!==e?(t=t(),e.current=t,function(){e.current=null}):void 0}function Xo(t,e,n){return n=null!==n&&void 0!==n?n.concat([t]):null,Vo(4,4,qo.bind(null,e,t),n)}function Yo(){}function Qo(t,e){var n=Eo();e=void 0===e?null:e;var a=n.memoizedState;return null!==a&&null!==e&&Io(e,a[1])?a[0]:(n.memoizedState=[t,e],t)}function Jo(t,e){var n=Eo();e=void 0===e?null:e;var a=n.memoizedState;return null!==a&&null!==e&&Io(e,a[1])?a[0]:(t=t(),n.memoizedState=[t,e],t)}function Zo(t,e,n){return 0===(21&fo)?(t.baseState&&(t.baseState=!1,vi=!0),t.memoizedState=n):(ia(n,e)||(n=me(),mo.lanes|=n,zc|=n,t.baseState=!0),e)}function $o(t,e){var n=xe;xe=0!==n&&4>n?n:4,t(!0);var a=po.transition;po.transition={};try{t(!1),e()}finally{xe=n,po.transition=a}}function ti(){return Eo().memoizedState}function ei(t,e,n){var a=nl(t);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},ai(t))ri(e,n);else if(null!==(n=Cs(t,e,n,a))){al(n,t,a,el()),si(n,e,a)}}function ni(t,e,n){var a=nl(t),r={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(ai(t))ri(e,r);else{var s=t.alternate;if(0===t.lanes&&(null===s||0===s.lanes)&&null!==(s=e.lastRenderedReducer))try{var o=e.lastRenderedState,i=s(o,n);if(r.hasEagerState=!0,r.eagerState=i,ia(i,o)){var c=e.interleaved;return null===c?(r.next=r,Es(e)):(r.next=c.next,c.next=r),void(e.interleaved=r)}}catch(l){}null!==(n=Cs(t,e,r,a))&&(al(n,t,a,r=el()),si(n,e,a))}}function ai(t){var e=t.alternate;return t===mo||null!==e&&e===mo}function ri(t,e){xo=bo=!0;var n=t.pending;null===n?e.next=e:(e.next=n.next,n.next=e),t.pending=e}function si(t,e,n){if(0!==(4194240&n)){var a=e.lanes;n|=a&=t.pendingLanes,e.lanes=n,be(t,n)}}var oi={readContext:Ns,useCallback:ko,useContext:ko,useEffect:ko,useImperativeHandle:ko,useInsertionEffect:ko,useLayoutEffect:ko,useMemo:ko,useReducer:ko,useRef:ko,useState:ko,useDebugValue:ko,useDeferredValue:ko,useTransition:ko,useMutableSource:ko,useSyncExternalStore:ko,useId:ko,unstable_isNewReconciler:!1},ii={readContext:Ns,useCallback:function(t,e){return To().memoizedState=[t,void 0===e?null:e],t},useContext:Ns,useEffect:Go,useImperativeHandle:function(t,e,n){return n=null!==n&&void 0!==n?n.concat([t]):null,Uo(4194308,4,qo.bind(null,e,t),n)},useLayoutEffect:function(t,e){return Uo(4194308,4,t,e)},useInsertionEffect:function(t,e){return Uo(4,2,t,e)},useMemo:function(t,e){var n=To();return e=void 0===e?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var a=To();return e=void 0!==n?n(e):e,a.memoizedState=a.baseState=e,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:e},a.queue=t,t=t.dispatch=ei.bind(null,mo,t),[a.memoizedState,t]},useRef:function(t){return t={current:t},To().memoizedState=t},useState:Po,useDebugValue:Yo,useDeferredValue:function(t){return To().memoizedState=t},useTransition:function(){var t=Po(!1),e=t[0];return t=$o.bind(null,t[1]),To().memoizedState=t,[e,t]},useMutableSource:function(){},useSyncExternalStore:function(t,e,n){var a=mo,r=To();if(rs){if(void 0===n)throw Error(s(407));n=n()}else{if(n=e(),null===_c)throw Error(s(349));0!==(30&fo)||Fo(a,e,n)}r.memoizedState=n;var o={value:n,getSnapshot:e};return r.queue=o,Go(Mo.bind(null,a,o,t),[t]),a.flags|=2048,Bo(9,Oo.bind(null,a,o,n,e),void 0,null),n},useId:function(){var t=To(),e=_c.identifierPrefix;if(rs){var n=Jr;e=":"+e+"R"+(n=(Qr&~(1<<32-oe(Qr)-1)).toString(32)+n),0<(n=vo++)&&(e+="H"+n.toString(32)),e+=":"}else e=":"+e+"r"+(n=wo++).toString(32)+":";return t.memoizedState=e},unstable_isNewReconciler:!1},ci={readContext:Ns,useCallback:Qo,useContext:Ns,useEffect:Ho,useImperativeHandle:Xo,useInsertionEffect:jo,useLayoutEffect:Ko,useMemo:Jo,useReducer:Ro,useRef:Wo,useState:function(){return Ro(Co)},useDebugValue:Yo,useDeferredValue:function(t){return Zo(Eo(),go.memoizedState,t)},useTransition:function(){return[Ro(Co)[0],Eo().memoizedState]},useMutableSource:Ao,useSyncExternalStore:Do,useId:ti,unstable_isNewReconciler:!1},li={readContext:Ns,useCallback:Qo,useContext:Ns,useEffect:Ho,useImperativeHandle:Xo,useInsertionEffect:jo,useLayoutEffect:Ko,useMemo:Jo,useReducer:_o,useRef:Wo,useState:function(){return _o(Co)},useDebugValue:Yo,useDeferredValue:function(t){var e=Eo();return null===go?e.memoizedState=t:Zo(e,go.memoizedState,t)},useTransition:function(){return[_o(Co)[0],Eo().memoizedState]},useMutableSource:Ao,useSyncExternalStore:Do,useId:ti,unstable_isNewReconciler:!1};function ui(t,e){try{var n="",a=e;do{n+=U(a),a=a.return}while(a);var r=n}catch(s){r="\nError generating stack: "+s.message+"\n"+s.stack}return{value:t,source:e,stack:r,digest:null}}function hi(t,e,n){return{value:t,source:null,stack:null!=n?n:null,digest:null!=e?e:null}}function di(t,e){try{console.error(e.value)}catch(n){setTimeout((function(){throw n}))}}var pi="function"===typeof WeakMap?WeakMap:Map;function fi(t,e,n){(n=Fs(-1,n)).tag=3,n.payload={element:null};var a=e.value;return n.callback=function(){jc||(jc=!0,Kc=a),di(0,e)},n}function mi(t,e,n){(n=Fs(-1,n)).tag=3;var a=t.type.getDerivedStateFromError;if("function"===typeof a){var r=e.value;n.payload=function(){return a(r)},n.callback=function(){di(0,e)}}var s=t.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){di(0,e),"function"!==typeof a&&(null===qc?qc=new Set([this]):qc.add(this));var t=e.stack;this.componentDidCatch(e.value,{componentStack:null!==t?t:""})}),n}function gi(t,e,n){var a=t.pingCache;if(null===a){a=t.pingCache=new pi;var r=new Set;a.set(e,r)}else void 0===(r=a.get(e))&&(r=new Set,a.set(e,r));r.has(n)||(r.add(n),t=Tl.bind(null,t,e,n),e.then(t,t))}function yi(t){do{var e;if((e=13===t.tag)&&(e=null===(e=t.memoizedState)||null!==e.dehydrated),e)return t;t=t.return}while(null!==t);return null}function bi(t,e,n,a,r){return 0===(1&t.mode)?(t===e?t.flags|=65536:(t.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((e=Fs(-1,1)).tag=2,Os(n,e,1))),n.lanes|=1),t):(t.flags|=65536,t.lanes=r,t)}var xi=v.ReactCurrentOwner,vi=!1;function wi(t,e,n,a){e.child=null===t?Js(e,null,n,a):Qs(e,t.child,n,a)}function ki(t,e,n,a,r){n=n.render;var s=e.ref;return Ss(e,r),a=So(t,e,n,a,s,r),n=No(),null===t||vi?(rs&&n&&ts(e),e.flags|=1,wi(t,e,a,r),e.child):(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~r,ji(t,e,r))}function Ii(t,e,n,a,r){if(null===t){var s=n.type;return"function"!==typeof s||Fl(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((t=Ml(n.type,null,a,e,e.mode,r)).ref=e.ref,t.return=e,e.child=t):(e.tag=15,e.type=s,Si(t,e,s,a,r))}if(s=t.child,0===(t.lanes&r)){var o=s.memoizedProps;if((n=null!==(n=n.compare)?n:ca)(o,a)&&t.ref===e.ref)return ji(t,e,r)}return e.flags|=1,(t=Ol(s,a)).ref=e.ref,t.return=e,e.child=t}function Si(t,e,n,a,r){if(null!==t){var s=t.memoizedProps;if(ca(s,a)&&t.ref===e.ref){if(vi=!1,e.pendingProps=a=s,0===(t.lanes&r))return e.lanes=t.lanes,ji(t,e,r);0!==(131072&t.flags)&&(vi=!0)}}return Ei(t,e,n,a,r)}function Ni(t,e,n){var a=e.pendingProps,r=a.children,s=null!==t?t.memoizedState:null;if("hidden"===a.mode)if(0===(1&e.mode))e.memoizedState={baseLanes:0,cachePool:null,transitions:null},Tr(Oc,Fc),Fc|=n;else{if(0===(1073741824&n))return t=null!==s?s.baseLanes|n:n,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:t,cachePool:null,transitions:null},e.updateQueue=null,Tr(Oc,Fc),Fc|=t,null;e.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==s?s.baseLanes:n,Tr(Oc,Fc),Fc|=a}else null!==s?(a=s.baseLanes|n,e.memoizedState=null):a=n,Tr(Oc,Fc),Fc|=a;return wi(t,e,r,n),e.child}function Ti(t,e){var n=e.ref;(null===t&&null!==n||null!==t&&t.ref!==n)&&(e.flags|=512,e.flags|=2097152)}function Ei(t,e,n,a,r){var s=Dr(n)?_r:Cr.current;return s=Ar(e,s),Ss(e,r),n=So(t,e,n,a,s,r),a=No(),null===t||vi?(rs&&a&&ts(e),e.flags|=1,wi(t,e,n,r),e.child):(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~r,ji(t,e,r))}function Ci(t,e,n,a,r){if(Dr(n)){var s=!0;Lr(e)}else s=!1;if(Ss(e,r),null===e.stateNode)Hi(t,e),Gs(e,n,a),js(e,n,a,r),a=!0;else if(null===t){var o=e.stateNode,i=e.memoizedProps;o.props=i;var c=o.context,l=n.contextType;"object"===typeof l&&null!==l?l=Ns(l):l=Ar(e,l=Dr(n)?_r:Cr.current);var u=n.getDerivedStateFromProps,h="function"===typeof u||"function"===typeof o.getSnapshotBeforeUpdate;h||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==a||c!==l)&&Hs(e,o,a,l),_s=!1;var d=e.memoizedState;o.state=d,zs(e,a,o,r),c=e.memoizedState,i!==a||d!==c||Rr.current||_s?("function"===typeof u&&(Ws(e,n,u,a),c=e.memoizedState),(i=_s||Vs(e,n,i,a,d,c,l))?(h||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(e.flags|=4194308)):("function"===typeof o.componentDidMount&&(e.flags|=4194308),e.memoizedProps=a,e.memoizedState=c),o.props=a,o.state=c,o.context=l,a=i):("function"===typeof o.componentDidMount&&(e.flags|=4194308),a=!1)}else{o=e.stateNode,Ds(t,e),i=e.memoizedProps,l=e.type===e.elementType?i:gs(e.type,i),o.props=l,h=e.pendingProps,d=o.context,"object"===typeof(c=n.contextType)&&null!==c?c=Ns(c):c=Ar(e,c=Dr(n)?_r:Cr.current);var p=n.getDerivedStateFromProps;(u="function"===typeof p||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==h||d!==c)&&Hs(e,o,a,c),_s=!1,d=e.memoizedState,o.state=d,zs(e,a,o,r);var f=e.memoizedState;i!==h||d!==f||Rr.current||_s?("function"===typeof p&&(Ws(e,n,p,a),f=e.memoizedState),(l=_s||Vs(e,n,l,a,d,f,c)||!1)?(u||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(a,f,c),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(a,f,c)),"function"===typeof o.componentDidUpdate&&(e.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(e.flags|=1024)):("function"!==typeof o.componentDidUpdate||i===t.memoizedProps&&d===t.memoizedState||(e.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===t.memoizedProps&&d===t.memoizedState||(e.flags|=1024),e.memoizedProps=a,e.memoizedState=f),o.props=a,o.state=f,o.context=c,a=l):("function"!==typeof o.componentDidUpdate||i===t.memoizedProps&&d===t.memoizedState||(e.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===t.memoizedProps&&d===t.memoizedState||(e.flags|=1024),a=!1)}return Ri(t,e,n,a,s,r)}function Ri(t,e,n,a,r,s){Ti(t,e);var o=0!==(128&e.flags);if(!a&&!o)return r&&zr(e,n,!1),ji(t,e,s);a=e.stateNode,xi.current=e;var i=o&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return e.flags|=1,null!==t&&o?(e.child=Qs(e,t.child,null,s),e.child=Qs(e,null,i,s)):wi(t,e,i,s),e.memoizedState=a.state,r&&zr(e,n,!0),e.child}function _i(t){var e=t.stateNode;e.pendingContext?Or(0,e.pendingContext,e.pendingContext!==e.context):e.context&&Or(0,e.context,!1),ao(t,e.containerInfo)}function Ai(t,e,n,a,r){return ps(),fs(r),e.flags|=256,wi(t,e,n,a),e.child}var Di,Fi,Oi,Mi,Li={dehydrated:null,treeContext:null,retryLane:0};function zi(t){return{baseLanes:t,cachePool:null,transitions:null}}function Pi(t,e,n){var a,r=e.pendingProps,o=io.current,i=!1,c=0!==(128&e.flags);if((a=c)||(a=(null===t||null!==t.memoizedState)&&0!==(2&o)),a?(i=!0,e.flags&=-129):null!==t&&null===t.memoizedState||(o|=1),Tr(io,1&o),null===t)return ls(e),null!==(t=e.memoizedState)&&null!==(t=t.dehydrated)?(0===(1&e.mode)?e.lanes=1:"$!"===t.data?e.lanes=8:e.lanes=1073741824,null):(c=r.children,t=r.fallback,i?(r=e.mode,i=e.child,c={mode:"hidden",children:c},0===(1&r)&&null!==i?(i.childLanes=0,i.pendingProps=c):i=zl(c,r,0,null),t=Ll(t,r,n,null),i.return=e,t.return=e,i.sibling=t,e.child=i,e.child.memoizedState=zi(n),e.memoizedState=Li,t):Bi(e,c));if(null!==(o=t.memoizedState)&&null!==(a=o.dehydrated))return function(t,e,n,a,r,o,i){if(n)return 256&e.flags?(e.flags&=-257,Wi(t,e,i,a=hi(Error(s(422))))):null!==e.memoizedState?(e.child=t.child,e.flags|=128,null):(o=a.fallback,r=e.mode,a=zl({mode:"visible",children:a.children},r,0,null),(o=Ll(o,r,i,null)).flags|=2,a.return=e,o.return=e,a.sibling=o,e.child=a,0!==(1&e.mode)&&Qs(e,t.child,null,i),e.child.memoizedState=zi(i),e.memoizedState=Li,o);if(0===(1&e.mode))return Wi(t,e,i,null);if("$!"===r.data){if(a=r.nextSibling&&r.nextSibling.dataset)var c=a.dgst;return a=c,Wi(t,e,i,a=hi(o=Error(s(419)),a,void 0))}if(c=0!==(i&t.childLanes),vi||c){if(null!==(a=_c)){switch(i&-i){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(a.suspendedLanes|i))?0:r)&&r!==o.retryLane&&(o.retryLane=r,Rs(t,r),al(a,t,r,-1))}return gl(),Wi(t,e,i,a=hi(Error(s(421))))}return"$?"===r.data?(e.flags|=128,e.child=t.child,e=Cl.bind(null,t),r._reactRetry=e,null):(t=o.treeContext,as=lr(r.nextSibling),ns=e,rs=!0,ss=null,null!==t&&(qr[Xr++]=Qr,qr[Xr++]=Jr,qr[Xr++]=Yr,Qr=t.id,Jr=t.overflow,Yr=e),e=Bi(e,a.children),e.flags|=4096,e)}(t,e,c,r,a,o,n);if(i){i=r.fallback,c=e.mode,a=(o=t.child).sibling;var l={mode:"hidden",children:r.children};return 0===(1&c)&&e.child!==o?((r=e.child).childLanes=0,r.pendingProps=l,e.deletions=null):(r=Ol(o,l)).subtreeFlags=14680064&o.subtreeFlags,null!==a?i=Ol(a,i):(i=Ll(i,c,n,null)).flags|=2,i.return=e,r.return=e,r.sibling=i,e.child=r,r=i,i=e.child,c=null===(c=t.child.memoizedState)?zi(n):{baseLanes:c.baseLanes|n,cachePool:null,transitions:c.transitions},i.memoizedState=c,i.childLanes=t.childLanes&~n,e.memoizedState=Li,r}return t=(i=t.child).sibling,r=Ol(i,{mode:"visible",children:r.children}),0===(1&e.mode)&&(r.lanes=n),r.return=e,r.sibling=null,null!==t&&(null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)),e.child=r,e.memoizedState=null,r}function Bi(t,e){return(e=zl({mode:"visible",children:e},t.mode,0,null)).return=t,t.child=e}function Wi(t,e,n,a){return null!==a&&fs(a),Qs(e,t.child,null,n),(t=Bi(e,e.pendingProps.children)).flags|=2,e.memoizedState=null,t}function Ui(t,e,n){t.lanes|=e;var a=t.alternate;null!==a&&(a.lanes|=e),Is(t.return,e,n)}function Vi(t,e,n,a,r){var s=t.memoizedState;null===s?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(s.isBackwards=e,s.rendering=null,s.renderingStartTime=0,s.last=a,s.tail=n,s.tailMode=r)}function Gi(t,e,n){var a=e.pendingProps,r=a.revealOrder,s=a.tail;if(wi(t,e,a.children,n),0!==(2&(a=io.current)))a=1&a|2,e.flags|=128;else{if(null!==t&&0!==(128&t.flags))t:for(t=e.child;null!==t;){if(13===t.tag)null!==t.memoizedState&&Ui(t,n,e);else if(19===t.tag)Ui(t,n,e);else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break t;for(;null===t.sibling;){if(null===t.return||t.return===e)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}a&=1}if(Tr(io,a),0===(1&e.mode))e.memoizedState=null;else switch(r){case"forwards":for(n=e.child,r=null;null!==n;)null!==(t=n.alternate)&&null===co(t)&&(r=n),n=n.sibling;null===(n=r)?(r=e.child,e.child=null):(r=n.sibling,n.sibling=null),Vi(e,!1,r,n,s);break;case"backwards":for(n=null,r=e.child,e.child=null;null!==r;){if(null!==(t=r.alternate)&&null===co(t)){e.child=r;break}t=r.sibling,r.sibling=n,n=r,r=t}Vi(e,!0,n,null,s);break;case"together":Vi(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function Hi(t,e){0===(1&e.mode)&&null!==t&&(t.alternate=null,e.alternate=null,e.flags|=2)}function ji(t,e,n){if(null!==t&&(e.dependencies=t.dependencies),zc|=e.lanes,0===(n&e.childLanes))return null;if(null!==t&&e.child!==t.child)throw Error(s(153));if(null!==e.child){for(n=Ol(t=e.child,t.pendingProps),e.child=n,n.return=e;null!==t.sibling;)t=t.sibling,(n=n.sibling=Ol(t,t.pendingProps)).return=e;n.sibling=null}return e.child}function Ki(t,e){if(!rs)switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;null!==e;)null!==e.alternate&&(n=e),e=e.sibling;null===n?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?e||null===t.tail?t.tail=null:t.tail.sibling=null:a.sibling=null}}function qi(t){var e=null!==t.alternate&&t.alternate.child===t.child,n=0,a=0;if(e)for(var r=t.child;null!==r;)n|=r.lanes|r.childLanes,a|=14680064&r.subtreeFlags,a|=14680064&r.flags,r.return=t,r=r.sibling;else for(r=t.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=t,r=r.sibling;return t.subtreeFlags|=a,t.childLanes=n,e}function Xi(t,e,n){var a=e.pendingProps;switch(es(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qi(e),null;case 1:case 17:return Dr(e.type)&&Fr(),qi(e),null;case 3:return a=e.stateNode,ro(),Nr(Rr),Nr(Cr),uo(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==t&&null!==t.child||(hs(e)?e.flags|=4:null===t||t.memoizedState.isDehydrated&&0===(256&e.flags)||(e.flags|=1024,null!==ss&&(il(ss),ss=null))),Fi(t,e),qi(e),null;case 5:oo(e);var r=no(eo.current);if(n=e.type,null!==t&&null!=e.stateNode)Oi(t,e,n,a,r),t.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!a){if(null===e.stateNode)throw Error(s(166));return qi(e),null}if(t=no($s.current),hs(e)){a=e.stateNode,n=e.type;var o=e.memoizedProps;switch(a[dr]=e,a[pr]=o,t=0!==(1&e.mode),n){case"dialog":Ba("cancel",a),Ba("close",a);break;case"iframe":case"object":case"embed":Ba("load",a);break;case"video":case"audio":for(r=0;r<Ma.length;r++)Ba(Ma[r],a);break;case"source":Ba("error",a);break;case"img":case"image":case"link":Ba("error",a),Ba("load",a);break;case"details":Ba("toggle",a);break;case"input":Q(a,o),Ba("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!o.multiple},Ba("invalid",a);break;case"textarea":rt(a,o),Ba("invalid",a)}for(var c in bt(n,o),r=null,o)if(o.hasOwnProperty(c)){var l=o[c];"children"===c?"string"===typeof l?a.textContent!==l&&(!0!==o.suppressHydrationWarning&&Za(a.textContent,l,t),r=["children",l]):"number"===typeof l&&a.textContent!==""+l&&(!0!==o.suppressHydrationWarning&&Za(a.textContent,l,t),r=["children",""+l]):i.hasOwnProperty(c)&&null!=l&&"onScroll"===c&&Ba("scroll",a)}switch(n){case"input":K(a),$(a,o,!0);break;case"textarea":K(a),ot(a);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(a.onclick=$a)}a=r,e.updateQueue=a,null!==a&&(e.flags|=4)}else{c=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===t&&(t=it(n)),"http://www.w3.org/1999/xhtml"===t?"script"===n?((t=c.createElement("div")).innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):"string"===typeof a.is?t=c.createElement(n,{is:a.is}):(t=c.createElement(n),"select"===n&&(c=t,a.multiple?c.multiple=!0:a.size&&(c.size=a.size))):t=c.createElementNS(t,n),t[dr]=e,t[pr]=a,Di(t,e,!1,!1),e.stateNode=t;t:{switch(c=xt(n,a),n){case"dialog":Ba("cancel",t),Ba("close",t),r=a;break;case"iframe":case"object":case"embed":Ba("load",t),r=a;break;case"video":case"audio":for(r=0;r<Ma.length;r++)Ba(Ma[r],t);r=a;break;case"source":Ba("error",t),r=a;break;case"img":case"image":case"link":Ba("error",t),Ba("load",t),r=a;break;case"details":Ba("toggle",t),r=a;break;case"input":Q(t,a),r=Y(t,a),Ba("invalid",t);break;case"option":default:r=a;break;case"select":t._wrapperState={wasMultiple:!!a.multiple},r=z({},a,{value:void 0}),Ba("invalid",t);break;case"textarea":rt(t,a),r=at(t,a),Ba("invalid",t)}for(o in bt(n,r),l=r)if(l.hasOwnProperty(o)){var u=l[o];"style"===o?gt(t,u):"dangerouslySetInnerHTML"===o?null!=(u=u?u.__html:void 0)&&ht(t,u):"children"===o?"string"===typeof u?("textarea"!==n||""!==u)&&dt(t,u):"number"===typeof u&&dt(t,""+u):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=u&&"onScroll"===o&&Ba("scroll",t):null!=u&&x(t,o,u,c))}switch(n){case"input":K(t),$(t,a,!1);break;case"textarea":K(t),ot(t);break;case"option":null!=a.value&&t.setAttribute("value",""+H(a.value));break;case"select":t.multiple=!!a.multiple,null!=(o=a.value)?nt(t,!!a.multiple,o,!1):null!=a.defaultValue&&nt(t,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof r.onClick&&(t.onclick=$a)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break t;case"img":a=!0;break t;default:a=!1}}a&&(e.flags|=4)}null!==e.ref&&(e.flags|=512,e.flags|=2097152)}return qi(e),null;case 6:if(t&&null!=e.stateNode)Mi(t,e,t.memoizedProps,a);else{if("string"!==typeof a&&null===e.stateNode)throw Error(s(166));if(n=no(eo.current),no($s.current),hs(e)){if(a=e.stateNode,n=e.memoizedProps,a[dr]=e,(o=a.nodeValue!==n)&&null!==(t=ns))switch(t.tag){case 3:Za(a.nodeValue,n,0!==(1&t.mode));break;case 5:!0!==t.memoizedProps.suppressHydrationWarning&&Za(a.nodeValue,n,0!==(1&t.mode))}o&&(e.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[dr]=e,e.stateNode=a}return qi(e),null;case 13:if(Nr(io),a=e.memoizedState,null===t||null!==t.memoizedState&&null!==t.memoizedState.dehydrated){if(rs&&null!==as&&0!==(1&e.mode)&&0===(128&e.flags))ds(),ps(),e.flags|=98560,o=!1;else if(o=hs(e),null!==a&&null!==a.dehydrated){if(null===t){if(!o)throw Error(s(318));if(!(o=null!==(o=e.memoizedState)?o.dehydrated:null))throw Error(s(317));o[dr]=e}else ps(),0===(128&e.flags)&&(e.memoizedState=null),e.flags|=4;qi(e),o=!1}else null!==ss&&(il(ss),ss=null),o=!0;if(!o)return 65536&e.flags?e:null}return 0!==(128&e.flags)?(e.lanes=n,e):((a=null!==a)!==(null!==t&&null!==t.memoizedState)&&a&&(e.child.flags|=8192,0!==(1&e.mode)&&(null===t||0!==(1&io.current)?0===Mc&&(Mc=3):gl())),null!==e.updateQueue&&(e.flags|=4),qi(e),null);case 4:return ro(),Fi(t,e),null===t&&Va(e.stateNode.containerInfo),qi(e),null;case 10:return ks(e.type._context),qi(e),null;case 19:if(Nr(io),null===(o=e.memoizedState))return qi(e),null;if(a=0!==(128&e.flags),null===(c=o.rendering))if(a)Ki(o,!1);else{if(0!==Mc||null!==t&&0!==(128&t.flags))for(t=e.child;null!==t;){if(null!==(c=co(t))){for(e.flags|=128,Ki(o,!1),null!==(a=c.updateQueue)&&(e.updateQueue=a,e.flags|=4),e.subtreeFlags=0,a=n,n=e.child;null!==n;)t=a,(o=n).flags&=14680066,null===(c=o.alternate)?(o.childLanes=0,o.lanes=t,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=c.childLanes,o.lanes=c.lanes,o.child=c.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=c.memoizedProps,o.memoizedState=c.memoizedState,o.updateQueue=c.updateQueue,o.type=c.type,t=c.dependencies,o.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext}),n=n.sibling;return Tr(io,1&io.current|2),e.child}t=t.sibling}null!==o.tail&&Jt()>Gc&&(e.flags|=128,a=!0,Ki(o,!1),e.lanes=4194304)}else{if(!a)if(null!==(t=co(c))){if(e.flags|=128,a=!0,null!==(n=t.updateQueue)&&(e.updateQueue=n,e.flags|=4),Ki(o,!0),null===o.tail&&"hidden"===o.tailMode&&!c.alternate&&!rs)return qi(e),null}else 2*Jt()-o.renderingStartTime>Gc&&1073741824!==n&&(e.flags|=128,a=!0,Ki(o,!1),e.lanes=4194304);o.isBackwards?(c.sibling=e.child,e.child=c):(null!==(n=o.last)?n.sibling=c:e.child=c,o.last=c)}return null!==o.tail?(e=o.tail,o.rendering=e,o.tail=e.sibling,o.renderingStartTime=Jt(),e.sibling=null,n=io.current,Tr(io,a?1&n|2:1&n),e):(qi(e),null);case 22:case 23:return dl(),a=null!==e.memoizedState,null!==t&&null!==t.memoizedState!==a&&(e.flags|=8192),a&&0!==(1&e.mode)?0!==(1073741824&Fc)&&(qi(e),6&e.subtreeFlags&&(e.flags|=8192)):qi(e),null;case 24:case 25:return null}throw Error(s(156,e.tag))}function Yi(t,e){switch(es(e),e.tag){case 1:return Dr(e.type)&&Fr(),65536&(t=e.flags)?(e.flags=-65537&t|128,e):null;case 3:return ro(),Nr(Rr),Nr(Cr),uo(),0!==(65536&(t=e.flags))&&0===(128&t)?(e.flags=-65537&t|128,e):null;case 5:return oo(e),null;case 13:if(Nr(io),null!==(t=e.memoizedState)&&null!==t.dehydrated){if(null===e.alternate)throw Error(s(340));ps()}return 65536&(t=e.flags)?(e.flags=-65537&t|128,e):null;case 19:return Nr(io),null;case 4:return ro(),null;case 10:return ks(e.type._context),null;case 22:case 23:return dl(),null;default:return null}}Di=function(t,e){for(var n=e.child;null!==n;){if(5===n.tag||6===n.tag)t.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Fi=function(){},Oi=function(t,e,n,a){var r=t.memoizedProps;if(r!==a){t=e.stateNode,no($s.current);var s,o=null;switch(n){case"input":r=Y(t,r),a=Y(t,a),o=[];break;case"select":r=z({},r,{value:void 0}),a=z({},a,{value:void 0}),o=[];break;case"textarea":r=at(t,r),a=at(t,a),o=[];break;default:"function"!==typeof r.onClick&&"function"===typeof a.onClick&&(t.onclick=$a)}for(u in bt(n,a),n=null,r)if(!a.hasOwnProperty(u)&&r.hasOwnProperty(u)&&null!=r[u])if("style"===u){var c=r[u];for(s in c)c.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(i.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in a){var l=a[u];if(c=null!=r?r[u]:void 0,a.hasOwnProperty(u)&&l!==c&&(null!=l||null!=c))if("style"===u)if(c){for(s in c)!c.hasOwnProperty(s)||l&&l.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in l)l.hasOwnProperty(s)&&c[s]!==l[s]&&(n||(n={}),n[s]=l[s])}else n||(o||(o=[]),o.push(u,n)),n=l;else"dangerouslySetInnerHTML"===u?(l=l?l.__html:void 0,c=c?c.__html:void 0,null!=l&&c!==l&&(o=o||[]).push(u,l)):"children"===u?"string"!==typeof l&&"number"!==typeof l||(o=o||[]).push(u,""+l):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(i.hasOwnProperty(u)?(null!=l&&"onScroll"===u&&Ba("scroll",t),o||c===l||(o=[])):(o=o||[]).push(u,l))}n&&(o=o||[]).push("style",n);var u=o;(e.updateQueue=u)&&(e.flags|=4)}},Mi=function(t,e,n,a){n!==a&&(e.flags|=4)};var Qi=!1,Ji=!1,Zi="function"===typeof WeakSet?WeakSet:Set,$i=null;function tc(t,e){var n=t.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){Nl(t,e,a)}else n.current=null}function ec(t,e,n){try{n()}catch(a){Nl(t,e,a)}}var nc=!1;function ac(t,e,n){var a=e.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var r=a=a.next;do{if((r.tag&t)===t){var s=r.destroy;r.destroy=void 0,void 0!==s&&ec(e,n,s)}r=r.next}while(r!==a)}}function rc(t,e){if(null!==(e=null!==(e=e.updateQueue)?e.lastEffect:null)){var n=e=e.next;do{if((n.tag&t)===t){var a=n.create;n.destroy=a()}n=n.next}while(n!==e)}}function sc(t){var e=t.ref;if(null!==e){var n=t.stateNode;t.tag,t=n,"function"===typeof e?e(t):e.current=t}}function oc(t){var e=t.alternate;null!==e&&(t.alternate=null,oc(e)),t.child=null,t.deletions=null,t.sibling=null,5===t.tag&&(null!==(e=t.stateNode)&&(delete e[dr],delete e[pr],delete e[mr],delete e[gr],delete e[yr])),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}function ic(t){return 5===t.tag||3===t.tag||4===t.tag}function cc(t){t:for(;;){for(;null===t.sibling;){if(null===t.return||ic(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;5!==t.tag&&6!==t.tag&&18!==t.tag;){if(2&t.flags)continue t;if(null===t.child||4===t.tag)continue t;t.child.return=t,t=t.child}if(!(2&t.flags))return t.stateNode}}function lc(t,e,n){var a=t.tag;if(5===a||6===a)t=t.stateNode,e?8===n.nodeType?n.parentNode.insertBefore(t,e):n.insertBefore(t,e):(8===n.nodeType?(e=n.parentNode).insertBefore(t,n):(e=n).appendChild(t),null!==(n=n._reactRootContainer)&&void 0!==n||null!==e.onclick||(e.onclick=$a));else if(4!==a&&null!==(t=t.child))for(lc(t,e,n),t=t.sibling;null!==t;)lc(t,e,n),t=t.sibling}function uc(t,e,n){var a=t.tag;if(5===a||6===a)t=t.stateNode,e?n.insertBefore(t,e):n.appendChild(t);else if(4!==a&&null!==(t=t.child))for(uc(t,e,n),t=t.sibling;null!==t;)uc(t,e,n),t=t.sibling}var hc=null,dc=!1;function pc(t,e,n){for(n=n.child;null!==n;)fc(t,e,n),n=n.sibling}function fc(t,e,n){if(se&&"function"===typeof se.onCommitFiberUnmount)try{se.onCommitFiberUnmount(re,n)}catch(i){}switch(n.tag){case 5:Ji||tc(n,e);case 6:var a=hc,r=dc;hc=null,pc(t,e,n),dc=r,null!==(hc=a)&&(dc?(t=hc,n=n.stateNode,8===t.nodeType?t.parentNode.removeChild(n):t.removeChild(n)):hc.removeChild(n.stateNode));break;case 18:null!==hc&&(dc?(t=hc,n=n.stateNode,8===t.nodeType?cr(t.parentNode,n):1===t.nodeType&&cr(t,n),Ve(t)):cr(hc,n.stateNode));break;case 4:a=hc,r=dc,hc=n.stateNode.containerInfo,dc=!0,pc(t,e,n),hc=a,dc=r;break;case 0:case 11:case 14:case 15:if(!Ji&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){r=a=a.next;do{var s=r,o=s.destroy;s=s.tag,void 0!==o&&(0!==(2&s)||0!==(4&s))&&ec(n,e,o),r=r.next}while(r!==a)}pc(t,e,n);break;case 1:if(!Ji&&(tc(n,e),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(i){Nl(n,e,i)}pc(t,e,n);break;case 21:pc(t,e,n);break;case 22:1&n.mode?(Ji=(a=Ji)||null!==n.memoizedState,pc(t,e,n),Ji=a):pc(t,e,n);break;default:pc(t,e,n)}}function mc(t){var e=t.updateQueue;if(null!==e){t.updateQueue=null;var n=t.stateNode;null===n&&(n=t.stateNode=new Zi),e.forEach((function(e){var a=Rl.bind(null,t,e);n.has(e)||(n.add(e),e.then(a,a))}))}}function gc(t,e){var n=e.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a];try{var o=t,i=e,c=i;t:for(;null!==c;){switch(c.tag){case 5:hc=c.stateNode,dc=!1;break t;case 3:case 4:hc=c.stateNode.containerInfo,dc=!0;break t}c=c.return}if(null===hc)throw Error(s(160));fc(o,i,r),hc=null,dc=!1;var l=r.alternate;null!==l&&(l.return=null),r.return=null}catch(u){Nl(r,e,u)}}if(12854&e.subtreeFlags)for(e=e.child;null!==e;)yc(e,t),e=e.sibling}function yc(t,e){var n=t.alternate,a=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:if(gc(e,t),bc(t),4&a){try{ac(3,t,t.return),rc(3,t)}catch(g){Nl(t,t.return,g)}try{ac(5,t,t.return)}catch(g){Nl(t,t.return,g)}}break;case 1:gc(e,t),bc(t),512&a&&null!==n&&tc(n,n.return);break;case 5:if(gc(e,t),bc(t),512&a&&null!==n&&tc(n,n.return),32&t.flags){var r=t.stateNode;try{dt(r,"")}catch(g){Nl(t,t.return,g)}}if(4&a&&null!=(r=t.stateNode)){var o=t.memoizedProps,i=null!==n?n.memoizedProps:o,c=t.type,l=t.updateQueue;if(t.updateQueue=null,null!==l)try{"input"===c&&"radio"===o.type&&null!=o.name&&J(r,o),xt(c,i);var u=xt(c,o);for(i=0;i<l.length;i+=2){var h=l[i],d=l[i+1];"style"===h?gt(r,d):"dangerouslySetInnerHTML"===h?ht(r,d):"children"===h?dt(r,d):x(r,h,d,u)}switch(c){case"input":Z(r,o);break;case"textarea":st(r,o);break;case"select":var p=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!o.multiple;var f=o.value;null!=f?nt(r,!!o.multiple,f,!1):p!==!!o.multiple&&(null!=o.defaultValue?nt(r,!!o.multiple,o.defaultValue,!0):nt(r,!!o.multiple,o.multiple?[]:"",!1))}r[pr]=o}catch(g){Nl(t,t.return,g)}}break;case 6:if(gc(e,t),bc(t),4&a){if(null===t.stateNode)throw Error(s(162));r=t.stateNode,o=t.memoizedProps;try{r.nodeValue=o}catch(g){Nl(t,t.return,g)}}break;case 3:if(gc(e,t),bc(t),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Ve(e.containerInfo)}catch(g){Nl(t,t.return,g)}break;case 4:default:gc(e,t),bc(t);break;case 13:gc(e,t),bc(t),8192&(r=t.child).flags&&(o=null!==r.memoizedState,r.stateNode.isHidden=o,!o||null!==r.alternate&&null!==r.alternate.memoizedState||(Vc=Jt())),4&a&&mc(t);break;case 22:if(h=null!==n&&null!==n.memoizedState,1&t.mode?(Ji=(u=Ji)||h,gc(e,t),Ji=u):gc(e,t),bc(t),8192&a){if(u=null!==t.memoizedState,(t.stateNode.isHidden=u)&&!h&&0!==(1&t.mode))for($i=t,h=t.child;null!==h;){for(d=$i=h;null!==$i;){switch(f=(p=$i).child,p.tag){case 0:case 11:case 14:case 15:ac(4,p,p.return);break;case 1:tc(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){a=p,n=p.return;try{e=a,m.props=e.memoizedProps,m.state=e.memoizedState,m.componentWillUnmount()}catch(g){Nl(a,n,g)}}break;case 5:tc(p,p.return);break;case 22:if(null!==p.memoizedState){kc(d);continue}}null!==f?(f.return=p,$i=f):kc(d)}h=h.sibling}t:for(h=null,d=t;;){if(5===d.tag){if(null===h){h=d;try{r=d.stateNode,u?"function"===typeof(o=r.style).setProperty?o.setProperty("display","none","important"):o.display="none":(c=d.stateNode,i=void 0!==(l=d.memoizedProps.style)&&null!==l&&l.hasOwnProperty("display")?l.display:null,c.style.display=mt("display",i))}catch(g){Nl(t,t.return,g)}}}else if(6===d.tag){if(null===h)try{d.stateNode.nodeValue=u?"":d.memoizedProps}catch(g){Nl(t,t.return,g)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===t)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===t)break t;for(;null===d.sibling;){if(null===d.return||d.return===t)break t;h===d&&(h=null),d=d.return}h===d&&(h=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:gc(e,t),bc(t),4&a&&mc(t);case 21:}}function bc(t){var e=t.flags;if(2&e){try{t:{for(var n=t.return;null!==n;){if(ic(n)){var a=n;break t}n=n.return}throw Error(s(160))}switch(a.tag){case 5:var r=a.stateNode;32&a.flags&&(dt(r,""),a.flags&=-33),uc(t,cc(t),r);break;case 3:case 4:var o=a.stateNode.containerInfo;lc(t,cc(t),o);break;default:throw Error(s(161))}}catch(i){Nl(t,t.return,i)}t.flags&=-3}4096&e&&(t.flags&=-4097)}function xc(t,e,n){$i=t,vc(t,e,n)}function vc(t,e,n){for(var a=0!==(1&t.mode);null!==$i;){var r=$i,s=r.child;if(22===r.tag&&a){var o=null!==r.memoizedState||Qi;if(!o){var i=r.alternate,c=null!==i&&null!==i.memoizedState||Ji;i=Qi;var l=Ji;if(Qi=o,(Ji=c)&&!l)for($i=r;null!==$i;)c=(o=$i).child,22===o.tag&&null!==o.memoizedState?Ic(r):null!==c?(c.return=o,$i=c):Ic(r);for(;null!==s;)$i=s,vc(s,e,n),s=s.sibling;$i=r,Qi=i,Ji=l}wc(t)}else 0!==(8772&r.subtreeFlags)&&null!==s?(s.return=r,$i=s):wc(t)}}function wc(t){for(;null!==$i;){var e=$i;if(0!==(8772&e.flags)){var n=e.alternate;try{if(0!==(8772&e.flags))switch(e.tag){case 0:case 11:case 15:Ji||rc(5,e);break;case 1:var a=e.stateNode;if(4&e.flags&&!Ji)if(null===n)a.componentDidMount();else{var r=e.elementType===e.type?n.memoizedProps:gs(e.type,n.memoizedProps);a.componentDidUpdate(r,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var o=e.updateQueue;null!==o&&Ps(e,o,a);break;case 3:var i=e.updateQueue;if(null!==i){if(n=null,null!==e.child)switch(e.child.tag){case 5:case 1:n=e.child.stateNode}Ps(e,i,n)}break;case 5:var c=e.stateNode;if(null===n&&4&e.flags){n=c;var l=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&n.focus();break;case"img":l.src&&(n.src=l.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===e.memoizedState){var u=e.alternate;if(null!==u){var h=u.memoizedState;if(null!==h){var d=h.dehydrated;null!==d&&Ve(d)}}}break;default:throw Error(s(163))}Ji||512&e.flags&&sc(e)}catch(p){Nl(e,e.return,p)}}if(e===t){$i=null;break}if(null!==(n=e.sibling)){n.return=e.return,$i=n;break}$i=e.return}}function kc(t){for(;null!==$i;){var e=$i;if(e===t){$i=null;break}var n=e.sibling;if(null!==n){n.return=e.return,$i=n;break}$i=e.return}}function Ic(t){for(;null!==$i;){var e=$i;try{switch(e.tag){case 0:case 11:case 15:var n=e.return;try{rc(4,e)}catch(c){Nl(e,n,c)}break;case 1:var a=e.stateNode;if("function"===typeof a.componentDidMount){var r=e.return;try{a.componentDidMount()}catch(c){Nl(e,r,c)}}var s=e.return;try{sc(e)}catch(c){Nl(e,s,c)}break;case 5:var o=e.return;try{sc(e)}catch(c){Nl(e,o,c)}}}catch(c){Nl(e,e.return,c)}if(e===t){$i=null;break}var i=e.sibling;if(null!==i){i.return=e.return,$i=i;break}$i=e.return}}var Sc,Nc=Math.ceil,Tc=v.ReactCurrentDispatcher,Ec=v.ReactCurrentOwner,Cc=v.ReactCurrentBatchConfig,Rc=0,_c=null,Ac=null,Dc=0,Fc=0,Oc=Sr(0),Mc=0,Lc=null,zc=0,Pc=0,Bc=0,Wc=null,Uc=null,Vc=0,Gc=1/0,Hc=null,jc=!1,Kc=null,qc=null,Xc=!1,Yc=null,Qc=0,Jc=0,Zc=null,$c=-1,tl=0;function el(){return 0!==(6&Rc)?Jt():-1!==$c?$c:$c=Jt()}function nl(t){return 0===(1&t.mode)?1:0!==(2&Rc)&&0!==Dc?Dc&-Dc:null!==ms.transition?(0===tl&&(tl=me()),tl):0!==(t=xe)?t:t=void 0===(t=window.event)?16:Qe(t.type)}function al(t,e,n,a){if(50<Jc)throw Jc=0,Zc=null,Error(s(185));ye(t,n,a),0!==(2&Rc)&&t===_c||(t===_c&&(0===(2&Rc)&&(Pc|=n),4===Mc&&cl(t,Dc)),rl(t,a),1===n&&0===Rc&&0===(1&e.mode)&&(Gc=Jt()+500,Br&&Vr()))}function rl(t,e){var n=t.callbackNode;!function(t,e){for(var n=t.suspendedLanes,a=t.pingedLanes,r=t.expirationTimes,s=t.pendingLanes;0<s;){var o=31-oe(s),i=1<<o,c=r[o];-1===c?0!==(i&n)&&0===(i&a)||(r[o]=pe(i,e)):c<=e&&(t.expiredLanes|=i),s&=~i}}(t,e);var a=de(t,t===_c?Dc:0);if(0===a)null!==n&&Xt(n),t.callbackNode=null,t.callbackPriority=0;else if(e=a&-a,t.callbackPriority!==e){if(null!=n&&Xt(n),1===e)0===t.tag?function(t){Br=!0,Ur(t)}(ll.bind(null,t)):Ur(ll.bind(null,t)),or((function(){0===(6&Rc)&&Vr()})),n=null;else{switch(ve(a)){case 1:n=$t;break;case 4:n=te;break;case 16:default:n=ee;break;case 536870912:n=ae}n=_l(n,sl.bind(null,t))}t.callbackPriority=e,t.callbackNode=n}}function sl(t,e){if($c=-1,tl=0,0!==(6&Rc))throw Error(s(327));var n=t.callbackNode;if(Il()&&t.callbackNode!==n)return null;var a=de(t,t===_c?Dc:0);if(0===a)return null;if(0!==(30&a)||0!==(a&t.expiredLanes)||e)e=yl(t,a);else{e=a;var r=Rc;Rc|=2;var o=ml();for(_c===t&&Dc===e||(Hc=null,Gc=Jt()+500,pl(t,e));;)try{xl();break}catch(c){fl(t,c)}ws(),Tc.current=o,Rc=r,null!==Ac?e=0:(_c=null,Dc=0,e=Mc)}if(0!==e){if(2===e&&(0!==(r=fe(t))&&(a=r,e=ol(t,r))),1===e)throw n=Lc,pl(t,0),cl(t,a),rl(t,Jt()),n;if(6===e)cl(t,a);else{if(r=t.current.alternate,0===(30&a)&&!function(t){for(var e=t;;){if(16384&e.flags){var n=e.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var r=n[a],s=r.getSnapshot;r=r.value;try{if(!ia(s(),r))return!1}catch(i){return!1}}}if(n=e.child,16384&e.subtreeFlags&&null!==n)n.return=e,e=n;else{if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}(r)&&(2===(e=yl(t,a))&&(0!==(o=fe(t))&&(a=o,e=ol(t,o))),1===e))throw n=Lc,pl(t,0),cl(t,a),rl(t,Jt()),n;switch(t.finishedWork=r,t.finishedLanes=a,e){case 0:case 1:throw Error(s(345));case 2:case 5:kl(t,Uc,Hc);break;case 3:if(cl(t,a),(130023424&a)===a&&10<(e=Vc+500-Jt())){if(0!==de(t,0))break;if(((r=t.suspendedLanes)&a)!==a){el(),t.pingedLanes|=t.suspendedLanes&r;break}t.timeoutHandle=ar(kl.bind(null,t,Uc,Hc),e);break}kl(t,Uc,Hc);break;case 4:if(cl(t,a),(4194240&a)===a)break;for(e=t.eventTimes,r=-1;0<a;){var i=31-oe(a);o=1<<i,(i=e[i])>r&&(r=i),a&=~o}if(a=r,10<(a=(120>(a=Jt()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Nc(a/1960))-a)){t.timeoutHandle=ar(kl.bind(null,t,Uc,Hc),a);break}kl(t,Uc,Hc);break;default:throw Error(s(329))}}}return rl(t,Jt()),t.callbackNode===n?sl.bind(null,t):null}function ol(t,e){var n=Wc;return t.current.memoizedState.isDehydrated&&(pl(t,e).flags|=256),2!==(t=yl(t,e))&&(e=Uc,Uc=n,null!==e&&il(e)),t}function il(t){null===Uc?Uc=t:Uc.push.apply(Uc,t)}function cl(t,e){for(e&=~Bc,e&=~Pc,t.suspendedLanes|=e,t.pingedLanes&=~e,t=t.expirationTimes;0<e;){var n=31-oe(e),a=1<<n;t[n]=-1,e&=~a}}function ll(t){if(0!==(6&Rc))throw Error(s(327));Il();var e=de(t,0);if(0===(1&e))return rl(t,Jt()),null;var n=yl(t,e);if(0!==t.tag&&2===n){var a=fe(t);0!==a&&(e=a,n=ol(t,a))}if(1===n)throw n=Lc,pl(t,0),cl(t,e),rl(t,Jt()),n;if(6===n)throw Error(s(345));return t.finishedWork=t.current.alternate,t.finishedLanes=e,kl(t,Uc,Hc),rl(t,Jt()),null}function ul(t,e){var n=Rc;Rc|=1;try{return t(e)}finally{0===(Rc=n)&&(Gc=Jt()+500,Br&&Vr())}}function hl(t){null!==Yc&&0===Yc.tag&&0===(6&Rc)&&Il();var e=Rc;Rc|=1;var n=Cc.transition,a=xe;try{if(Cc.transition=null,xe=1,t)return t()}finally{xe=a,Cc.transition=n,0===(6&(Rc=e))&&Vr()}}function dl(){Fc=Oc.current,Nr(Oc)}function pl(t,e){t.finishedWork=null,t.finishedLanes=0;var n=t.timeoutHandle;if(-1!==n&&(t.timeoutHandle=-1,rr(n)),null!==Ac)for(n=Ac.return;null!==n;){var a=n;switch(es(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&Fr();break;case 3:ro(),Nr(Rr),Nr(Cr),uo();break;case 5:oo(a);break;case 4:ro();break;case 13:case 19:Nr(io);break;case 10:ks(a.type._context);break;case 22:case 23:dl()}n=n.return}if(_c=t,Ac=t=Ol(t.current,null),Dc=Fc=e,Mc=0,Lc=null,Bc=Pc=zc=0,Uc=Wc=null,null!==Ts){for(e=0;e<Ts.length;e++)if(null!==(a=(n=Ts[e]).interleaved)){n.interleaved=null;var r=a.next,s=n.pending;if(null!==s){var o=s.next;s.next=r,a.next=o}n.pending=a}Ts=null}return t}function fl(t,e){for(;;){var n=Ac;try{if(ws(),ho.current=oi,bo){for(var a=mo.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}bo=!1}if(fo=0,yo=go=mo=null,xo=!1,vo=0,Ec.current=null,null===n||null===n.return){Mc=1,Lc=e,Ac=null;break}t:{var o=t,i=n.return,c=n,l=e;if(e=Dc,c.flags|=32768,null!==l&&"object"===typeof l&&"function"===typeof l.then){var u=l,h=c,d=h.tag;if(0===(1&h.mode)&&(0===d||11===d||15===d)){var p=h.alternate;p?(h.updateQueue=p.updateQueue,h.memoizedState=p.memoizedState,h.lanes=p.lanes):(h.updateQueue=null,h.memoizedState=null)}var f=yi(i);if(null!==f){f.flags&=-257,bi(f,i,c,0,e),1&f.mode&&gi(o,u,e),l=u;var m=(e=f).updateQueue;if(null===m){var g=new Set;g.add(l),e.updateQueue=g}else m.add(l);break t}if(0===(1&e)){gi(o,u,e),gl();break t}l=Error(s(426))}else if(rs&&1&c.mode){var y=yi(i);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),bi(y,i,c,0,e),fs(ui(l,c));break t}}o=l=ui(l,c),4!==Mc&&(Mc=2),null===Wc?Wc=[o]:Wc.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,e&=-e,o.lanes|=e,Ls(o,fi(0,l,e));break t;case 1:c=l;var b=o.type,x=o.stateNode;if(0===(128&o.flags)&&("function"===typeof b.getDerivedStateFromError||null!==x&&"function"===typeof x.componentDidCatch&&(null===qc||!qc.has(x)))){o.flags|=65536,e&=-e,o.lanes|=e,Ls(o,mi(o,c,e));break t}}o=o.return}while(null!==o)}wl(n)}catch(v){e=v,Ac===n&&null!==n&&(Ac=n=n.return);continue}break}}function ml(){var t=Tc.current;return Tc.current=oi,null===t?oi:t}function gl(){0!==Mc&&3!==Mc&&2!==Mc||(Mc=4),null===_c||0===(268435455&zc)&&0===(268435455&Pc)||cl(_c,Dc)}function yl(t,e){var n=Rc;Rc|=2;var a=ml();for(_c===t&&Dc===e||(Hc=null,pl(t,e));;)try{bl();break}catch(r){fl(t,r)}if(ws(),Rc=n,Tc.current=a,null!==Ac)throw Error(s(261));return _c=null,Dc=0,Mc}function bl(){for(;null!==Ac;)vl(Ac)}function xl(){for(;null!==Ac&&!Yt();)vl(Ac)}function vl(t){var e=Sc(t.alternate,t,Fc);t.memoizedProps=t.pendingProps,null===e?wl(t):Ac=e,Ec.current=null}function wl(t){var e=t;do{var n=e.alternate;if(t=e.return,0===(32768&e.flags)){if(null!==(n=Xi(n,e,Fc)))return void(Ac=n)}else{if(null!==(n=Yi(n,e)))return n.flags&=32767,void(Ac=n);if(null===t)return Mc=6,void(Ac=null);t.flags|=32768,t.subtreeFlags=0,t.deletions=null}if(null!==(e=e.sibling))return void(Ac=e);Ac=e=t}while(null!==e);0===Mc&&(Mc=5)}function kl(t,e,n){var a=xe,r=Cc.transition;try{Cc.transition=null,xe=1,function(t,e,n,a){do{Il()}while(null!==Yc);if(0!==(6&Rc))throw Error(s(327));n=t.finishedWork;var r=t.finishedLanes;if(null===n)return null;if(t.finishedWork=null,t.finishedLanes=0,n===t.current)throw Error(s(177));t.callbackNode=null,t.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(t,e){var n=t.pendingLanes&~e;t.pendingLanes=e,t.suspendedLanes=0,t.pingedLanes=0,t.expiredLanes&=e,t.mutableReadLanes&=e,t.entangledLanes&=e,e=t.entanglements;var a=t.eventTimes;for(t=t.expirationTimes;0<n;){var r=31-oe(n),s=1<<r;e[r]=0,a[r]=-1,t[r]=-1,n&=~s}}(t,o),t===_c&&(Ac=_c=null,Dc=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Xc||(Xc=!0,_l(ee,(function(){return Il(),null}))),o=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||o){o=Cc.transition,Cc.transition=null;var i=xe;xe=1;var c=Rc;Rc|=4,Ec.current=null,function(t,e){if(tr=He,pa(t=da())){if("selectionStart"in t)var n={start:t.selectionStart,end:t.selectionEnd};else t:{var a=(n=(n=t.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,o=a.focusNode;a=a.focusOffset;try{n.nodeType,o.nodeType}catch(w){n=null;break t}var i=0,c=-1,l=-1,u=0,h=0,d=t,p=null;e:for(;;){for(var f;d!==n||0!==r&&3!==d.nodeType||(c=i+r),d!==o||0!==a&&3!==d.nodeType||(l=i+a),3===d.nodeType&&(i+=d.nodeValue.length),null!==(f=d.firstChild);)p=d,d=f;for(;;){if(d===t)break e;if(p===n&&++u===r&&(c=i),p===o&&++h===a&&(l=i),null!==(f=d.nextSibling))break;p=(d=p).parentNode}d=f}n=-1===c||-1===l?null:{start:c,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(er={focusedElem:t,selectionRange:n},He=!1,$i=e;null!==$i;)if(t=(e=$i).child,0!==(1028&e.subtreeFlags)&&null!==t)t.return=e,$i=t;else for(;null!==$i;){e=$i;try{var m=e.alternate;if(0!==(1024&e.flags))switch(e.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=e.stateNode,x=b.getSnapshotBeforeUpdate(e.elementType===e.type?g:gs(e.type,g),y);b.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var v=e.stateNode.containerInfo;1===v.nodeType?v.textContent="":9===v.nodeType&&v.documentElement&&v.removeChild(v.documentElement);break;default:throw Error(s(163))}}catch(w){Nl(e,e.return,w)}if(null!==(t=e.sibling)){t.return=e.return,$i=t;break}$i=e.return}m=nc,nc=!1}(t,n),yc(n,t),fa(er),He=!!tr,er=tr=null,t.current=n,xc(n,t,r),Qt(),Rc=c,xe=i,Cc.transition=o}else t.current=n;if(Xc&&(Xc=!1,Yc=t,Qc=r),o=t.pendingLanes,0===o&&(qc=null),function(t){if(se&&"function"===typeof se.onCommitFiberRoot)try{se.onCommitFiberRoot(re,t,void 0,128===(128&t.current.flags))}catch(e){}}(n.stateNode),rl(t,Jt()),null!==e)for(a=t.onRecoverableError,n=0;n<e.length;n++)r=e[n],a(r.value,{componentStack:r.stack,digest:r.digest});if(jc)throw jc=!1,t=Kc,Kc=null,t;0!==(1&Qc)&&0!==t.tag&&Il(),o=t.pendingLanes,0!==(1&o)?t===Zc?Jc++:(Jc=0,Zc=t):Jc=0,Vr()}(t,e,n,a)}finally{Cc.transition=r,xe=a}return null}function Il(){if(null!==Yc){var t=ve(Qc),e=Cc.transition,n=xe;try{if(Cc.transition=null,xe=16>t?16:t,null===Yc)var a=!1;else{if(t=Yc,Yc=null,Qc=0,0!==(6&Rc))throw Error(s(331));var r=Rc;for(Rc|=4,$i=t.current;null!==$i;){var o=$i,i=o.child;if(0!==(16&$i.flags)){var c=o.deletions;if(null!==c){for(var l=0;l<c.length;l++){var u=c[l];for($i=u;null!==$i;){var h=$i;switch(h.tag){case 0:case 11:case 15:ac(8,h,o)}var d=h.child;if(null!==d)d.return=h,$i=d;else for(;null!==$i;){var p=(h=$i).sibling,f=h.return;if(oc(h),h===u){$i=null;break}if(null!==p){p.return=f,$i=p;break}$i=f}}}var m=o.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}$i=o}}if(0!==(2064&o.subtreeFlags)&&null!==i)i.return=o,$i=i;else t:for(;null!==$i;){if(0!==(2048&(o=$i).flags))switch(o.tag){case 0:case 11:case 15:ac(9,o,o.return)}var b=o.sibling;if(null!==b){b.return=o.return,$i=b;break t}$i=o.return}}var x=t.current;for($i=x;null!==$i;){var v=(i=$i).child;if(0!==(2064&i.subtreeFlags)&&null!==v)v.return=i,$i=v;else t:for(i=x;null!==$i;){if(0!==(2048&(c=$i).flags))try{switch(c.tag){case 0:case 11:case 15:rc(9,c)}}catch(k){Nl(c,c.return,k)}if(c===i){$i=null;break t}var w=c.sibling;if(null!==w){w.return=c.return,$i=w;break t}$i=c.return}}if(Rc=r,Vr(),se&&"function"===typeof se.onPostCommitFiberRoot)try{se.onPostCommitFiberRoot(re,t)}catch(k){}a=!0}return a}finally{xe=n,Cc.transition=e}}return!1}function Sl(t,e,n){t=Os(t,e=fi(0,e=ui(n,e),1),1),e=el(),null!==t&&(ye(t,1,e),rl(t,e))}function Nl(t,e,n){if(3===t.tag)Sl(t,t,n);else for(;null!==e;){if(3===e.tag){Sl(e,t,n);break}if(1===e.tag){var a=e.stateNode;if("function"===typeof e.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===qc||!qc.has(a))){e=Os(e,t=mi(e,t=ui(n,t),1),1),t=el(),null!==e&&(ye(e,1,t),rl(e,t));break}}e=e.return}}function Tl(t,e,n){var a=t.pingCache;null!==a&&a.delete(e),e=el(),t.pingedLanes|=t.suspendedLanes&n,_c===t&&(Dc&n)===n&&(4===Mc||3===Mc&&(130023424&Dc)===Dc&&500>Jt()-Vc?pl(t,0):Bc|=n),rl(t,e)}function El(t,e){0===e&&(0===(1&t.mode)?e=1:(e=ue,0===(130023424&(ue<<=1))&&(ue=4194304)));var n=el();null!==(t=Rs(t,e))&&(ye(t,e,n),rl(t,n))}function Cl(t){var e=t.memoizedState,n=0;null!==e&&(n=e.retryLane),El(t,n)}function Rl(t,e){var n=0;switch(t.tag){case 13:var a=t.stateNode,r=t.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=t.stateNode;break;default:throw Error(s(314))}null!==a&&a.delete(e),El(t,n)}function _l(t,e){return qt(t,e)}function Al(t,e,n,a){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Dl(t,e,n,a){return new Al(t,e,n,a)}function Fl(t){return!(!(t=t.prototype)||!t.isReactComponent)}function Ol(t,e){var n=t.alternate;return null===n?((n=Dl(t.tag,e,t.key,t.mode)).elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.type=t.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&t.flags,n.childLanes=t.childLanes,n.lanes=t.lanes,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function Ml(t,e,n,a,r,o){var i=2;if(a=t,"function"===typeof t)Fl(t)&&(i=1);else if("string"===typeof t)i=5;else t:switch(t){case I:return Ll(n.children,r,o,e);case S:i=8,r|=8;break;case N:return(t=Dl(12,n,e,2|r)).elementType=N,t.lanes=o,t;case R:return(t=Dl(13,n,e,r)).elementType=R,t.lanes=o,t;case _:return(t=Dl(19,n,e,r)).elementType=_,t.lanes=o,t;case F:return zl(n,r,o,e);default:if("object"===typeof t&&null!==t)switch(t.$$typeof){case T:i=10;break t;case E:i=9;break t;case C:i=11;break t;case A:i=14;break t;case D:i=16,a=null;break t}throw Error(s(130,null==t?t:typeof t,""))}return(e=Dl(i,n,e,r)).elementType=t,e.type=a,e.lanes=o,e}function Ll(t,e,n,a){return(t=Dl(7,t,a,e)).lanes=n,t}function zl(t,e,n,a){return(t=Dl(22,t,a,e)).elementType=F,t.lanes=n,t.stateNode={isHidden:!1},t}function Pl(t,e,n){return(t=Dl(6,t,null,e)).lanes=n,t}function Bl(t,e,n){return(e=Dl(4,null!==t.children?t.children:[],t.key,e)).lanes=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function Wl(t,e,n,a,r){this.tag=e,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=ge(0),this.expirationTimes=ge(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=ge(0),this.identifierPrefix=a,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function Ul(t,e,n,a,r,s,o,i,c){return t=new Wl(t,e,n,i,c),1===e?(e=1,!0===s&&(e|=8)):e=0,s=Dl(3,null,null,e),t.current=s,s.stateNode=t,s.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},As(s),t}function Vl(t){if(!t)return Er;t:{if(Vt(t=t._reactInternals)!==t||1!==t.tag)throw Error(s(170));var e=t;do{switch(e.tag){case 3:e=e.stateNode.context;break t;case 1:if(Dr(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break t}}e=e.return}while(null!==e);throw Error(s(171))}if(1===t.tag){var n=t.type;if(Dr(n))return Mr(t,n,e)}return e}function Gl(t,e,n,a,r,s,o,i,c){return(t=Ul(n,a,!0,t,0,s,0,i,c)).context=Vl(null),n=t.current,(s=Fs(a=el(),r=nl(n))).callback=void 0!==e&&null!==e?e:null,Os(n,s,r),t.current.lanes=r,ye(t,r,a),rl(t,a),t}function Hl(t,e,n,a){var r=e.current,s=el(),o=nl(r);return n=Vl(n),null===e.context?e.context=n:e.pendingContext=n,(e=Fs(s,o)).payload={element:t},null!==(a=void 0===a?null:a)&&(e.callback=a),null!==(t=Os(r,e,o))&&(al(t,r,o,s),Ms(t,r,o)),o}function jl(t){return(t=t.current).child?(t.child.tag,t.child.stateNode):null}function Kl(t,e){if(null!==(t=t.memoizedState)&&null!==t.dehydrated){var n=t.retryLane;t.retryLane=0!==n&&n<e?n:e}}function ql(t,e){Kl(t,e),(t=t.alternate)&&Kl(t,e)}Sc=function(t,e,n){if(null!==t)if(t.memoizedProps!==e.pendingProps||Rr.current)vi=!0;else{if(0===(t.lanes&n)&&0===(128&e.flags))return vi=!1,function(t,e,n){switch(e.tag){case 3:_i(e),ps();break;case 5:so(e);break;case 1:Dr(e.type)&&Lr(e);break;case 4:ao(e,e.stateNode.containerInfo);break;case 10:var a=e.type._context,r=e.memoizedProps.value;Tr(ys,a._currentValue),a._currentValue=r;break;case 13:if(null!==(a=e.memoizedState))return null!==a.dehydrated?(Tr(io,1&io.current),e.flags|=128,null):0!==(n&e.child.childLanes)?Pi(t,e,n):(Tr(io,1&io.current),null!==(t=ji(t,e,n))?t.sibling:null);Tr(io,1&io.current);break;case 19:if(a=0!==(n&e.childLanes),0!==(128&t.flags)){if(a)return Gi(t,e,n);e.flags|=128}if(null!==(r=e.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Tr(io,io.current),a)break;return null;case 22:case 23:return e.lanes=0,Ni(t,e,n)}return ji(t,e,n)}(t,e,n);vi=0!==(131072&t.flags)}else vi=!1,rs&&0!==(1048576&e.flags)&&$r(e,Kr,e.index);switch(e.lanes=0,e.tag){case 2:var a=e.type;Hi(t,e),t=e.pendingProps;var r=Ar(e,Cr.current);Ss(e,n),r=So(null,e,a,t,r,n);var o=No();return e.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(e.tag=1,e.memoizedState=null,e.updateQueue=null,Dr(a)?(o=!0,Lr(e)):o=!1,e.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,As(e),r.updater=Us,e.stateNode=r,r._reactInternals=e,js(e,a,t,n),e=Ri(null,e,a,!0,o,n)):(e.tag=0,rs&&o&&ts(e),wi(null,e,r,n),e=e.child),e;case 16:a=e.elementType;t:{switch(Hi(t,e),t=e.pendingProps,a=(r=a._init)(a._payload),e.type=a,r=e.tag=function(t){if("function"===typeof t)return Fl(t)?1:0;if(void 0!==t&&null!==t){if((t=t.$$typeof)===C)return 11;if(t===A)return 14}return 2}(a),t=gs(a,t),r){case 0:e=Ei(null,e,a,t,n);break t;case 1:e=Ci(null,e,a,t,n);break t;case 11:e=ki(null,e,a,t,n);break t;case 14:e=Ii(null,e,a,gs(a.type,t),n);break t}throw Error(s(306,a,""))}return e;case 0:return a=e.type,r=e.pendingProps,Ei(t,e,a,r=e.elementType===a?r:gs(a,r),n);case 1:return a=e.type,r=e.pendingProps,Ci(t,e,a,r=e.elementType===a?r:gs(a,r),n);case 3:t:{if(_i(e),null===t)throw Error(s(387));a=e.pendingProps,r=(o=e.memoizedState).element,Ds(t,e),zs(e,a,null,n);var i=e.memoizedState;if(a=i.element,o.isDehydrated){if(o={element:a,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},e.updateQueue.baseState=o,e.memoizedState=o,256&e.flags){e=Ai(t,e,a,n,r=ui(Error(s(423)),e));break t}if(a!==r){e=Ai(t,e,a,n,r=ui(Error(s(424)),e));break t}for(as=lr(e.stateNode.containerInfo.firstChild),ns=e,rs=!0,ss=null,n=Js(e,null,a,n),e.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ps(),a===r){e=ji(t,e,n);break t}wi(t,e,a,n)}e=e.child}return e;case 5:return so(e),null===t&&ls(e),a=e.type,r=e.pendingProps,o=null!==t?t.memoizedProps:null,i=r.children,nr(a,r)?i=null:null!==o&&nr(a,o)&&(e.flags|=32),Ti(t,e),wi(t,e,i,n),e.child;case 6:return null===t&&ls(e),null;case 13:return Pi(t,e,n);case 4:return ao(e,e.stateNode.containerInfo),a=e.pendingProps,null===t?e.child=Qs(e,null,a,n):wi(t,e,a,n),e.child;case 11:return a=e.type,r=e.pendingProps,ki(t,e,a,r=e.elementType===a?r:gs(a,r),n);case 7:return wi(t,e,e.pendingProps,n),e.child;case 8:case 12:return wi(t,e,e.pendingProps.children,n),e.child;case 10:t:{if(a=e.type._context,r=e.pendingProps,o=e.memoizedProps,i=r.value,Tr(ys,a._currentValue),a._currentValue=i,null!==o)if(ia(o.value,i)){if(o.children===r.children&&!Rr.current){e=ji(t,e,n);break t}}else for(null!==(o=e.child)&&(o.return=e);null!==o;){var c=o.dependencies;if(null!==c){i=o.child;for(var l=c.firstContext;null!==l;){if(l.context===a){if(1===o.tag){(l=Fs(-1,n&-n)).tag=2;var u=o.updateQueue;if(null!==u){var h=(u=u.shared).pending;null===h?l.next=l:(l.next=h.next,h.next=l),u.pending=l}}o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Is(o.return,n,e),c.lanes|=n;break}l=l.next}}else if(10===o.tag)i=o.type===e.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(s(341));i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Is(i,n,e),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===e){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}wi(t,e,r.children,n),e=e.child}return e;case 9:return r=e.type,a=e.pendingProps.children,Ss(e,n),a=a(r=Ns(r)),e.flags|=1,wi(t,e,a,n),e.child;case 14:return r=gs(a=e.type,e.pendingProps),Ii(t,e,a,r=gs(a.type,r),n);case 15:return Si(t,e,e.type,e.pendingProps,n);case 17:return a=e.type,r=e.pendingProps,r=e.elementType===a?r:gs(a,r),Hi(t,e),e.tag=1,Dr(a)?(t=!0,Lr(e)):t=!1,Ss(e,n),Gs(e,a,r),js(e,a,r,n),Ri(null,e,a,!0,t,n);case 19:return Gi(t,e,n);case 22:return Ni(t,e,n)}throw Error(s(156,e.tag))};var Xl="function"===typeof reportError?reportError:function(t){console.error(t)};function Yl(t){this._internalRoot=t}function Ql(t){this._internalRoot=t}function Jl(t){return!(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType)}function Zl(t){return!(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType&&(8!==t.nodeType||" react-mount-point-unstable "!==t.nodeValue))}function $l(){}function tu(t,e,n,a,r){var s=n._reactRootContainer;if(s){var o=s;if("function"===typeof r){var i=r;r=function(){var t=jl(o);i.call(t)}}Hl(e,o,t,r)}else o=function(t,e,n,a,r){if(r){if("function"===typeof a){var s=a;a=function(){var t=jl(o);s.call(t)}}var o=Gl(e,a,t,0,null,!1,0,"",$l);return t._reactRootContainer=o,t[fr]=o.current,Va(8===t.nodeType?t.parentNode:t),hl(),o}for(;r=t.lastChild;)t.removeChild(r);if("function"===typeof a){var i=a;a=function(){var t=jl(c);i.call(t)}}var c=Ul(t,0,!1,null,0,!1,0,"",$l);return t._reactRootContainer=c,t[fr]=c.current,Va(8===t.nodeType?t.parentNode:t),hl((function(){Hl(e,c,n,a)})),c}(n,e,t,r,a);return jl(o)}Ql.prototype.render=Yl.prototype.render=function(t){var e=this._internalRoot;if(null===e)throw Error(s(409));Hl(t,e,null,null)},Ql.prototype.unmount=Yl.prototype.unmount=function(){var t=this._internalRoot;if(null!==t){this._internalRoot=null;var e=t.containerInfo;hl((function(){Hl(null,t,null,null)})),e[fr]=null}},Ql.prototype.unstable_scheduleHydration=function(t){if(t){var e=Se();t={blockedOn:null,target:t,priority:e};for(var n=0;n<Fe.length&&0!==e&&e<Fe[n].priority;n++);Fe.splice(n,0,t),0===n&&ze(t)}},we=function(t){switch(t.tag){case 3:var e=t.stateNode;if(e.current.memoizedState.isDehydrated){var n=he(e.pendingLanes);0!==n&&(be(e,1|n),rl(e,Jt()),0===(6&Rc)&&(Gc=Jt()+500,Vr()))}break;case 13:hl((function(){var e=Rs(t,1);if(null!==e){var n=el();al(e,t,1,n)}})),ql(t,1)}},ke=function(t){if(13===t.tag){var e=Rs(t,134217728);if(null!==e)al(e,t,134217728,el());ql(t,134217728)}},Ie=function(t){if(13===t.tag){var e=nl(t),n=Rs(t,e);if(null!==n)al(n,t,e,el());ql(t,e)}},Se=function(){return xe},Ne=function(t,e){var n=xe;try{return xe=t,e()}finally{xe=n}},kt=function(t,e,n){switch(e){case"input":if(Z(t,n),e=n.name,"radio"===n.type&&null!=e){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var a=n[e];if(a!==t&&a.form===t.form){var r=wr(a);if(!r)throw Error(s(90));q(a),Z(a,r)}}}break;case"textarea":st(t,n);break;case"select":null!=(e=n.value)&&nt(t,!!n.multiple,e,!1)}},Ct=ul,Rt=hl;var eu={usingClientEntryPoint:!1,Events:[xr,vr,wr,Tt,Et,ul]},nu={findFiberByHostInstance:br,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},au={bundleType:nu.bundleType,version:nu.version,rendererPackageName:nu.rendererPackageName,rendererConfig:nu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:v.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return null===(t=jt(t))?null:t.stateNode},findFiberByHostInstance:nu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ru=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ru.isDisabled&&ru.supportsFiber)try{re=ru.inject(au),se=ru}catch(ut){}}e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=eu,e.createPortal=function(t,e){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Jl(e))throw Error(s(200));return function(t,e,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==a?null:""+a,children:t,containerInfo:e,implementation:n}}(t,e,null,n)},e.createRoot=function(t,e){if(!Jl(t))throw Error(s(299));var n=!1,a="",r=Xl;return null!==e&&void 0!==e&&(!0===e.unstable_strictMode&&(n=!0),void 0!==e.identifierPrefix&&(a=e.identifierPrefix),void 0!==e.onRecoverableError&&(r=e.onRecoverableError)),e=Ul(t,1,!1,null,0,n,0,a,r),t[fr]=e.current,Va(8===t.nodeType?t.parentNode:t),new Yl(e)},e.findDOMNode=function(t){if(null==t)return null;if(1===t.nodeType)return t;var e=t._reactInternals;if(void 0===e){if("function"===typeof t.render)throw Error(s(188));throw t=Object.keys(t).join(","),Error(s(268,t))}return t=null===(t=jt(e))?null:t.stateNode},e.flushSync=function(t){return hl(t)},e.hydrate=function(t,e,n){if(!Zl(e))throw Error(s(200));return tu(null,t,e,!0,n)},e.hydrateRoot=function(t,e,n){if(!Jl(t))throw Error(s(405));var a=null!=n&&n.hydratedSources||null,r=!1,o="",i=Xl;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),e=Gl(e,null,t,1,null!=n?n:null,r,0,o,i),t[fr]=e.current,Va(t),a)for(t=0;t<a.length;t++)r=(r=(n=a[t])._getVersion)(n._source),null==e.mutableSourceEagerHydrationData?e.mutableSourceEagerHydrationData=[n,r]:e.mutableSourceEagerHydrationData.push(n,r);return new Ql(e)},e.render=function(t,e,n){if(!Zl(e))throw Error(s(200));return tu(null,t,e,!1,n)},e.unmountComponentAtNode=function(t){if(!Zl(t))throw Error(s(40));return!!t._reactRootContainer&&(hl((function(){tu(null,null,t,!1,(function(){t._reactRootContainer=null,t[fr]=null}))})),!0)},e.unstable_batchedUpdates=ul,e.unstable_renderSubtreeIntoContainer=function(t,e,n,a){if(!Zl(n))throw Error(s(200));if(null==t||void 0===t._reactInternals)throw Error(s(38));return tu(t,e,n,!1,a)},e.version="18.2.0-next-9e3b772b8-20220608"},250:(t,e,n)=>{"use strict";var a=n(164);e.createRoot=a.createRoot,e.hydrateRoot=a.hydrateRoot},164:(t,e,n)=>{"use strict";!function t(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(e){console.error(e)}}(),t.exports=n(463)},97:function(t,e,n){var a;a=function(t){return function(t){var e={};function n(a){if(e[a])return e[a].exports;var r=e[a]={i:a,l:!1,exports:{}};return t[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,a){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},n.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(a,r,function(e){return t[e]}.bind(null,r));return a},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(t,e,n){"use strict";n.r(e);var a=n("react"),r=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},t(e,n)};return function(e,n){function a(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(a.prototype=n.prototype,new a)}}(),s=function(){return s=Object.assign||function(t){for(var e,n=1,a=arguments.length;n<a;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t},s.apply(this,arguments)},o=function(t,e){var n={};for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&e.indexOf(a)<0&&(n[a]=t[a]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(t);r<a.length;r++)e.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(t,a[r])&&(n[a[r]]=t[a[r]])}return n};function i(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}"undefined"!==typeof window&&(void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(t){var e=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return e?new Promise((function(n,a){e.call(navigator,t,n,a)})):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}));var c=function(t){function e(e){var n=t.call(this,e)||this;return n.canvas=null,n.ctx=null,n.requestUserMediaId=0,n.unmounted=!1,n.state={hasUserMedia:!1},n}return r(e,t),e.prototype.componentDidMount=function(){var t=this.state,e=this.props;this.unmounted=!1,i()?(t.hasUserMedia||this.requestUserMedia(),e.children&&"function"!=typeof e.children&&console.warn("children must be a function")):e.onUserMediaError("getUserMedia not supported")},e.prototype.componentDidUpdate=function(t){var e=this.props;if(i()){var n=JSON.stringify(t.audioConstraints)!==JSON.stringify(e.audioConstraints),a=JSON.stringify(t.videoConstraints)!==JSON.stringify(e.videoConstraints),r=t.minScreenshotWidth!==e.minScreenshotWidth,s=t.minScreenshotHeight!==e.minScreenshotHeight;(a||r||s)&&(this.canvas=null,this.ctx=null),(n||a)&&(this.stopAndCleanup(),this.requestUserMedia())}else e.onUserMediaError("getUserMedia not supported")},e.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},e.stopMediaStream=function(t){t&&(t.getVideoTracks&&t.getAudioTracks?(t.getVideoTracks().map((function(e){t.removeTrack(e),e.stop()})),t.getAudioTracks().map((function(e){t.removeTrack(e),e.stop()}))):t.stop())},e.prototype.stopAndCleanup=function(){var t=this.state;t.hasUserMedia&&(e.stopMediaStream(this.stream),t.src&&window.URL.revokeObjectURL(t.src))},e.prototype.getScreenshot=function(t){var e=this.state,n=this.props;if(!e.hasUserMedia)return null;var a=this.getCanvas(t);return a&&a.toDataURL(n.screenshotFormat,n.screenshotQuality)},e.prototype.getCanvas=function(t){var e=this.state,n=this.props;if(!this.video)return null;if(!e.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var a=this.video.videoWidth,r=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var s=a/r;r=(a=n.minScreenshotWidth||this.video.clientWidth)/s,n.minScreenshotHeight&&r<n.minScreenshotHeight&&(a=(r=n.minScreenshotHeight)*s)}this.canvas=document.createElement("canvas"),this.canvas.width=(null===t||void 0===t?void 0:t.width)||a,this.canvas.height=(null===t||void 0===t?void 0:t.height)||r,this.ctx=this.canvas.getContext("2d")}var o=this.ctx,i=this.canvas;return o&&i&&(i.width=(null===t||void 0===t?void 0:t.width)||i.width,i.height=(null===t||void 0===t?void 0:t.height)||i.height,n.mirrored&&(o.translate(i.width,0),o.scale(-1,1)),o.imageSmoothingEnabled=n.imageSmoothing,o.drawImage(this.video,0,0,(null===t||void 0===t?void 0:t.width)||i.width,(null===t||void 0===t?void 0:t.height)||i.height),n.mirrored&&(o.scale(-1,1),o.translate(-i.width,0))),i},e.prototype.requestUserMedia=function(){var t=this,n=this.props,a=function(a,r){var s={video:"undefined"===typeof r||r};n.audio&&(s.audio="undefined"===typeof a||a),t.requestUserMediaId++;var o=t.requestUserMediaId;navigator.mediaDevices.getUserMedia(s).then((function(n){t.unmounted||o!==t.requestUserMediaId?e.stopMediaStream(n):t.handleUserMedia(null,n)})).catch((function(e){t.handleUserMedia(e)}))};if("mediaDevices"in navigator)a(n.audioConstraints,n.videoConstraints);else{var r=function(t){return{optional:[{sourceId:t}]}},s=function(t){var e=t.deviceId;return"string"===typeof e?e:Array.isArray(e)&&e.length>0?e[0]:"object"===typeof e&&e.ideal?e.ideal:null};MediaStreamTrack.getSources((function(t){var e=null,o=null;t.forEach((function(t){"audio"===t.kind?e=t.id:"video"===t.kind&&(o=t.id)}));var i=s(n.audioConstraints);i&&(e=i);var c=s(n.videoConstraints);c&&(o=c),a(r(e),r(o))}))}},e.prototype.handleUserMedia=function(t,e){var n=this.props;if(t||!e)return this.setState({hasUserMedia:!1}),void n.onUserMediaError(t);this.stream=e;try{this.video&&(this.video.srcObject=e),this.setState({hasUserMedia:!0})}catch(a){this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(e)})}n.onUserMedia(e)},e.prototype.render=function(){var t=this,e=this.state,n=this.props,r=n.audio,i=(n.forceScreenshotSourceSize,n.disablePictureInPicture),c=(n.onUserMedia,n.onUserMediaError,n.screenshotFormat,n.screenshotQuality,n.minScreenshotWidth,n.minScreenshotHeight,n.audioConstraints,n.videoConstraints,n.imageSmoothing,n.mirrored),l=n.style,u=void 0===l?{}:l,h=n.children,d=o(n,["audio","forceScreenshotSourceSize","disablePictureInPicture","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style","children"]),p=c?s(s({},u),{transform:(u.transform||"")+" scaleX(-1)"}):u,f={getScreenshot:this.getScreenshot.bind(this)};return a.createElement(a.Fragment,null,a.createElement("video",s({autoPlay:!0,disablePictureInPicture:i,src:e.src,muted:!r,playsInline:!0,ref:function(e){t.video=e},style:p},d)),h&&h(f))},e.defaultProps={audio:!1,disablePictureInPicture:!1,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},e}(a.Component);e.default=c},react:function(e,n){e.exports=t}}).default},t.exports=a(n(791))},374:(t,e,n)=>{"use strict";var a=n(791),r=Symbol.for("react.element"),s=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,i=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(t,e,n){var a,s={},l=null,u=null;for(a in void 0!==n&&(l=""+n),void 0!==e.key&&(l=""+e.key),void 0!==e.ref&&(u=e.ref),e)o.call(e,a)&&!c.hasOwnProperty(a)&&(s[a]=e[a]);if(t&&t.defaultProps)for(a in e=t.defaultProps)void 0===s[a]&&(s[a]=e[a]);return{$$typeof:r,type:t,key:l,ref:u,props:s,_owner:i.current}}e.jsx=l,e.jsxs=l},117:(t,e)=>{"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),c=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(t,e,n){this.props=t,this.context=e,this.refs=g,this.updater=n||f}function b(){}function x(t,e,n){this.props=t,this.context=e,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(t,e){if("object"!==typeof t&&"function"!==typeof t&&null!=t)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,e,"setState")},y.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")},b.prototype=y.prototype;var v=x.prototype=new b;v.constructor=x,m(v,y.prototype),v.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,I={current:null},S={key:!0,ref:!0,__self:!0,__source:!0};function N(t,e,a){var r,s={},o=null,i=null;if(null!=e)for(r in void 0!==e.ref&&(i=e.ref),void 0!==e.key&&(o=""+e.key),e)k.call(e,r)&&!S.hasOwnProperty(r)&&(s[r]=e[r]);var c=arguments.length-2;if(1===c)s.children=a;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];s.children=l}if(t&&t.defaultProps)for(r in c=t.defaultProps)void 0===s[r]&&(s[r]=c[r]);return{$$typeof:n,type:t,key:o,ref:i,props:s,_owner:I.current}}function T(t){return"object"===typeof t&&null!==t&&t.$$typeof===n}var E=/\/+/g;function C(t,e){return"object"===typeof t&&null!==t&&null!=t.key?function(t){var e={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,(function(t){return e[t]}))}(""+t.key):e.toString(36)}function R(t,e,r,s,o){var i=typeof t;"undefined"!==i&&"boolean"!==i||(t=null);var c=!1;if(null===t)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(t.$$typeof){case n:case a:c=!0}}if(c)return o=o(c=t),t=""===s?"."+C(c,0):s,w(o)?(r="",null!=t&&(r=t.replace(E,"$&/")+"/"),R(o,e,r,"",(function(t){return t}))):null!=o&&(T(o)&&(o=function(t,e){return{$$typeof:n,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}(o,r+(!o.key||c&&c.key===o.key?"":(""+o.key).replace(E,"$&/")+"/")+t)),e.push(o)),1;if(c=0,s=""===s?".":s+":",w(t))for(var l=0;l<t.length;l++){var u=s+C(i=t[l],l);c+=R(i,e,r,u,o)}else if(u=function(t){return null===t||"object"!==typeof t?null:"function"===typeof(t=p&&t[p]||t["@@iterator"])?t:null}(t),"function"===typeof u)for(t=u.call(t),l=0;!(i=t.next()).done;)c+=R(i=i.value,e,r,u=s+C(i,l++),o);else if("object"===i)throw e=String(t),Error("Objects are not valid as a React child (found: "+("[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return c}function _(t,e,n){if(null==t)return t;var a=[],r=0;return R(t,a,"","",(function(t){return e.call(n,t,r++)})),a}function A(t){if(-1===t._status){var e=t._result;(e=e()).then((function(e){0!==t._status&&-1!==t._status||(t._status=1,t._result=e)}),(function(e){0!==t._status&&-1!==t._status||(t._status=2,t._result=e)})),-1===t._status&&(t._status=0,t._result=e)}if(1===t._status)return t._result.default;throw t._result}var D={current:null},F={transition:null},O={ReactCurrentDispatcher:D,ReactCurrentBatchConfig:F,ReactCurrentOwner:I};e.Children={map:_,forEach:function(t,e,n){_(t,(function(){e.apply(this,arguments)}),n)},count:function(t){var e=0;return _(t,(function(){e++})),e},toArray:function(t){return _(t,(function(t){return t}))||[]},only:function(t){if(!T(t))throw Error("React.Children.only expected to receive a single React element child.");return t}},e.Component=y,e.Fragment=r,e.Profiler=o,e.PureComponent=x,e.StrictMode=s,e.Suspense=u,e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,e.cloneElement=function(t,e,a){if(null===t||void 0===t)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+t+".");var r=m({},t.props),s=t.key,o=t.ref,i=t._owner;if(null!=e){if(void 0!==e.ref&&(o=e.ref,i=I.current),void 0!==e.key&&(s=""+e.key),t.type&&t.type.defaultProps)var c=t.type.defaultProps;for(l in e)k.call(e,l)&&!S.hasOwnProperty(l)&&(r[l]=void 0===e[l]&&void 0!==c?c[l]:e[l])}var l=arguments.length-2;if(1===l)r.children=a;else if(1<l){c=Array(l);for(var u=0;u<l;u++)c[u]=arguments[u+2];r.children=c}return{$$typeof:n,type:t.type,key:s,ref:o,props:r,_owner:i}},e.createContext=function(t){return(t={$$typeof:c,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:t},t.Consumer=t},e.createElement=N,e.createFactory=function(t){var e=N.bind(null,t);return e.type=t,e},e.createRef=function(){return{current:null}},e.forwardRef=function(t){return{$$typeof:l,render:t}},e.isValidElement=T,e.lazy=function(t){return{$$typeof:d,_payload:{_status:-1,_result:t},_init:A}},e.memo=function(t,e){return{$$typeof:h,type:t,compare:void 0===e?null:e}},e.startTransition=function(t){var e=F.transition;F.transition={};try{t()}finally{F.transition=e}},e.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},e.useCallback=function(t,e){return D.current.useCallback(t,e)},e.useContext=function(t){return D.current.useContext(t)},e.useDebugValue=function(){},e.useDeferredValue=function(t){return D.current.useDeferredValue(t)},e.useEffect=function(t,e){return D.current.useEffect(t,e)},e.useId=function(){return D.current.useId()},e.useImperativeHandle=function(t,e,n){return D.current.useImperativeHandle(t,e,n)},e.useInsertionEffect=function(t,e){return D.current.useInsertionEffect(t,e)},e.useLayoutEffect=function(t,e){return D.current.useLayoutEffect(t,e)},e.useMemo=function(t,e){return D.current.useMemo(t,e)},e.useReducer=function(t,e,n){return D.current.useReducer(t,e,n)},e.useRef=function(t){return D.current.useRef(t)},e.useState=function(t){return D.current.useState(t)},e.useSyncExternalStore=function(t,e,n){return D.current.useSyncExternalStore(t,e,n)},e.useTransition=function(){return D.current.useTransition()},e.version="18.2.0"},791:(t,e,n)=>{"use strict";t.exports=n(117)},184:(t,e,n)=>{"use strict";t.exports=n(374)},813:(t,e)=>{"use strict";function n(t,e){var n=t.length;t.push(e);t:for(;0<n;){var a=n-1>>>1,r=t[a];if(!(0<s(r,e)))break t;t[a]=e,t[n]=r,n=a}}function a(t){return 0===t.length?null:t[0]}function r(t){if(0===t.length)return null;var e=t[0],n=t.pop();if(n!==e){t[0]=n;t:for(var a=0,r=t.length,o=r>>>1;a<o;){var i=2*(a+1)-1,c=t[i],l=i+1,u=t[l];if(0>s(c,n))l<r&&0>s(u,c)?(t[a]=u,t[l]=n,a=l):(t[a]=c,t[i]=n,a=i);else{if(!(l<r&&0>s(u,n)))break t;t[a]=u,t[l]=n,a=l}}}return e}function s(t,e){var n=t.sortIndex-e.sortIndex;return 0!==n?n:t.id-e.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;e.unstable_now=function(){return o.now()}}else{var i=Date,c=i.now();e.unstable_now=function(){return i.now()-c}}var l=[],u=[],h=1,d=null,p=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,x="undefined"!==typeof setImmediate?setImmediate:null;function v(t){for(var e=a(u);null!==e;){if(null===e.callback)r(u);else{if(!(e.startTime<=t))break;r(u),e.sortIndex=e.expirationTime,n(l,e)}e=a(u)}}function w(t){if(g=!1,v(t),!m)if(null!==a(l))m=!0,F(k);else{var e=a(u);null!==e&&O(w,e.startTime-t)}}function k(t,n){m=!1,g&&(g=!1,b(T),T=-1),f=!0;var s=p;try{for(v(n),d=a(l);null!==d&&(!(d.expirationTime>n)||t&&!R());){var o=d.callback;if("function"===typeof o){d.callback=null,p=d.priorityLevel;var i=o(d.expirationTime<=n);n=e.unstable_now(),"function"===typeof i?d.callback=i:d===a(l)&&r(l),v(n)}else r(l);d=a(l)}if(null!==d)var c=!0;else{var h=a(u);null!==h&&O(w,h.startTime-n),c=!1}return c}finally{d=null,p=s,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var I,S=!1,N=null,T=-1,E=5,C=-1;function R(){return!(e.unstable_now()-C<E)}function _(){if(null!==N){var t=e.unstable_now();C=t;var n=!0;try{n=N(!0,t)}finally{n?I():(S=!1,N=null)}}else S=!1}if("function"===typeof x)I=function(){x(_)};else if("undefined"!==typeof MessageChannel){var A=new MessageChannel,D=A.port2;A.port1.onmessage=_,I=function(){D.postMessage(null)}}else I=function(){y(_,0)};function F(t){N=t,S||(S=!0,I())}function O(t,n){T=y((function(){t(e.unstable_now())}),n)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(t){t.callback=null},e.unstable_continueExecution=function(){m||f||(m=!0,F(k))},e.unstable_forceFrameRate=function(t){0>t||125<t?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):E=0<t?Math.floor(1e3/t):5},e.unstable_getCurrentPriorityLevel=function(){return p},e.unstable_getFirstCallbackNode=function(){return a(l)},e.unstable_next=function(t){switch(p){case 1:case 2:case 3:var e=3;break;default:e=p}var n=p;p=e;try{return t()}finally{p=n}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(t,e){switch(t){case 1:case 2:case 3:case 4:case 5:break;default:t=3}var n=p;p=t;try{return e()}finally{p=n}},e.unstable_scheduleCallback=function(t,r,s){var o=e.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?o+s:o:s=o,t){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return t={id:h++,callback:r,priorityLevel:t,startTime:s,expirationTime:i=s+i,sortIndex:-1},s>o?(t.sortIndex=s,n(u,t),null===a(l)&&t===a(u)&&(g?(b(T),T=-1):g=!0,O(w,s-o))):(t.sortIndex=i,n(l,t),m||f||(m=!0,F(k))),t},e.unstable_shouldYield=R,e.unstable_wrapCallback=function(t){var e=p;return function(){var n=p;p=e;try{return t.apply(this,arguments)}finally{p=n}}}},296:(t,e,n)=>{"use strict";t.exports=n(813)},699:(t,e,n)=>{var a=n(501),r=n(112),s=n(132),o=n(890),i=n(113),c=n(725),l=n(411);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=c,t.exports=l},501:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this,n=function(){var t=4022871197,e=function(e){e=String(e);for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)};return e}();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function i(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function c(t,e){var n=new o(t),a=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.alea=c}(0,t=n.nmd(t),n.amdD)},725:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,a=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-a|0,e.d=a<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var a=0;a<n.length+20;a++)e.b^=0|n.charCodeAt(a),e.next()}function i(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function c(t,e){var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.tychei=c}(0,t=n.nmd(t),n.amdD)},112:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var a=0;a<n.length+64;a++)e.x^=0|n.charCodeAt(a),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function c(t,e){var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xor128=c}(0,t=n.nmd(t),n.amdD)},113:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this;e.next=function(){var t,n,a=e.w,r=e.X,s=e.i;return e.w=a=a+1640531527|0,n=r[s+34&127],t=r[s=s+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[s]=n^t,e.i=s,n+(a^a>>>16)|0},function(t,e){var n,a,r,s,o,i=[],c=128;for(e===(0|e)?(a=e,e=null):(e+="\0",a=0,c=Math.max(c,e.length)),r=0,s=-32;s<c;++s)e&&(a^=e.charCodeAt((s+32)%e.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+1640531527|0,r=0==(n=i[127&s]^=a+o)?r+1:0);for(r>=128&&(i[127&(e&&e.length||0)]=-1),r=127,s=512;s>0;--s)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;t.w=o,t.X=i,t.i=r}(e,t)}function i(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function c(t,e){null==t&&(t=+new Date);var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&(a.X&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xor4096=c}(0,t=n.nmd(t),n.amdD)},890:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this;e.next=function(){var t,n,a=e.x,r=e.i;return t=a[r],n=(t^=t>>>7)^t<<24,n^=(t=a[r+1&7])^t>>>10,n^=(t=a[r+3&7])^t>>>3,n^=(t=a[r+4&7])^t<<7,t=a[r+7&7],n^=(t^=t<<13)^t<<9,a[r]=n,e.i=r+1&7,n},function(t,e){var n,a=[];if(e===(0|e))a[0]=e;else for(e=""+e,n=0;n<e.length;++n)a[7&n]=a[7&n]<<15^e.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],t.x=a,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function i(t,e){return e.x=t.x.slice(),e.i=t.i,e}function c(t,e){null==t&&(t=+new Date);var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&(a.x&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xorshift7=c}(0,t=n.nmd(t),n.amdD)},132:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var a=0;a<n.length+64;a++)e.x^=0|n.charCodeAt(a),a==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function c(t,e){var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xorwow=c}(0,t=n.nmd(t),n.amdD)},411:function(t,e,n){var a;!function(r,s,o){var i,c=256,l=o.pow(c,6),u=o.pow(2,52),h=2*u,d=c-1;function p(t,e,n){var a=[],d=y(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,b(s)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(c):(t=new Uint8Array(c),(r.crypto||r.msCrypto).getRandomValues(t)),b(t)}catch(a){var e=r.navigator,n=e&&e.plugins;return[+new Date,r,n,r.screen,b(s)]}}():t,3),a),p=new f(a),x=function(){for(var t=p.g(6),e=l,n=0;t<u;)t=(t+n)*c,e*=c,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),s),(e.pass||n||function(t,e,n,a){return a&&(a.S&&m(a,p),t.state=function(){return m(p,{})}),n?(o.random=t,e):t})(x,d,"global"in e?e.global:this==o,e.state)}function f(t){var e,n=t.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(t=[n++]);r<c;)o[r]=r++;for(r=0;r<c;r++)o[r]=o[s=d&s+t[r%n]+(e=o[r])],o[s]=e;(a.g=function(t){for(var e,n=0,r=a.i,s=a.j,o=a.S;t--;)e=o[r=d&r+1],n=n*c+o[d&(o[r]=o[s=d&s+e])+(o[s]=e)];return a.i=r,a.j=s,n})(c)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,a=[],r=typeof t;if(e&&"object"==r)for(n in t)try{a.push(g(t[n],e-1))}catch(s){}return a.length?a:"string"==r?t:t+"\0"}function y(t,e){for(var n,a=t+"",r=0;r<a.length;)e[d&r]=d&(n^=19*e[d&r])+a.charCodeAt(r++);return b(e)}function b(t){return String.fromCharCode.apply(0,t)}if(y(o.random(),s),t.exports){t.exports=p;try{i=n(42)}catch(x){}}else void 0===(a=function(){return p}.call(e,n,e,t))||(t.exports=a)}("undefined"!==typeof self?self:this,[],Math)},410:()=>{},628:()=>{},778:()=>{},755:()=>{},4:()=>{},759:()=>{},549:()=>{},401:()=>{},42:()=>{}},e={};function n(a){var r=e[a];if(void 0!==r)return r.exports;var s=e[a]={id:a,loaded:!1,exports:{}};return t[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var a in e)n.o(e,a)&&!n.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),(()=>{"use strict";var t={};n.r(t),n.d(t,{assertParamsValid:()=>Po,computeFlatOffset:()=>Jo,computeOutShape:()=>Wo,getNormalizedAxes:()=>Ho,isSliceContinous:()=>Qo,maskToAxes:()=>Bo,parseSliceParams:()=>Zo,sliceInfo:()=>$o,startForAxis:()=>Xo,startIndicesWithElidedDims:()=>jo,stopForAxis:()=>Yo,stopIndicesWithElidedDims:()=>Ko,stridesForAxis:()=>qo,stridesWithElidedDims:()=>Uo});var e={};n.r(e),n.d(e,{collectGatherOpShapeInfo:()=>gh,computeOutShape:()=>mh,segOpComputeOptimalWindowSize:()=>fh});var a={};n.r(a),n.d(a,{ERF_A1:()=>Du,ERF_A2:()=>Fu,ERF_A3:()=>Ou,ERF_A4:()=>Mu,ERF_A5:()=>Lu,ERF_P:()=>Au,PARALLELIZE_THRESHOLD:()=>yu,RowPartitionType:()=>du,SELU_SCALE:()=>_u,SELU_SCALEALPHA:()=>Ru,applyActivation:()=>fl,assertAndGetBroadcastShape:()=>wo,assertAxesAreInnerMostDims:()=>cc,assertParamsConsistent:()=>uu,assignToTypedArray:()=>Vu,axesAreInnerMostDims:()=>rc,calculateShapes:()=>Cu,checkEinsumDimSizes:()=>Ju,checkPadOnDimRoundingMode:()=>bi,combineLocations:()=>sc,combineRaggedTensorToTensorShapes:()=>pu,complexWithEvenIndex:()=>Bu,complexWithOddIndex:()=>Wu,computeConv2DInfo:()=>ii,computeConv3DInfo:()=>ci,computeDefaultPad:()=>li,computeDilation2DInfo:()=>ri,computeOptimalWindowSize:()=>bu,computeOutAndReduceShapes:()=>oc,computeOutShape:()=>hu,computePool2DInfo:()=>si,computePool3DInfo:()=>oi,convertConv2DDataFormat:()=>yi,decodeEinsumEquation:()=>Yu,eitherStridesOrDilationsAreOne:()=>mi,expandShapeToKeepDim:()=>ic,exponent:()=>Hu,exponents:()=>Gu,fromStringArrayToUint8:()=>bh,fromUint8ToStringArray:()=>yh,getAxesPermutation:()=>lc,getBroadcastDims:()=>xo,getComplexWithIndex:()=>Uu,getEinsumComputePath:()=>Zu,getEinsumPermutation:()=>Qu,getFusedBiasGradient:()=>pl,getFusedDyActivation:()=>dl,getImageCenter:()=>xu,getInnerMostAxes:()=>hc,getPermuted:()=>wu,getRaggedRank:()=>mu,getReductionAxes:()=>vo,getReshaped:()=>vu,getReshapedPermuted:()=>ku,getRowPartitionTypesHelper:()=>fu,getSliceBeginCoords:()=>Iu,getSliceSize:()=>Su,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>nh,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>ah,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>rh,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>ih,getSparseReshapeInputOutputMismatchErrorMessage:()=>lh,getSparseReshapeInputOutputMultipleErrorMessage:()=>ch,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>sh,getSparseReshapeNegativeOutputDimErrorMessage:()=>oh,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>ph,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>uh,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>hh,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>dh,getUndoAxesPermutation:()=>uc,isIdentityPermutation:()=>$u,log:()=>Ea,mergeRealAndImagArrays:()=>zu,prepareAndValidate:()=>Nu,prepareSplitSize:()=>eh,segment_util:()=>e,shouldFuse:()=>ml,slice_util:()=>t,splitRealAndImagArrays:()=>Pu,stridesOrDilationsArePositive:()=>gi,tupleValuesAreOne:()=>fi,upcastType:()=>Cr,validateDefaultValueShape:()=>gu,validateInput:()=>Eu,validateUpdateShape:()=>Tu,warn:()=>Ta});var r={};n.r(r),n.d(r,{addImpl:()=>fw,bincountImpl:()=>ok,bincountReduceImpl:()=>ik,bitwiseAndImpl:()=>lk,castImpl:()=>lw,ceilImpl:()=>dk,concatImpl:()=>bk,equalImpl:()=>nI,expImpl:()=>pI,expm1Impl:()=>bI,floorImpl:()=>MI,gatherNdImpl:()=>GI,gatherV2Impl:()=>jI,greaterEqualImpl:()=>QI,greaterImpl:()=>qI,lessEqualImpl:()=>lS,lessImpl:()=>oS,linSpaceImpl:()=>dS,logImpl:()=>fS,maxImpl:()=>RS,maximumImpl:()=>DS,minimumImpl:()=>VS,multiplyImpl:()=>Xk,negImpl:()=>ZS,notEqualImpl:()=>oN,prodImpl:()=>xN,raggedGatherImpl:()=>SN,raggedRangeImpl:()=>EN,raggedTensorToTensorImpl:()=>FN,rangeImpl:()=>MN,rsqrtImpl:()=>qN,scatterImpl:()=>QN,sigmoidImpl:()=>tw,simpleAbsImpl:()=>Iw,sliceImpl:()=>nk,sparseFillEmptyRowsImpl:()=>gT,sparseReshapeImpl:()=>bT,sparseSegmentReductionImpl:()=>vT,sqrtImpl:()=>NT,staticRegexReplaceImpl:()=>DT,stridedSliceImpl:()=>zT,stringNGramsImpl:()=>WT,stringSplitImpl:()=>GT,stringToHashBucketFastImpl:()=>jT,subImpl:()=>SI,tileImpl:()=>JT,topKImpl:()=>eE,transposeImpl:()=>_w,uniqueImpl:()=>cE});var s={};n.r(s),n.d(s,{json:()=>HK});var o={};n.r(o),n.d(o,{json:()=>jK});var i={};n.r(i),n.d(i,{json:()=>KK});var c={};n.r(c),n.d(c,{json:()=>qK});var l={};n.r(l),n.d(l,{json:()=>XK});var u={};n.r(u),n.d(u,{json:()=>YK});var h={};n.r(h),n.d(h,{json:()=>QK});var d={};n.r(d),n.d(d,{json:()=>JK});var p={};n.r(p),n.d(p,{json:()=>ZK});var f={};n.r(f),n.d(f,{json:()=>$K});var m={};n.r(m),n.d(m,{json:()=>tq});var g={};n.r(g),n.d(g,{json:()=>eq});var y={};n.r(y),n.d(y,{json:()=>nq});var b={};n.r(b),n.d(b,{json:()=>aq});var x={};n.r(x),n.d(x,{json:()=>rq});var v={};n.r(v),n.d(v,{json:()=>sq});var w={};n.r(w),n.d(w,{json:()=>oq});var k=n(791),I=n(250);class S{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class N{refCount(t){return T("refCount")}incRef(t){return T("incRef")}timerAvailable(){return!0}time(t){return T("time")}read(t){return T("read")}readSync(t){return T("readSync")}readToGPU(t,e){return T("readToGPU")}numDataIds(){return T("numDataIds")}disposeData(t,e){return T("disposeData")}write(t,e,n){return T("write")}move(t,e,n,a,r){return T("move")}createTensorFromGPUData(t,e,n){return T("createTensorFromGPUData")}memory(){return T("memory")}floatPrecision(){return T("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return T("dispose")}}function T(t){throw new Error("'".concat(t,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}function E(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,_(t,e,n)}function C(t,e,n){return Math.max(t,Math.min(e,n))}function R(t){return t%2===0?t:t+1}function _(t,e,n){const a=t[e];t[e]=t[n],t[n]=a}function A(t,e){if(!t)throw new Error("string"===typeof e?e:e())}function D(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";A(M(t,e),(()=>n+" Shapes ".concat(t," and ").concat(e," must match")))}function F(t){A(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function O(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function M(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function L(t){return t%1===0}function z(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function P(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function B(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((r,s)=>{let o=0;const i=()=>{if(t())return void r();o++;const c=e(o);null!=n&&o>=n?s():null!=a?a(i,c):setTimeout(i,c)};i()}))}function W(t,e){let n=1,a=-1;for(let s=0;s<t.length;++s)if(t[s]>=0)n*=t[s];else if(-1===t[s]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(s));a=s}else if(t[s]<0)throw Error("Shapes can not be < 0. Found ".concat(t[s]," at dim ").concat(s));if(-1===a){if(e>0&&e!==n)throw Error("Size(".concat(e,") must match the product of shape ").concat(t));return t}if(0===n)throw Error("Cannot infer the missing size in [".concat(t,"] when ")+"there are 0 elements");if(e%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(e," / ").concat(n));const r=t.slice();return r[a]=e/n,r}function U(t,e){const n=e.length;return A((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(t))),A(t.every((t=>L(t))),(()=>"All values in axis param must be integers but "+"got axis ".concat(t))),t.map((t=>t<0?n+t:t))}function V(t,e){const n=[],a=[],r=null!=e&&Array.isArray(e)&&0===e.length,s=null==e||r?null:U(e,t).sort();let o=0;for(let i=0;i<t.length;++i){if(null!=s){if(s[o]===i&&1!==t[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(t[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===t[i]&&(n.push(t[i]),a.push(i)),s[o]<=i&&o++}1!==t[i]&&(n.push(t[i]),a.push(i))}return{newShape:n,keptDims:a}}function G(t,e){return H(t,e)}function H(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type ".concat(t));n=new Array(e)}return n}function j(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function K(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype ".concat(t))}function q(t){return"string"===typeof t||t instanceof String}function X(t){return"number"===typeof t}function Y(t){return Array.isArray(t)?Y(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":X(t)?"float32":q(t)?"string":"boolean"===typeof t?"bool":"float32"}function Q(t){return!!(t&&t.constructor&&t.call&&t.apply)}function J(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function Z(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let a=e-3;a>=0;--a)n[a]=n[a+1]*t[a+1];return n}function $(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===e.length){const s=e[0]*(a?2:1);for(let e=0;e<s;e++)r[e]=n[t+e]}else{const s=e[0],o=e.slice(1),i=o.reduce(((t,e)=>t*e))*(a?2:1);for(let e=0;e<s;e++)r[e]=$(t+e*i,o,n,a)}return r}function tt(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===t.length)return e[0];const a=t.reduce(((t,e)=>t*e))*(n?2:1);if(0===a)return[];if(a!==e.length)throw new Error("[".concat(t,"] does not match the input size ").concat(e.length).concat(n?" for a complex tensor":"","."));return $(0,t,e,n)}function et(t,e){const n=nt(t,e);for(let a=0;a<n.length;a++)n[a]=1;return n}function nt(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type ".concat(e))}function at(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return tt(t,new Float32Array(n));if("int32"===e)return tt(t,new Int32Array(n));if("bool"===e)return tt(t,new Uint8Array(n));throw new Error("Unknown data type ".concat(e))}function rt(t){t.forEach((e=>{A(Number.isInteger(e)&&e>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(t,"].")))}))}function st(t,e,n){if(0===e)return 0;if(1===e)return t[0];let a=t[t.length-1];for(let r=0;r<t.length-1;++r)a+=n[r]*t[r];return a}function ot(t,e,n){if(0===e)return[];if(1===e)return[t];const a=new Array(e);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(t/n[r]),t-=a[r]*n[r];return a[a.length-1]=t,a}function it(t){return t&&t.then&&"function"===typeof t.then}const ct="tfjsflags";class lt{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ut,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(ht().getBool("IS_TEST")||ht().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(t,"."))),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];ht().getBool("IS_TEST")||ht().getBool("PROD")||console.warn("Setting feature override from URL ".concat(t,": ").concat(e,".")),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(it(e))throw new Error("Flag ".concat(t," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error("Cannot set flag ".concat(t," as it has not been registered."));this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error("Cannot evaluate flag '".concat(t,"': no evaluation function found."));return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);if(ct in t){t[ct].split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){const n=e.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:e}(0,n)}))}}}function ut(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(t){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,a[0],a[1]),a.join("=")})),e}function ht(){return pt}let dt,pt=null;function ft(){if(null==dt){let t;if("undefined"!==typeof window)t=window;else if("undefined"!==typeof n.g)t=n.g;else if("undefined"!==typeof process)t=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");t=self}dt=t}return dt}function mt(t,e){const n=function(){const t=ft();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const a=e();return n.set(t,a),n.get(t)}}const gt="Abs",yt="Acos",bt="Acosh",xt="Add",vt="AddN",wt="All",kt="Any",It="ArgMax",St="ArgMin",Nt="Asin",Tt="Asinh",Et="Atan",Ct="Atanh",Rt="Atan2",_t="AvgPool",At="AvgPoolGrad",Dt="AvgPool3D",Ft="AvgPool3DGrad",Ot="BatchMatMul",Mt="BatchToSpaceND",Lt="Bincount",zt="BitwiseAnd",Pt="BroadcastArgs",Bt="Cast",Wt="Ceil",Ut="ClipByValue",Vt="Complex",Gt="ComplexAbs",Ht="Concat",jt="Conv2D",Kt="Conv2DBackpropFilter",qt="Conv2DBackpropInput",Xt="Conv3D",Yt="Conv3DBackpropFilterV2",Qt="Conv3DBackpropInputV2",Jt="Cos",Zt="Cosh",$t="Cumprod",te="Cumsum",ee="CropAndResize",ne="DenseBincount",ae="DepthToSpace",re="DepthwiseConv2dNative",se="DepthwiseConv2dNativeBackpropFilter",oe="DepthwiseConv2dNativeBackpropInput",ie="Diag",ce="Dilation2D",le="Dilation2DBackpropInput",ue="Dilation2DBackpropFilter",he="RealDiv",de="Einsum",pe="Elu",fe="EluGrad",me="Erf",ge="Equal",ye="Exp",be="ExpandDims",xe="Expm1",ve="FFT",we="Fill",ke="FlipLeftRight",Ie="Floor",Se="FloorDiv",Ne="FusedBatchNorm",Te="GatherV2",Ee="GatherNd",Ce="Greater",Re="GreaterEqual",_e="Identity",Ae="IFFT",De="Imag",Fe="IsFinite",Oe="IsInf",Me="IsNan",Le="LeakyRelu",ze="Less",Pe="LessEqual",Be="LinSpace",We="Log",Ue="Log1p",Ve="LogicalAnd",Ge="LogicalNot",He="LogicalOr",je="LRN",Ke="LRNGrad",qe="Max",Xe="Maximum",Ye="MaxPool",Qe="MaxPoolGrad",Je="MaxPool3D",Ze="MaxPool3DGrad",$e="MaxPoolWithArgmax",tn="Mean",en="Min",nn="Minimum",an="MirrorPad",rn="Mod",sn="Multinomial",on="Multiply",cn="Neg",ln="NotEqual",un="NonMaxSuppressionV3",hn="NonMaxSuppressionV4",dn="NonMaxSuppressionV5",pn="OnesLike",fn="OneHot",mn="Pack",gn="PadV2",yn="Pow",bn="Prelu",xn="Prod",vn="RaggedGather",wn="RaggedRange",kn="RaggedTensorToTensor",In="Range",Sn="Real",Nn="Reciprocal",Tn="Relu",En="Reshape",Cn="ResizeNearestNeighbor",Rn="ResizeNearestNeighborGrad",_n="ResizeBilinear",An="ResizeBilinearGrad",Dn="Relu6",Fn="Reverse",On="Round",Mn="Rsqrt",Ln="ScatterNd",zn="TensorScatterUpdate",Pn="SearchSorted",Bn="Select",Wn="Selu",Un="Slice",Vn="Sin",Gn="Sinh",Hn="Sign",jn="Sigmoid",Kn="Softplus",qn="Sqrt",Xn="Sum",Yn="SpaceToBatchND",Qn="SplitV",Jn="Softmax",Zn="SparseFillEmptyRows",$n="SparseReshape",ta="SparseSegmentMean",ea="SparseSegmentSum",na="SparseToDense",aa="SquaredDifference",ra="Square",sa="StaticRegexReplace",oa="StridedSlice",ia="StringNGrams",ca="StringSplit",la="StringToHashBucketFast",ua="Sub",ha="Tan",da="Tanh",pa="Tile",fa="TopK",ma="Transform",ga="Transpose",ya="Unique",ba="Unpack",xa="UnsortedSegmentSum",va="ZerosLike",wa="Step",ka="RotateWithOffset",Ia="_FusedMatMul",Sa="FusedConv2D",Na="FusedDepthwiseConv2D";function Ta(){ht().getBool("IS_TEST")||ht().getBool("PROD")||console.warn(...arguments)}function Ea(){ht().getBool("IS_TEST")||ht().getBool("PROD")||console.log(...arguments)}const Ca=mt("kernelRegistry",(()=>new Map)),Ra=mt("gradRegistry",(()=>new Map));function _a(t,e){const n=Ma(t,e);return Ca.get(n)}function Aa(t){return Ra.get(t)}function Da(t){const e=Ca.entries(),n=[];for(;;){const{done:a,value:r}=e.next();if(a)break;const[s,o]=r,[i]=s.split("_");i===t&&n.push(o)}return n}function Fa(t){const{kernelName:e,backendName:n}=t,a=Ma(e,n);Ca.has(a)&&Ta("The kernel '".concat(e,"' for backend ")+"'".concat(n,"' is already registered")),Ca.set(a,t)}function Oa(t){const{kernelName:e}=t;Ra.has(e)&&ht().getBool("DEBUG")&&Ta("Overriding the gradient for '".concat(e,"'")),Ra.set(e,t)}function Ma(t,e){return"".concat(e,"_").concat(t)}function La(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}var za=n(987);const Pa=n.n(za)()||za;function Ba(t){return Pa.fromString(t,!0,16)}const Wa=Ba("c3a5c85c97cb3127"),Ua=Ba("b492b66fbe98f273"),Va=Ba("9ae16a3b2f90404f");function Ga(t){return t.xor(t.shru(47))}function Ha(t,e,n){const a=t.slice(e,e+n);return Pa.fromBytes(Array.from(a),!0,!0)}function ja(t,e){return Ha(t,e,8)}function Ka(t,e){return Ha(t,e,4)}function qa(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function Xa(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ba("9ddfea08eb382d69"),a=t.xor(e).mul(n);a=a.xor(a.shru(47));let r=e.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Ya(t,e,n,a){return function(t,e,n,a,r,s){r=r.add(t),s=qa(s.add(r).add(a),21);const o=r;return r=(r=r.add(e)).add(n),s=s.add(qa(r,44)),[r.add(a),s.add(o)]}(ja(t,e),ja(t,e+8),ja(t,e+16),ja(t,e+24),n,a)}function Qa(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;const n=Pa.fromNumber(81,!0);if(e<=32)return e<=16?function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;if(e>=8){const n=Va.add(2*e),a=ja(t,0).add(Va),r=ja(t,e-8);return Xa(qa(r,37).mul(n).add(a),qa(a,25).add(r).mul(n),n)}if(e>=4){const n=Va.add(2*e);return Xa(Ka(t,0).shl(3).add(e),Ka(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),a=e+(t[e-1]<<2);return Ga(Va.mul(n).xor(Wa.mul(a))).mul(Va)}return Va}(t,e):function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;const n=Va.add(2*e),a=ja(t,0).mul(Ua),r=ja(t,8),s=ja(t,e-8).mul(n),o=ja(t,e-16).mul(Va);return Xa(qa(a.add(r),43).add(qa(s,30)).add(o),a.add(qa(r.add(Va),18)).add(s),n)}(t,e);if(e<=64)return function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;const n=Va.add(2*e),a=ja(t,0).mul(Va),r=ja(t,8),s=ja(t,e-8).mul(n),o=ja(t,e-16).mul(Va),i=qa(a.add(r),43).add(qa(s,30)).add(o),c=Xa(i,a.add(qa(r.add(Va),18)).add(s),n),l=ja(t,16).mul(n),u=ja(t,24),h=i.add(ja(t,e-32)).mul(n),d=c.add(ja(t,e-24)).mul(n);return Xa(qa(l.add(u),43).add(qa(h,30)).add(d),l.add(qa(u.add(a),18)).add(h),n)}(t,e);let a=n,r=n.mul(Ua).add(113),s=Ga(r.mul(Va).add(113)).mul(Va),o=[Pa.UZERO,Pa.UZERO],i=[Pa.UZERO,Pa.UZERO];a=a.mul(Va).add(ja(t,0));let c=0;const l=64*(e-1>>6),u=l+(e-1&63)-63;do{a=qa(a.add(r).add(o[0]).add(ja(t,c+8)),37).mul(Ua),r=qa(r.add(o[1]).add(ja(t,c+48)),42).mul(Ua),a=a.xor(i[1]),r=r.add(o[0]).add(ja(t,c+40)),s=qa(s.add(i[0]),33).mul(Ua),o=Ya(t,c,o[1].mul(Ua),a.add(i[0])),i=Ya(t,c+32,s.add(i[1]),r.add(ja(t,c+16))),[s,a]=[a,s],c+=64}while(c!==l);const h=Ua.add(s.and(255).shl(1));return c=u,i[0]=i[0].add(e-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),a=qa(a.add(r).add(o[0]).add(ja(t,c+8)),37).mul(h),r=qa(r.add(o[1]).add(ja(t,c+48)),42).mul(h),a=a.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(ja(t,c+40))),s=qa(s.add(i[0]),33).mul(h),o=Ya(t,c,o[1].mul(h),a.add(i[0])),i=Ya(t,c+32,s.add(i[1]),r.add(ja(t,c+16))),[s,a]=[a,s],Xa(Xa(o[0],i[0],h).add(Ga(r).mul(Wa)).add(s),Xa(o[1],i[1],h).add(a),h)}function Ja(t,e){return"string"===e?tr(t):Za([t],e)}function Za(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=ar(t)),ht().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const a=t[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(e," being uploaded contains ").concat(a,"."))}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type ".concat(e))}function $a(){return ht().platform.now()}function tr(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",ht().platform.encode(t,e)}function er(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",ht().platform.decode(t,e)}function nr(t){return null!=ht().platform.isTypedArray?ht().platform.isTypedArray(t):La(t)}function ar(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e&&(e=[]),"boolean"===typeof t||"number"===typeof t||"string"===typeof t||it(t)||null==t||nr(t)&&n)e.push(t);else if(Array.isArray(t)||nr(t))for(let a=0;a<t.length;++a)ar(t[a],e,n);else{let a=-1;for(const e of Object.keys(t))/^([1-9]+[0-9]*|0)$/.test(e)&&(a=Math.max(a,Number(e)));for(let r=0;r<=a;r++)ar(t[r],e,n)}return e}class rr{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new or)}profileKernel(t,e,n){let a;const r=()=>{a=n()};let s;const o=$a();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(const t of a)t.dataSync();s=Promise.resolve({kernelMs:$a()-o})}if(ht().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<a.length;i++){const e=a[i];e.data().then((n=>{sr(n,e.dtype,t)}))}return{kernelName:t,outputs:a,inputs:e,timeMs:s.then((t=>t.kernelMs)),extraInfo:s.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:a,inputs:r,extraInfo:s}=t;n.forEach((t=>{Promise.all([t.data(),a,s]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],r,n[2])}))}))}}function sr(t,e,n){if("float32"!==e)return!1;for(let a=0;a<t.length;a++){const e=t[a];if(isNaN(e)||!isFinite(e))return console.warn("Found ".concat(e," in the result of '").concat(n,"'")),!0}return!1}class or{logKernelProfile(t,e,n,a,r,s){const o="number"===typeof a?P("".concat(a,"ms"),9):a.error,i=P(t,25),c=e.rank,l=e.size,u=P(e.shape.toString(),14);let h="";for(const d in r){const t=r[d];if(null!=t){const n=t.shape||e.shape,a=n.length;h+="".concat(d,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(u,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const ir=20,cr=3,lr=7;function ur(t,e,n,a){const r=Z(e),s=function(t,e,n,a){const r=O(e),s=a[a.length-1],o=new Array(s).fill(0),i=e.length,c="complex64"===n?fr(t):t;if(i>1)for(let l=0;l<r/s;l++){const t=l*s;for(let e=0;e<s;e++)o[e]=Math.max(o[e],hr(c[t+e],0,n).length)}return o}(t,e,n,r),o=e.length,i=pr(t,e,n,r,s),c=["Tensor"];return a&&(c.push("  dtype: ".concat(n)),c.push("  rank: ".concat(o)),c.push("  shape: [".concat(e,"]")),c.push("  values:")),c.push(i.map((t=>"    "+t)).join("\n")),c.join("\n")}function hr(t,e,n){let a;return a=Array.isArray(t)?"".concat(parseFloat(t[0].toFixed(lr))," + ")+"".concat(parseFloat(t[1].toFixed(lr)),"j"):q(t)?"'".concat(t,"'"):"bool"===n?dr(t):parseFloat(t.toFixed(lr)).toString(),P(a,e)}function dr(t){return 0===t?"false":"true"}function pr(t,e,n,a,r){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const o="complex64"===n?2:1,i=e[0],c=e.length;if(0===c){if("complex64"===n){return[hr(fr(t)[0],0,n)]}return"bool"===n?[dr(t[0])]:[t[0].toString()]}if(1===c){if(i>ir){const e=cr*o;let a=Array.from(t.slice(0,e)),s=Array.from(t.slice((i-cr)*o,i*o));return"complex64"===n&&(a=fr(a),s=fr(s)),["["+a.map(((t,e)=>hr(t,r[e],n))).join(", ")+", ..., "+s.map(((t,e)=>hr(t,r[i-cr+e],n))).join(", ")+"]"]}return["["+("complex64"===n?fr(t):Array.from(t)).map(((t,e)=>hr(t,r[e],n))).join(", ")+"]"]}const l=e.slice(1),u=a.slice(1),h=a[0]*o,d=[];if(i>ir){for(let e=0;e<cr;e++){const a=e*h,s=a+h;d.push(...pr(t.slice(a,s),l,n,u,r,!1))}d.push("...");for(let e=i-cr;e<i;e++){const a=e*h,s=a+h;d.push(...pr(t.slice(a,s),l,n,u,r,e===i-1))}}else for(let m=0;m<i;m++){const e=m*h,a=e+h;d.push(...pr(t.slice(e,a),l,n,u,r,m===i-1))}const p=2===c?",":"";d[0]="["+(i>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<c;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function fr(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class mr{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=O(t),null!=n){const t=n.length;A(t===this.size,(()=>"Length of values '".concat(t,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||H(e,this.size),this.strides=Z(t)}set(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),A(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const r=this.locToIndex(n);this.values[r]=t}get(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];0===e.length&&(e=[0]);let a=0;for(const s of e){if(s<0||s>=this.shape[a]){const t="Requested out of range element at ".concat(e,". ")+"  Buffer shape=".concat(this.shape);throw new Error(t)}a++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return gr().makeTensor(this.values,this.shape,this.dtype)}}let gr=null,yr=null,br=null;class xr{constructor(t,e,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=O(t),this.strides=Z(t),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return yr.buffer(this.shape,this.dtype,t)}bufferSync(){return yr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return tt(this.shape,t,"complex64"===this.dtype)}arraySync(){return tt(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=gr().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map((t=>er(t)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),gr().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=gr().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>er(t)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await gr().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),gr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return yr.print(this,t)}clone(){return this.throwIfDisposed(),yr.clone(this)}toString(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return ur(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),yr.cast(this,t)}variable(){let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),gr().makeVariable(this,t,e,n)}}function vr(){return mt("Tensor",(()=>xr))}Object.defineProperty(xr,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),vr();class wr extends xr{constructor(t,e,n,a){super(t.shape,t.dtype,t.dataId,a),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(t.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!M(t.shape,this.shape))throw new Error("shape of the new value (".concat(t.shape,") and ")+"previous value (".concat(this.shape,") must match"));gr().disposeTensor(this),this.dataId=t.dataId,gr().incRef(this,null)}dispose(){gr().disposeVariable(this),this.isDisposedInternal=!0}}var kr,Ir,Sr,Nr,Tr;Object.defineProperty(wr,Symbol.hasInstance,{value:t=>t instanceof xr&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(kr||(kr={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(Ir||(Ir={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(Sr||(Sr={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(Nr||(Nr={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(Tr||(Tr={}));const Er={float32:Nr,int32:Ir,bool:Sr,complex64:Tr};function Cr(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error("Can not upcast ".concat(t," with ").concat(e))}return Er[t][e]}function Rr(t){return Cr(t,"int32")}function _r(t){return null!=t&&"object"===typeof t&&"texture"in t&&t.texture instanceof WebGLTexture}function Ar(t){return"undefined"!==typeof GPUBuffer&&null!=t&&"object"===typeof t&&"buffer"in t&&t.buffer instanceof GPUBuffer}function Dr(t,e){if(t.dtype===e.dtype)return[t,e];const n=Cr(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Fr(t,e){return e.some((e=>e.id===t.id))}function Or(t){const e=[];return Mr(t,e,new Set),e}function Mr(t,e,n){if(null==t)return;if(t instanceof xr)return void e.push(t);if(a=t,!Array.isArray(a)&&"object"!==typeof a)return;var a;const r=t;for(const s in r){const t=r[s];n.has(t)||(n.add(t),Mr(t,e,n))}}function Lr(t){return null!=t.kernelName}class zr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Pr{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new zr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error("The highest priority backend '".concat(t,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return t in this.registryFactory?(Ta("".concat(t," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error("Backend name '".concat(t,"' not found in registry"));if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new rr(this.backendInstance),!0}setupRegisteredKernels(){Da(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){Da(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error("Cannot initialize backend ".concat(t,", no registration found."));try{const n=e.factory();if(!n||n instanceof N||"function"!==typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,a=n.then((n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,Ta("Initialization of backend ".concat(t," failed")),Ta(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return Ta("Initialization of backend ".concat(t," failed")),Ta(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error("".concat(t," backend not found in registry"));this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),a=n.backend,r=this.readSync(e),s=a.refCount(e);a.disposeData(e,!0),n.backend=t,t.move(e,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,a=null;if(null==e){if("function"!==typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!==typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=t}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(a){throw e(),a}}nextTensorId(){return Pr.nextTensorId++}nextVariableId(){return Pr.nextVariableId++}clone(t){const e=Wr.runKernel(_e,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t},n={dtype:"float32"};return Wr.runKernel(Bt,e,n)}})),[],{}),e}runKernel(t,e,n){null==this.backendName&&this.backend;if(!(null!=_a(t,this.backendName)))throw new Error("Kernel '".concat(t,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const a=this.backend.numDataIds();let r=0;n.forEach((t=>{r+="complex64"===t.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-e-r-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(t,"'"))}runKernelFunc(t){let e,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=Lr(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Lr(t)){const{kernelName:e,inputs:r,attrs:s}=t;null==this.backendName&&this.backend;const c=_a(e,this.backendName);A(null!=c,(()=>"Cannot find registered kernel '".concat(e,"' for backend '").concat(this.backendName,"'"))),o=()=>{const t=this.backend.numDataIds();i=c.kernelFunc({inputs:r,attrs:s,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,o);const l=o.map((t=>null!=t.rank?t:this.makeTensorFromTensorInfo(t)));if(a){const t=this.getTensorsForGradient(e,r,l);n=this.saveTensorsForBackwardMode(t)}return l}}else{const{forwardFunc:e}=t,r=t=>{a&&(n=t.map((t=>this.keep(this.clone(t)))))};o=()=>{const t=this.backend.numDataIds();i=this.tidy((()=>e(this.backend,r)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,t,n),n}}const{inputs:l,attrs:u}=t,h=Lr(t)?null:t.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(c,l,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs):e=o()})),a&&this.addTapeNode(c,l,e,h,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((t=>null!=l[t]?l[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?e:e[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const a=Aa(t);if(null!=a){const t=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(A(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(e).map((t=>e[t]))):s=t.map((t=>e[t]));const o=n.filter(((t,e)=>r[e]));return s.concat(o)}return[]}makeTensor(t,e,n,a){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=t;"string"===n&&q(t[0])&&(r=t.map((t=>tr(t))));const s=a.write(r,e,n),o=new xr(e,n,s,this.nextTensorId());if(this.trackTensor(o,a),"string"===n){const t=this.state.tensorInfo.get(s),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(r);this.state.numBytes+=e-t.bytes,t.bytes=e}return o}makeTensorFromDataId(t,e,n,a){const r={dataId:t,shape:e,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:a,dtype:r}=t,s=new xr(a,r,n,this.nextTensorId());return this.trackTensor(s,e),s}makeVariable(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==t.dtype&&(t=t.cast(a));const r=new wr(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*K(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof wr||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*K(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,a,r,s){const o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},i=Aa(t);null!=i&&(a=i.gradFunc),null!=a&&(o.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],a=nt(t.size,t.dtype);return this.makeTensor(a,t.shape,t.dtype)}return t})),a(t.length>1?t:t[0],r,s))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Or(t),n=new Set(e.map((t=>t.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const t=this.state.activeScope.track[r];t.kept||n.has(t.id)||t.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==a.id||this.track(t)}))}gradients(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(A(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));A(r instanceof xr,(()=>"The result y returned by f() must be a tensor."));const s=function(t,e,n){const a={},r={};for(let c=0;c<e.length;c++)a[e[c].id]=!0;for(let c=0;c<t.length;c++){const n=t[c],s=n.inputs;for(const t in s){const o=s[t];let i=!1;for(let t=0;t<e.length;t++)if(a[o.id]){n.outputs.forEach((t=>a[t.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let c=t.length-1;c>=0;c--){const e=t[c],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(s[e.outputs[t].id]){for(const t in n)s[n[t].id]=!0,o[e.id]=!0;break}}const i=[];for(let c=0;c<t.length;c++){const e=t[c];if(r[e.id]&&o[e.id]){const t={};for(const r in e.inputs){const n=e.inputs[r];a[n.id]&&(t[r]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,i.push(n)}}return i}(this.state.activeTape,e,r);if(!a&&0===s.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[r.id]=null==n?function(t){const e=et(O(t),"float32");return Wr.makeTensor(e,t,"float32")}(r.shape):n,function(t,e,n,a){for(let r=e.length-1;r>=0;r--){const s=e[r],o=[];if(s.outputs.forEach((e=>{const n=t[e.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const e in s.inputs){if(!(e in i))throw new Error("Cannot backprop through input ".concat(e,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[e]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(e," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const o=s.inputs[e];if(!M(r.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(e,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==t[o.id])t[o.id]=r;else{const e=t[o.id];t[o.id]=a(e,r),e.dispose()}}}}(t,s,(t=>this.tidy(t)),Ur);const a=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(t){var e=this;return A(Q(t),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let s;A(a.every((t=>t instanceof xr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};a.forEach(((t,e)=>{o[e]=t}));return e.runKernelFunc({forwardFunc:(e,n)=>(s=t(...a,n),A(s.value instanceof xr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),A(Q(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),backwardsFunc:(t,e)=>{const n=s.gradFunc(t,e),r=Array.isArray(n)?n:[n];A(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),A(r.every((t=>t instanceof xr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return r.forEach(((t,e)=>{o[e]=()=>t})),o},inputs:o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=$a(),n=await this.backend.time(t);return n.wallMs=$a()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new zr;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Br(){const t=ft();if(null==t._tfengine){const e=new lt(t);t._tfengine=new Pr(e)}var e;return e=t._tfengine.ENV,pt=e,gr=()=>t._tfengine,t._tfengine}Pr.nextTensorId=0,Pr.nextVariableId=0;const Wr=Br();function Ur(t,e){const n={a:t,b:e};return Wr.runKernel(xt,n)}let Vr;function Gr(t){if(void 0!==Vr)return Vr;if(t||"undefined"!==typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!==typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Hr(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const jr=ht();function Kr(t,e){let n=t;if(nr(t))return"string"===e?[]:[t.length];if(_r(t)){const e=t.channels||"RGBA";return[t.height,t.width*e.length]}if(Ar(t))return[t.buffer.size/(null==e?4:K(e))];if(!Array.isArray(t))return[];const a=[];for(;Array.isArray(n)||nr(n)&&"string"!==e;)a.push(n.length),n=n[0];return Array.isArray(t)&&ht().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&qr(t,a,[]),a}function qr(t,e,n){if(n=n||[],!Array.isArray(t)&&!nr(t))return void A(0===e.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(e[0]," elements")));A(e.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(t.length," elements"))),A(t.length===e[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(e[0]," ")+"elements, but has ".concat(t.length," elements")));const a=e.slice(1);for(let r=0;r<t.length;++r)qr(t[r],a,n.concat(r))}function Xr(t,e,n,a){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(t," tensor, but got ").concat(e," tensor"))}}function Yr(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(t instanceof vr())return Xr(a,t.dtype,e,n),t;let r=Y(t);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),Xr(a,r,e,n),null==t||!nr(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t){const a=null==t?"null":t.constructor.name;throw new Error("Argument '".concat(e,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const s=Kr(t,r);nr(t)||Array.isArray(t)||(t=[t]);const o="string"!==r?Za(t,r):ar(t,[],!0);return Wr.makeTensor(o,s,r)}function Qr(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(t))throw new Error("Argument ".concat(e," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return t.map(((t,r)=>Yr(t,"".concat(e,"[").concat(r,"]"),n,a)))}jr.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),jr.registerFlag("IS_BROWSER",(()=>Hr())),jr.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),jr.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),jr.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),jr.registerFlag("PROD",(()=>!1)),jr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>jr.getBool("DEBUG"))),jr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),jr.registerFlag("IS_TEST",(()=>!1)),jr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>jr.getBool("DEBUG"))),jr.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),jr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),jr.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));function Jr(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(e.length," keys."));let n=e[0];const a=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=function(){Wr.startScope(n);try{const t=a(...arguments);return it(t)&&console.error("Cannot return a Promise inside of tidy."),Wr.endScope(t),t}catch(t){throw Wr.endScope(null),t}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const Zr=Jr({complex_:function(t,e){const n=Yr(t,"real","complex"),a=Yr(e,"imag","complex");D(n.shape,a.shape,"real and imag shapes, ".concat(n.shape," and ").concat(a.shape,", ")+"must match in call to tf.complex().");const r={real:n,imag:a};return Wr.runKernel(Vt,r)}});function $r(t,e,n,a){if(null==a)a=Y(t);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Ar(t)||_r(t)){if("float32"!==a&&"int32"!==a)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(a,"."));return Wr.backend.createTensorFromGPUData(t,e||n,a)}if(!nr(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){rt(e);const t=O(e),a=O(n);A(t===a,(()=>"Based on the provided shape, [".concat(e,"], the tensor should have ")+"".concat(t," values but has ").concat(a)));for(let r=0;r<n.length;++r){const t=n[r],a=r!==n.length-1||t!==O(e.slice(r));A(n[r]===e[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(e,"). ")))}}return nr(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==a?Za(t,a):ar(t,[],!0),Wr.makeTensor(t,e,a)}function ts(t,e,n){return $r(t,e,Kr(t,n),n)}class es{static join(t){return new es(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,null==t)return;if(t instanceof Array||(t=[t]),0===(t=t.map((t=>nr(t)?t.buffer:t))).length)return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let n=0;n<t.length;n++){const a=t[n];n!==t.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=e+a.byteLength;this.shards.push({buffer:a,start:e,end:r}),e=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);const n=this.findShardForByte(t);if(-1===n)throw new Error("Could not find start shard for byte ".concat(t));const a=new ArrayBuffer(e-t),r=new Uint8Array(a);let s=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],a=t+s-n.start,i=s,c=Math.min(e,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(r.set(l,i),s+=l.length,e<n.end)break}return a}findShardForByte(t){if(0===this.shards.length||t<0||t>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(e){return t<e.start?-1:t>=e.end?1:0}if(0===e(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(t,e){let n=0,a=t.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,s=e(t[r]);if(0===s)return r;s<0?a=r:n=r+1}return-1}(this.shards,e);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function ns(){return Wr}function as(){return Wr.memory()}function rs(t,e){return Wr.tidy(t,e)}function ss(t){Or(t).forEach((t=>t.dispose()))}function os(t){return Wr.keep(t)}function is(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Wr.registerBackend(t,e,n)}function cs(){return Wr.backend}br=function(t){ht().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const ls=4;async function us(t,e){const n=[],a=[],r=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let s=0;s<r.length;++s){const o=r[s],i=Array.isArray(t)?t[s].tensor:t[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const t=new Promise((async t=>{const e=await i.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+ls*e.length,a=new Uint8Array(n);let r=0;for(let s=0;s<e.length;s++){const t=e[s],n=new Uint8Array(new Uint32Array([t.length]).buffer);a.set(n,r),r+=ls,a.set(t,r),r+=t.length}t(a)}));a.push(t)}else a.push(i.data());null!=e&&(c.group=e),n.push(c)}return{data:hs(await Promise.all(a)),specs:n}}function hs(t){if(null===t)throw new Error("Invalid input value: ".concat(JSON.stringify(t)));let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(t.constructor.name))}));const a=new Uint8Array(e);let r=0;return n.forEach((t=>{a.set(new Uint8Array(t.buffer),r),r+=t.byteLength})),a.buffer}const ds="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function ps(t){return ds?Buffer.byteLength(t,"utf8"):new Blob([t]).size}function fs(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(n.initializerSignature=t.initializerSignature),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}async function ms(t,e){let n,a;return null!=t.weightsManifest&&([n,a]=await e(t.weightsManifest)),function(t,e,n){const a={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(a.trainingConfig=t.trainingConfig),null!=t.weightsManifest){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=e,a.weightData=n}return null!=t.signature&&(a.signature=t.signature),null!=t.userDefinedMetadata&&(a.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(a.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(a.initializerSignature=t.initializerSignature),a}(t,n,a)}function gs(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:ps(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:ps(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:new es(t.weightData).byteLength}}function ys(t){const e=[];for(const n of t)e.push(...n.weights);return e}class bs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==bs.instance&&(bs.instance=new bs),bs.instance}static registerSaveRouter(t){bs.getInstance().saveRouters.push(t)}static registerLoadRouter(t){bs.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return bs.getHandlers(t,"save")}static getLoadHandlers(t,e){return bs.getHandlers(t,"load",e)}static getHandlers(t,e,n){const a=[];return("load"===e?bs.getInstance().loadRouters:bs.getInstance().saveRouters).forEach((e=>{const r=e(t,n);null!==r&&a.push(r)})),a}}const xs="tensorflowjs",vs="models_store",ws="model_info_store";function ks(){if(!ht().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"===typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Is(t){const e=t.result;e.createObjectStore(vs,{keyPath:"modelPath"}),e.createObjectStore(ws,{keyPath:"modelPath"})}class Ss{constructor(t){if(this.indexedDB=ks(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const a=this.indexedDB.open(xs,1);a.onupgradeneeded=()=>Is(a),a.onsuccess=()=>{const r=a.result;if(null==e){const e=r.transaction(vs,"readonly"),a=e.objectStore(vs).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));t(a.result.modelArtifacts)},a.onerror=t=>(r.close(),n(a.error)),e.oncomplete=()=>r.close()}else{e.weightData=es.join(e.weightData);const a=gs(e),o=r.transaction(ws,"readwrite");let i,c,l=o.objectStore(ws);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(s){return n(s)}i.onsuccess=()=>{c=r.transaction(vs,"readwrite");const i=c.objectStore(vs);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a})}catch(s){return n(s)}u.onsuccess=()=>t({modelArtifactsInfo:a}),u.onerror=t=>{l=o.objectStore(ws);const e=l.delete(this.modelPath);e.onsuccess=()=>(r.close(),n(u.error)),e.onerror=t=>(r.close(),n(u.error))}},i.onerror=t=>(r.close(),n(i.error)),o.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=t=>n(a.error)}))}}Ss.URL_SCHEME="indexeddb://";const Ns=t=>{return ht().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ss.URL_SCHEME)?(e=t.slice(Ss.URL_SCHEME.length),new Ss(e)):null;var e};bs.registerSaveRouter(Ns),bs.registerLoadRouter(Ns);class Ts{constructor(){this.indexedDB=ks()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(xs,1);n.onupgradeneeded=()=>Is(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(ws,"readonly"),s=r.objectStore(ws).getAll();s.onsuccess=()=>{const e={};for(const t of s.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},s.onerror=t=>(a.close(),e(s.error)),r.oncomplete=()=>a.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(Ss.URL_SCHEME)?e.slice(Ss.URL_SCHEME.length):e,new Promise(((e,n)=>{const a=this.indexedDB.open(xs,1);a.onupgradeneeded=()=>Is(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(ws,"readwrite"),o=s.objectStore(ws),i=o.get(t);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(t,"' ")+"in IndexedDB."));{const a=o.delete(t),s=()=>{c=r.transaction(vs,"readwrite");const a=c.objectStore(vs).delete(t);a.onsuccess=()=>e(i.result.modelArtifactsInfo),a.onerror=t=>n(i.error)};a.onsuccess=s,a.onerror=t=>(s(),r.close(),n(i.error))}},i.onerror=t=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=t=>n(a.error)}))}}const Es="/",Cs="tensorflowjs_models",Rs="info",_s="model_topology",As="weight_specs",Ds="weight_data",Fs="model_metadata";function Os(t){return{info:[Cs,t,Rs].join(Es),topology:[Cs,t,_s].join(Es),weightSpecs:[Cs,t,As].join(Es),weightData:[Cs,t,Ds].join(Es),modelMetadata:[Cs,t,Fs].join(Es)}}function Ms(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function Ls(t){const e=t.split(Es);if(e.length<3)throw new Error("Invalid key format: ".concat(t));return e.slice(1,e.length-1).join(Es)}class zs{constructor(t){if(!ht().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Os(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),a=JSON.stringify(t.weightSpecs),r=gs(t),s=es.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,function(t){if(ds)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let a=0,r=e.length;a<r;a++)n+=String.fromCharCode(e[a]);return btoa(n)}(s));const e={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,initializerSignature:null!=t.initializerSignature?t.initializerSignature:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(e)),{modelArtifactsInfo:r}}catch(e){throw Ms(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");e.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");e.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const t=JSON.parse(r);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(e.initializerSignature=t.initializerSignature),null!=t.trainingConfig&&(e.trainingConfig=t.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return e.weightData=function(t){if(ds){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let a=0;a<e.length;++a)n.set([e.charCodeAt(a)],a);return n.buffer}(s),e}}zs.URL_SCHEME="localstorage://";const Ps=t=>{return ht().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(zs.URL_SCHEME)?(e=t.slice(zs.URL_SCHEME.length),new zs(e)):null;var e};bs.registerSaveRouter(Ps),bs.registerLoadRouter(Ps);class Bs{constructor(){A(ht().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),A("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Cs+Es,n=Es+Rs;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(e)&&r.endsWith(n)){t[Ls(r)]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(t){var e;const n=Os(t=(e=t).startsWith(zs.URL_SCHEME)?e.slice(zs.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(t,"'"));const a=JSON.parse(this.LS.getItem(n.info));return Ms(n),a}}const Ws="://";class Us{constructor(){this.managers={}}static getInstance(){return null==Us.instance&&(Us.instance=new Us),Us.instance}static registerManager(t,e){A(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith(Ws)&&(t=t.slice(0,t.indexOf(Ws))),A(t.length>0,(()=>"scheme must not be an empty string."));const n=Us.getInstance();A(null==n.managers[t],(()=>"A model store manager is already registered for scheme '".concat(t,"'."))),n.managers[t]=e}static getManager(t){const e=Us.getInstance().managers[t];if(null==e)throw new Error("Cannot find model manager for scheme '".concat(t,"'"));return e}static getSchemes(){return Object.keys(Us.getInstance().managers)}}class Vs{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got ".concat(e));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){"undefined"!==typeof window&&ht().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(t=>{if(t.source===window&&t.data.name===this.messageName){t.stopPropagation();(0,this.functionRefs[t.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(t,e)}isTypedArray(t){return La(t)}}if(ht().get("IS_BROWSER")){ht().setPlatform("browser",new Vs);try{Us.registerManager(zs.URL_SCHEME,new Bs)}catch(JX){}try{Us.registerManager(Ss.URL_SCHEME,new Ts)}catch(JX){}}const Gs=()=>n(755);let Hs;class js{constructor(){this.util=n(4),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=ht().global.fetch?ht().global.fetch(t,e):(null==Hs&&(Hs=Gs()),Hs(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(e));return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}function Ks(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return e=e||"float32",rt(t),new mr(t,e,n)}ht().get("IS_NODE")&&!ht().get("IS_BROWSER")&&ht().setPlatform("node",new js);const qs=Jr({cast_:function(t,e){const n=Yr(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error("Failed to cast to unknown dtype ".concat(e));if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},r={dtype:e};return Wr.runKernel(Bt,a,r)}});const Xs=Jr({clone_:function(t){const e={x:Yr(t,"x","clone","string_or_numeric")};return Wr.runKernel(_e,e)}});Br();const Ys={buffer:Ks,cast:qs,clone:Xs,print:function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(t.toString(e))}};yr=Ys;const Qs=Jr({add_:function(t,e){let n=Yr(t,"a","add"),a=Yr(e,"b","add");[n,a]=Dr(n,a);const r={a:n,b:a};return Wr.runKernel(xt,r)}});const Js=Jr({floorDiv_:function(t,e){let n=Yr(t,"a","floorDiv"),a=Yr(e,"b","floorDiv");[n,a]=Dr(n,a);const r={a:n,b:a};return Wr.runKernel(Se,r)}});const Zs=Jr({div_:function(t,e){let n=Yr(t,"a","div"),a=Yr(e,"b","div");if([n,a]=Dr(n,a),"int32"===n.dtype&&"int32"===a.dtype)return Js(n,a);const r={a:n,b:a};return Wr.runKernel(he,r,{})}});const $s=Jr({mul_:function(t,e){let n=Yr(t,"a","mul"),a=Yr(e,"b","mul");[n,a]=Dr(n,a);const r={a:n,b:a};return Wr.runKernel(on,r)}});const to=Jr({sqrt_:function(t){const e={x:Yr(t,"x","sqrt","float32")};return Wr.runKernel(qn,e)}});const eo=Jr({square_:function(t){const e=Yr(t,"x","square");return Wr.runKernel("Square",{x:e},{})}});const no=Jr({zerosLike_:function(t){const e={x:Yr(t,"x","zerosLike")};return Wr.runKernel(va,e)}});function ao(t){return Wr.customGrad(t)}function ro(t,e){if((nr(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&nr(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return $r(t,[],[],e)}const so=new Map,oo=new Map;class io{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class co{constructor(){this.classNameMap={}}static getMap(){return null==co.instance&&(co.instance=new co),co.instance}static register(t){co.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function lo(t,e,n){A(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),A("string"===typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),A(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof e&&(e="Custom"),"undefined"===typeof n&&(n=t.className);const a=e+">"+n;return co.register(t),so.set(a,t),oo.set(t,a),t}class uo extends io{minimize(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:r[t.name]})));this.applyGradients(t)}else this.applyGradients(r);return ss(r),e?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){A(Q(t),(()=>"The f passed in variableGrads(f) must be a function")),A(null==e||Array.isArray(e)&&e.every((t=>t instanceof wr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in Wr.registeredVariables)e.push(Wr.registeredVariables[t])}const a=n?e.filter((t=>!t.trainable)):null,r=e.length;e=e.filter((t=>t.trainable)),A(e.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(r," variables is ")+"trainable."));const{value:s,grads:o}=Wr.gradients(t,e,null,!0);A(o.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),A(0===s.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(s.rank," tensor")));const i={};return e.forEach(((t,e)=>{null!=o[e]&&(i[t.name]=o[e])})),null!=a&&a.forEach((t=>i[t.name]=null)),{value:s,grads:i}}(t,e)}dispose(){null!=this.iterations_&&ss(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ro(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(uo,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class ho extends uo{static get className(){return"Adadelta"}constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Wr.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=Wr.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(e,"/accum_grad"),variable:rs((()=>no(a).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(e,"/accum_var"),variable:rs((()=>no(a).variable(false)))});const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;rs((()=>{const t=Qs($s(s,this.rho),$s(eo(r),1-this.rho)),e=$s(Zs(to(Qs(o,this.epsilon)),to(Qs(s,this.epsilon))),r),n=Qs($s(o,this.rho),$s(eo(e),1-this.rho));s.assign(t),o.assign(n);const i=Qs($s(e,-this.learningRate),a);a.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ss(this.accumulatedGrads.map((t=>t.variable))),ss(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}function po(t,e,n){rt(t);const a={shape:t,value:e,dtype:n=n||Y(e)};return Wr.runKernel(we,{},a)}class fo extends uo{static get className(){return"Adagrad"}constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=Wr.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:"".concat(e,"/accumulator"),variable:rs((()=>po(a.shape,this.initialAccumulatorValue).variable(t)))}}const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=this.accumulatedGrads[n].variable;rs((()=>{const t=Qs(s,eo(r));s.assign(t);const e=Qs($s(Zs(r,to(Qs(t,Wr.backend.epsilon()))),-this.learningRate),a);a.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ss(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}const mo=Jr({pow_:function(t,e){let n=Yr(t,"base","pow"),a=Yr(e,"exp","pow");[n,a]=Dr(n,a);const r={a:n,b:a};return Wr.runKernel(yn,r)}});const go=Jr({sub_:function(t,e){let n=Yr(t,"a","sub"),a=Yr(e,"b","sub");[n,a]=Dr(n,a);const r={a:n,b:a};return Wr.runKernel(ua,r)}});class yo extends uo{static get className(){return"Adam"}constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],rs((()=>{this.accBeta1=ro(e).variable(),this.accBeta2=ro(n).variable()})),null==a&&(this.epsilon=Wr.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);rs((()=>{const n=go(1,this.accBeta1),a=go(1,this.accBeta2);e.forEach(((e,r)=>{const s=Wr.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(e,"/m"),variable:rs((()=>no(s).variable(false)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(e,"/v"),variable:rs((()=>no(s).variable(false)))});const o=Array.isArray(t)?t[r].tensor:t[e];if(null==o)return;const i=this.accumulatedFirstMoment[r].variable,c=this.accumulatedSecondMoment[r].variable,l=Qs($s(i,this.beta1),$s(o,1-this.beta1)),u=Qs($s(c,this.beta2),$s(eo(o),1-this.beta2)),h=Zs(l,n),d=Zs(u,a);i.assign(l),c.assign(u);const p=Qs($s(Zs(h,Qs(to(d),this.epsilon)),-this.learningRate),s);s.assign(p)})),this.accBeta1.assign($s(this.accBeta1,this.beta1)),this.accBeta2.assign($s(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ss(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&ss(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),rs((()=>{this.accBeta1.assign(mo(this.beta1,this.iterations_+1)),this.accBeta2.assign(mo(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}const bo=Jr({abs_:function(t){const e=Yr(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return Wr.runKernel(Gt,t)}{const t={x:e};return Wr.runKernel(gt,t)}}});function xo(t,e){const n=t.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,o=t[s]||1;(e[e.length-1-r]||1)>1&&1===o&&a.unshift(s)}return a}function vo(t,e){const n=[];for(let a=0;a<e.length;a++){const r=t[t.length-a-1],s=e.length-a-1,o=e[s];(null==r||1===r&&o>1)&&n.unshift(s)}return n}function wo(t,e){const n=Math.max(t.length,e.length),a=new Array(n);for(let r=0;r<n;r++){let s=t[t.length-r-1];null==s&&(s=1);let o=e[e.length-r-1];if(null==o&&(o=1),1===s)a[n-r-1]=o;else if(1===o)a[n-r-1]=s;else{if(s!==o){const n="Operands could not be broadcast together with shapes "+"".concat(t," and ").concat(e,".");throw Error(n)}a[n-r-1]=s}}return a}const ko=Jr({maximum_:function(t,e){let n=Yr(t,"a","maximum"),a=Yr(e,"b","maximum");[n,a]=Dr(n,a),"bool"===n.dtype&&(n=qs(n,"int32"),a=qs(a,"int32")),wo(n.shape,a.shape);const r={a:n,b:a};return Wr.runKernel(Xe,r)}});class Io extends uo{static get className(){return"Adamax"}constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],rs((()=>{this.iteration=ro(0).variable(),this.accBeta1=ro(e).variable()})),null==a&&(this.epsilon=Wr.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);rs((()=>{const n=go(1,this.accBeta1),a=Zs(-this.learningRate,Qs($s(this.iteration,this.decay),1));e.forEach(((e,r)=>{const s=Wr.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(e,"/m"),variable:no(s).variable(false)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(e,"/v"),variable:no(s).variable(false)});const o=Array.isArray(t)?t[r].tensor:t[e];if(null==o)return;const i=this.accumulatedFirstMoment[r].variable,c=this.accumulatedWeightedInfNorm[r].variable,l=Qs($s(i,this.beta1),$s(o,1-this.beta1)),u=$s(c,this.beta2),h=bo(o),d=ko(u,h);i.assign(l),c.assign(d);const p=Qs($s(Zs(a,n),Zs(l,Qs(d,this.epsilon))),s);s.assign(p)})),this.iteration.assign(Qs(this.iteration,1)),this.accBeta1.assign($s(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ss(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&ss(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}class So extends uo{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);e.forEach(((e,n)=>{const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const r=Wr.registeredVariables[e];rs((()=>{const t=Qs($s(this.c,a),r);r.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=os(ro(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}class No extends So{static get className(){return"Momentum"}constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=ro(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=Wr.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:"".concat(e,"/momentum"),variable:rs((()=>no(a).variable(t)))}}const r=this.accumulations[n].variable,s=Array.isArray(t)?t[n].tensor:t[e];null!=s&&rs((()=>{let t;const e=Qs($s(this.m,r),s);t=this.useNesterov?Qs($s(this.c,Qs(s,$s(e,this.m))),a):Qs($s(this.c,e),a),r.assign(e),a.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ss(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}class To extends uo{static get className(){return"RMSProp"}constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=Wr.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=Wr.registeredVariables[e],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(e,"/rms"),variable:rs((()=>no(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(e,"/momentum"),variable:rs((()=>no(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(e,"/mg"),variable:rs((()=>no(a).variable(r)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;rs((()=>{const t=Qs($s(o,this.decay),$s(eo(s),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,r=Qs($s(e,this.decay),$s(s,1-this.decay)),c=Zs($s(s,this.learningRate),to(go(t,Qs(eo(r),this.epsilon)))),l=Qs($s(i,this.momentum),c);o.assign(t),e.assign(r),i.assign(l);const u=go(a,l);a.assign(u)}else{const t=Qs($s(o,this.decay),$s(eo(s),1-this.decay)),e=Qs($s(i,this.momentum),Zs($s(s,this.learningRate),to(Qs(t,this.epsilon))));o.assign(t),i.assign(e);const n=go(a,e);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ss(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ss(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&ss(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}const Eo=[ho,fo,yo,Io,No,To,So];function Co(t){return new Promise((t=>setTimeout(t))).then(t)}class Ro{constructor(t){if(!ht().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ro.URL_SCHEME)&&(t=t.slice(Ro.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=es.join(t.weightData),n=window.URL.createObjectURL(new Blob([e],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const e=fs(t,[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(e)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await Co((()=>r.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=n,await Co((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:gs(t)}}}}Ro.URL_SCHEME="downloads://";function _o(t,e,n,a){!function(t){A(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){A(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(t))),A(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(e))),A(e>=t,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(t," and endFraction ")+"".concat(e)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(t.map((s=>(s.then((s=>{const o=n+ ++r/t.length*(a-n);return e(o),s})),s))))}async function Ao(t,e){null==e&&(e={});const n=null==e.fetchFunc?ht().platform.fetch:e.fetchFunc,a=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),r=(null==e.onProgress?await Promise.all(a):await _o(a,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(r):await _o(r,e.onProgress,.5,1)}bs.registerSaveRouter((t=>ht().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ro.URL_SCHEME)?function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Ro(t)}(t.slice(Ro.URL_SCHEME.length)):null));class Do{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(A("function"===typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=ht().platform.fetch,A(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&A(2===t.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(t.length,")."))),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{},this.loadOptions=e}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=fs(t,[{paths:["./model.weights.bin"],weights:t.weightSpecs}]);if(e.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=t.weightData){const n=es.join(t.weightData);e.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,e);if(a.ok)return{modelArtifactsInfo:gs(t),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(a.status,"."))}async loadModelJSON(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(t.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let e;try{e=await t.json()}catch(r){let t="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,a=e.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return ms(await this.loadModelJSON(),(t=>this.loadWeights(t)))}async loadStream(){const t=await this.loadModelJSON(),e=await this.getWeightUrls(t.weightsManifest),n=ys(t.weightsManifest);return Object.assign(Object.assign({},t),{weightSpecs:n,getWeightStream:()=>function(t,e){var n;const a=null==e.fetchFunc?ht().platform.fetch:e.fetchFunc;let r,s=0;return null===(n=e.onProgress)||void 0===n||n.call(e,0),new ReadableStream({pull:async n=>{for(var o;s<t.length;){if(!r){const n=(await a(t[s],e.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:i,value:c}=await r.read();if(!i)return void n.enqueue(c);s++,r=void 0,null===(o=e.onProgress)||void 0===o||o.call(e,s/t.length)}n.close()}})}(e,this.loadOptions)})}async getWeightUrls(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),a=t.substring(0,e),r=n>e?t.substring(n):"";return[a+"/",r]}(e),r=this.weightPathPrefix||n,s=[],o=[];for(const i of t)for(const t of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):s.push(r+t+a);return this.weightUrlConverter&&s.push(...await Promise.all(o)),s}async loadWeights(t){const e=await this.getWeightUrls(t);return[ys(t),await Ao(e,this.loadOptions)]}}function Fo(t){return null!=t.match(Do.URL_SCHEME_REGEX)}Do.URL_SCHEME_REGEX=/^https?:\/\//;const Oo=(t,e)=>{if("undefined"===typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>Fo(t))):Fo(t),n)return Mo(t,e)}return null};function Mo(t,e){return new Do(t,e)}bs.registerSaveRouter(Oo),bs.registerLoadRouter(Oo);const Lo=-2,zo=-1;function Po(t,e,n){const a=t.shape.length;A(a===e.length,(()=>"Error in slice".concat(a,"D: Length of begin ").concat(e," must ")+"match the rank of the array (".concat(a,")."))),A(a===n.length,(()=>"Error in slice".concat(a,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(a,").")));for(let r=0;r<a;++r)A(e[r]+n[r]<=t.shape[r],(()=>"Error in slice".concat(a,"D: begin[").concat(r,"] + size[").concat(r,"] ")+"(".concat(e[r]+n[r],") would overflow input.shape[").concat(r,"] (").concat(t.shape[r],")")))}function Bo(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Wo(t,e,n){const a=[];for(let r=0;r<t.length;r++)a[r]=Math.ceil((e[r]-t[r])/n[r]);return a}function Uo(t,e,n,a){const r=[...t];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[e]=1:(r.splice(e,0,1),r.pop());return r}function Vo(t,e,n){return n<=t?n:n-(e-1)}function Go(t,e){const n=[];for(let a=0;a<t;a++)n.push(e+a);return n}function Ho(t,e,n,a,r,s,o,i,c){const l=t.length;let u=new Array(l),h=new Array(l),d=new Array(l);if(e.length&&n>0){const c=e[0],l=n+1;u=jo(o,c,l,a,t),h=Ko(i,c,l,r,t),d=Uo(s,c,l,t)}else for(let p=0;p<l;p++)u[p]=Xo(o,a,s,t,p,c),h[p]=Yo(i,r,s,t,p,c),d[p]=qo(s,p,c);return{begin:u,end:h,strides:d}}function jo(t,e,n,a,r){const s=[...r],o=Go(n,e);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const r=Vo(e,n,i);let o=a[r];t&1<<r&&(o=0),s[i]=o}return s}function Ko(t,e,n,a,r){const s=[...r],o=Go(n,e);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{const r=Vo(e,n,i);let o=a[r];t&1<<r&&(o=Number.MAX_SAFE_INTEGER),s[i]=o}for(let i=0;i<s.length;i++){const t=r[i];s[i]<0&&(s[i]+=t),s[i]=C(0,s[i],r[i])}return s}function qo(t,e,n){let a=t[e];return(n&1<<e||null==a)&&(a=1),a}function Xo(t,e,n,a,r,s){let o=e[r];const i=n[r]||1;(t&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[r];return o<0&&(o+=c),o=C(0,o,c-1),o}function Yo(t,e,n,a,r,s){let o=e[r];const i=n[r]||1;(t&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[r];return o<0&&(o+=c),o=i>0?C(0,o,c):C(-1,o,c-1),o}function Qo(t,e,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(e[r]>0||n[r]!==t[r])return!1;return!0}function Jo(t,e){let n=t.length>0?t[t.length-1]:1;for(let a=0;a<t.length-1;a++)n+=t[a]*e[a];return n}function Zo(t,e,n){let a;const r=t.shape.length;let s;return a="number"===typeof e?[e,...new Array(r-1).fill(0)]:e.length<r?e.concat(new Array(r-e.length).fill(0)):e.slice(),a.forEach((t=>{A(-1!==t,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,s=s.map(((e,n)=>e>=0?e:(A(-1===e,(()=>"Negative size values should be exactly -1 but got "+"".concat(e," for the slice() size at index ").concat(n,"."))),t.shape[n]-a[n]))),[a,s]}function $o(t,e,n,a,r,s,o,i,c){let l;if(null==a?(l=new Array(e.length),l.fill(1)):l=a,null!=o&&0!==(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};for(let b=0;b<h.dims;b++)u&&0!==(1<<b&i)&&h.numAddAxisAfterEllipsis++,1<<b&o&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let a=0;a<t.dims;a++)if(1<<a&t.ellipsisMask){const r=Math.min(e.dims-(t.dims-a)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<r;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&t.newAxisMask)e.finalShapeGatherIndices.push(Lo),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(e.dims," dims, ").concat(e.begin.length,"."));null!=t.begin&&(e.begin[n]=t.begin[a]),null!=t.end&&(e.end[n]=t.end[a]),e.strides[n]=t.strides[a],t.beginMask&1<<a&&(e.beginMask|=1<<n),t.endMask&1<<a&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<a?(e.finalShapeGatherIndices.push(zo),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(a)),e.inputShapeGatherIndicesSparse[n]=a,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<t.length;++b){if(0===d.strides[b])throw Error("strides[".concat(b,"] must be non-zero"));const e=!!(d.shrinkAxisMask&1<<b),n=t[b];if(-1===n){g.push(e?1:-1);continue}const a=[d.beginMask&1<<b,d.endMask&1<<b],r=[d.strides[b]>0?0:-1,d.strides[b]>0?n:n-1];if(e&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];const s=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(e){const t=d.begin[b]<0?n+d.begin[b]:d.begin[b];if(d.begin[b]=t,d.end[b]=d.begin[b]+1,t<0||t>=n)throw Error("slice index ".concat(d.begin[b]," of dimension ").concat(b," out of bounds."))}else d.begin[b]=ti(d.begin[b],0,d.strides[b],n,a,r),d.end[b]=ti(d.end[b],1,d.strides[b],n,a,r);const t=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===n;p=p&&t,f=f&&(0===b&&1===d.strides[b]||t)}else p=p&&1===d.strides[b]&&s,f=f&&(0===b&&1===d.strides[b]||s);let o,i=!1;if(d.beginValid&&d.endValid?(o=d.end[b]-d.begin[b],i=!0):e?(o=1,i=!0):s&&n>=0&&(o=d.strides[b]<0?-n:n,i=!0),i){let t;t=0===o||o<0!==d.strides[b]<0?0:Math.trunc(o/d.strides[b])+(o%d.strides[b]!==0?1:0),g.push(t)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const t=d.finalShapeGatherIndices[b];t>=0?y.push(g[t]):t===Lo&&y.push(1)}return{finalShapeSparse:y.filter(((t,e)=>d.finalShapeGatherIndices[e]!==Lo)),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function ti(t,e,n,a,r,s){if(r[e])return n>0?s[e]:s[e+1&1];{const e=t<0?a+t:t;return e<s[0]?s[0]:e>s[1]?s[1]:e}}const ei=Jr({all_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:Yr(t,"x","all","bool")},r={axis:e,keepDims:n};return Wr.runKernel(wt,a,r)}});const ni=Jr({any_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:Yr(t,"x","any","bool")},r={axis:e,keepDims:n};return Wr.runKernel(kt,a,r)}});const ai=Jr({argMax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:Yr(t,"x","argMax")},a={axis:e};return Wr.runKernel(It,n,a)}});function ri(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return ii(t,[...e,t[3]],n,s,a,null,null,yi(r))}function si(t,e,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[i,c]=ui(e);let l;if("channelsLast"===o)l=[i,c,t[3],t[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));l=[i,c,t[1],t[1]]}return ii(t,l,n,a,r,s,!1,o)}function oi(t,e,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,c,l]=hi(e);let u,h;if("NDHWC"===o)h="channelsLast",u=[i,c,l,t[4],t[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));h="channelsFirst",u=[i,c,l,t[1],t[1]]}return ci(t,u,n,a,r,!1,h,s)}function ii(t,e,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,l,u,h]=[-1,-1,-1,-1];if("channelsLast"===i)[c,l,u,h]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,h,l,u]=t}const[d,p,,f]=e,[m,g]=ui(n),[y,b]=ui(a),x=di(d,y),v=di(p,b),{padInfo:w,outHeight:k,outWidth:I}=function(t,e,n,a,r,s,o,i,c){let l,u,h;if("number"===typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const r=function(t,e,n,a,r){null==a&&(a=li(t,e,n));const s=t[0],o=t[1],i=pi((s-e+2*a)/n+1,r),c=pi((o-e+2*a)/n+1,r);return[i,c]}([e,n],s,a,t,i);u=r[0],h=r[1]}else if("same"===t){u=Math.ceil(e/a),h=Math.ceil(n/r);const t=Math.max(0,(u-1)*a+s-e),i=Math.max(0,(h-1)*r+o-n),c=Math.floor(t/2),d=t-c,p=Math.floor(i/2);l={top:c,bottom:d,left:p,right:i-p,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((e-s+1)/a),h=Math.ceil((n-o+1)/r);else{if("object"!==typeof t)throw Error("Unknown padding parameter: ".concat(t));{const d="channelsLast"===c?t[1][0]:t[2][0],p="channelsLast"===c?t[1][1]:t[2][1],f="channelsLast"===c?t[2][0]:t[3][0],m="channelsLast"===c?t[2][1]:t[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},u=pi((e-s+d+p)/a+1,i),h=pi((n-o+f+m)/r+1,i)}}return{padInfo:l,outHeight:u,outWidth:h}}(r,l,u,m,g,x,v,s,i),S=o?f*h:f;let N;return"channelsFirst"===i?N=[c,S,k,I]:"channelsLast"===i&&(N=[c,k,I,S]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:u,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:t,outShape:N,filterShape:e}}function ci(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,l,u,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,l,u,h,d]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[c,d,l,u,h]=t}const[p,f,m,,g]=e,[y,b,x]=hi(n),[v,w,k]=hi(a),I=di(p,v),S=di(f,w),N=di(m,k),{padInfo:T,outDepth:E,outHeight:C,outWidth:R}=function(t,e,n,a,r,s,o,i,c,l,u){let h,d,p,f;"valid"===t&&(t=0);if("number"===typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const m=function(t,e,n,a,r,s){null==r&&(r=li(t,e[0],a[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)t[i]+2*r>=e[i]&&(o[i]=pi((t[i]-e[i]+2*r)/a[i]+1,s));return o}([e,n,a,1],[i,c,l],1,[r,s,o],t,u);d=m[0],p=m[1],f=m[2]}else{if("same"!==t)throw Error("Unknown padding parameter: ".concat(t));{d=Math.ceil(e/r),p=Math.ceil(n/s),f=Math.ceil(a/o);const t=(d-1)*r+i-e,u=(p-1)*s+c-n,m=(f-1)*o+l-a,g=Math.floor(t/2),y=t-g,b=Math.floor(u/2),x=u-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,l,u,h,y,b,x,I,S,N,i),_=s?g*d:g;let A;return"channelsFirst"===o?A=[c,_,E,C,R]:"channelsLast"===o&&(A=[c,E,C,R,_]),{batchSize:c,dataFormat:o,inDepth:l,inHeight:u,inWidth:h,inChannels:d,outDepth:E,outHeight:C,outWidth:R,outChannels:_,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:t,outShape:A,filterShape:e}}function li(t,e,n){const a=di(e,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((t[0]*(n-1)-n+a)/2)}function ui(t){return"number"===typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function hi(t){return"number"===typeof t?[t,t,t]:t}function di(t,e){return e<=1?t:t+(t-1)*(e-1)}function pi(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode ".concat(e))}}function fi(t){const[e,n,a]=ui(t);return 1===e&&1===n&&1===a}function mi(t,e){return fi(t)||fi(e)}function gi(t){return ui(t).every((t=>t>0))}function yi(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(t))}function bi(t,e,n){if(null!=n){if("string"===typeof e)throw Error("Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,"."));if("number"===typeof e)A(L(e),(()=>"Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,".")));else{if("object"!==typeof e)throw Error("Error in ".concat(t,": Unknown padding parameter: ").concat(e));e.forEach((e=>{e.forEach((e=>{A(L(e),(()=>"Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,".")))}))}))}}}const xi=Jr({reshape_:function(t,e){const n={x:Yr(t,"x","reshape","string_or_numeric")},a={shape:e};return Wr.runKernel(En,n,a)}});const vi=Jr({avgPool_:function(t,e,n,a,r){const s=Yr(t,"x","avgPool","float32");A(mi(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let o=s,i=!1;3===s.rank&&(i=!0,o=xi(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(4===o.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(o.rank,"."))),bi("avgPool",a,r);const c={x:o},l={filterSize:e,strides:n,pad:a,dimRoundingMode:r};let u=Wr.runKernel(_t,c,l);return u=qs(u,s.dtype),i?xi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const wi=Jr({avgPool3d_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=Yr(t,"x","avgPool3d","float32");let i=o,c=!1;4===o.rank&&(c=!0,i=xi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),A("NDHWC"===s,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),A("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),bi("avgPool3d",a,r);const l={x:i},u={filterSize:e,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let h=Wr.runKernel(Dt,l,u);return h=qs(h,i.dtype),c?xi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const ki=Jr({batchNorm_:function(t,e,n,a,r,s){null==s&&(s=.001);const o=Yr(t,"x","batchNorm"),i=Yr(e,"mean","batchNorm"),c=Yr(n,"variance","batchNorm");let l,u;null!=r&&(l=Yr(r,"scale","batchNorm")),null!=a&&(u=Yr(a,"offset","batchNorm")),A(i.rank===c.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),A(null==u||i.rank===u.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),A(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(t){let e;return e=0===t.rank||1===t.rank?xi(t,[1,1,1,t.size]):2===t.rank?xi(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?xi(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(o),d={x:h,scale:l,offset:u,mean:i,variance:c},p={varianceEpsilon:s},f=Wr.runKernel(Ne,d,p);return xi(f,o.shape)}});const Ii=Jr({batchNorm2d_:function(t,e,n,a,r,s){const o=Yr(t,"x","batchNorm"),i=Yr(e,"mean","batchNorm"),c=Yr(n,"variance","batchNorm");let l,u;return null!=r&&(l=Yr(r,"scale","batchNorm")),null!=a&&(u=Yr(a,"offset","batchNorm")),A(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,"."))),A(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),A(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&A(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&A(2===u.rank||1===u.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,"."))),ki(o,i,c,u,l,s)}});const Si=Jr({batchNorm3d_:function(t,e,n,a,r,s){const o=Yr(t,"x","batchNorm"),i=Yr(e,"mean","batchNorm"),c=Yr(n,"variance","batchNorm");let l,u;return null!=r&&(l=Yr(r,"scale","batchNorm")),null!=a&&(u=Yr(a,"offset","batchNorm")),A(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,"."))),A(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),A(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&A(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&A(3===u.rank||1===u.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,"."))),ki(o,i,c,u,l,s)}});const Ni=Jr({batchNorm4d_:function(t,e,n,a,r,s){const o=Yr(t,"x","batchNorm"),i=Yr(e,"mean","batchNorm"),c=Yr(n,"variance","batchNorm");let l,u;return null!=r&&(l=Yr(r,"scale","batchNorm")),null!=a&&(u=Yr(a,"offset","batchNorm")),A(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,"."))),A(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),A(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&A(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&A(4===u.rank||1===u.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,"."))),ki(o,i,c,u,l,s)}});const Ti=Jr({broadcastTo_:function(t,e){let n=Yr(t,"broadcastTo","x");const a=n.shape;if(rt(e),e.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(e.length," < input.rank=").concat(n.rank,"."));if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=xi(n,t)}const r=n.shape,s=Array.from(e);for(let c=e.length-1;c>=0;c--)if(r[c]===e[c])s[c]=1;else if(1!==n.shape[c])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(e,"]."));if(0===s.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return Xs(n);const o={x:n},i={reps:s};return Wr.runKernel(pa,o,i)}});const Ei=Jr({clipByValue_:function(t,e,n){const a=Yr(t,"x","clipByValue");if(A(e<=n,(()=>"Error in clip: min (".concat(e,") must be ")+"less than or equal to max (".concat(n,")."))),e===n)return po(a.shape,e,a.dtype);const r={x:a},s={clipValueMin:e,clipValueMax:n};return Wr.runKernel(Ut,r,s)}});const Ci=Jr({concat_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;A(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=Qr(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(t.dtype,". "))})),1===n.length)return Xs(n[0]);const a=n,r={axis:e};return Wr.runKernel(Ht,a,r)}});const Ri=Jr({concat1d_:function(t){return Ci(t,0)}});const _i=Jr({concat2d_:function(t,e){return Ci(t,e)}});const Ai=Jr({concat3d_:function(t,e){return Ci(t,e)}});const Di=Jr({concat4d_:function(t,e){return Ci(t,e)}});const Fi=Jr({conv2d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=Yr(t,"x","conv2d","float32"),c=Yr(e,"filter","conv2d","float32");let l=i,u=!1;3===i.rank&&(u=!0,l=xi(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(4===l.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(l.rank,"."))),A(4===c.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(c.rank,"."))),bi("conv2d",a,o);const h="NHWC"===r?l.shape[3]:l.shape[1];A(h===c.shape[2],(()=>"Error in conv2d: depth of input (".concat(h,") must match ")+"input depth for filter ".concat(c.shape[2],"."))),A(mi(n,s),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),A(gi(s),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),A(gi(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:l,filter:c},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},f=Wr.runKernel(jt,d,p);return u?xi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Oi=Jr({conv1d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,o=arguments.length>6?arguments[6]:void 0;const i=Yr(t,"x","conv1d"),c=Yr(e,"filter","conv1d");let l=i,u=!1;2===i.rank&&(u=!0,l=xi(i,[1,i.shape[0],i.shape[1]])),A(3===l.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(l.rank,"."))),A(3===c.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(c.rank,"."))),bi("conv1d",a,o),A(l.shape[2]===c.shape[1],(()=>"Error in conv1d: depth of input (".concat(l.shape[2],") must match ")+"input depth for filter ".concat(c.shape[1],"."))),A(mi(n,s),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(s,"'"))),A(gi(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),A(gi(n),(()=>"Error in conv1D: Stride should be larger than 0.")),A("NWC"===r,(()=>"Error in conv1d: got dataFormat of ".concat(r," but only NWC is currently supported.")));const h=xi(c,[1,c.shape[0],c.shape[1],c.shape[2]]),d=xi(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=Fi(d,h,[1,n],a,"NHWC",[1,s],o);return xi(p,u?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const Mi=Jr({conv2DBackpropInput_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0;A(t.length===e.rank,(()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match")));let i=t,c=e,l=!1;3===e.rank&&(l=!0,c=xi(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,t[0],t[1],t[2]]),A(4===i.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(i.length,"."))),A(4===c.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(c.rank))),A(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const u="NHWC"===s?i[3]:i[1],h="NHWC"===s?c.shape[3]:c.shape[1];A(u===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(u,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),A(h===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(h,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),bi("conv2dDerInput",r,o);const d={dy:c,filter:n},p={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,inputShape:i},f=Wr.runKernel(qt,d,p);return l?xi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Li=Jr({conv2dTranspose_:function(t,e,n,a,r,s){const o=Yr(t,"x","conv2dTranspose"),i=Yr(e,"filter","conv2dTranspose");return Mi(n,o,i,a,r,"NHWC",s)}});const zi=Jr({conv3d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=Yr(t,"x","conv3d"),i=Yr(e,"filter","conv3d");let c=o,l=!1;4===o.rank&&(l=!0,c=xi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A(5===c.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(c.rank,"."))),A(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),A(c.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(c.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),A(mi(n,s),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),A("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported."))),A(gi(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),A(gi(n),(()=>"Error in conv3D: Strides should be larger than 0."));const u={x:c,filter:i},h={strides:n,pad:a,dataFormat:r,dilations:s},d=Wr.runKernel(Xt,u,h);return l?xi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Pi=Jr({conv3DBackpropInput_:function(t,e,n,a,r){A(t.length===e.rank,(()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match")));let s=t,o=e,i=!1;4===e.rank&&(i=!0,o=xi(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,t[0],t[1],t[2],t[3]]);const c=s[4],l=o.shape[4];A(5===s.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(s.length,"."))),A(5===o.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(o.rank))),A(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),A(c===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(c,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),A(l===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(l,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const u={dy:o,filter:n},h={pad:r,strides:a,inputShape:s},d=Wr.runKernel(Qt,u,h);return i?xi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Bi=Jr({conv3dTranspose_:function(t,e,n,a,r){const s=Yr(t,"x","conv3dTranspose"),o=Yr(e,"filter","conv3dTranspose");return Pi(n,s,o,a,r)}});const Wi=Jr({denseBincount_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=Yr(t,"x","denseBincount"),s=Yr(e,"weights","denseBincount");A("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),A(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),A(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),A(s.size===r.size||0===s.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(s.shape,".")));const o={x:r,weights:s},i={size:n,binaryOutput:a};return Wr.runKernel(ne,o,i)}});const Ui=Jr({depthwiseConv2d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=Yr(t,"x","depthwiseConv2d","float32"),c=Yr(e,"filter","depthwiseConv2d","float32");let l=i,u=!1;3===i.rank&&(u=!0,l=xi(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(4===l.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(l.rank,"."))),A(4===c.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(c.rank,".")));const h="NHWC"===r?l.shape[3]:l.shape[1];A(h===c.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(h,") must match the inChannels dimension in ")+"filter ".concat(c.shape[2],"."))),bi("depthwiseConv2d",a,o);const d={x:l,filter:c},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},f=Wr.runKernel(re,d,p);return u?xi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Vi=Jr({elu_:function(t){const e={x:Yr(t,"x","elu","float32")};return Wr.runKernel(pe,e)}});const Gi=Jr({equal_:function(t,e){let n=Yr(t,"a","equal","string_or_numeric"),a=Yr(e,"b","equal","string_or_numeric");[n,a]=Dr(n,a),wo(n.shape,a.shape);const r={a:n,b:a};return Wr.runKernel(ge,r)}});const Hi=Jr({exp_:function(t){const e={x:Yr(t,"x","exp")};return Wr.runKernel(ye,e)}});const ji=Jr({expandDims_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Yr(t,"x","expandDims","string_or_numeric");A(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},r={dim:e};return Wr.runKernel(be,a,r)}});const Ki=Jr({tile_:function(t,e){const n=Yr(t,"x","tile","string_or_numeric");A(n.rank===e.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(e,".")));const a={x:n},r={reps:e};return Wr.runKernel(pa,a,r)}});const qi=Jr({eye_:function(t,e,n){null==e&&(e=t);const a=Ks([t,e],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),r=t<=e?t:e;for(let o=0;o<r;++o)a.set(1,o,o);const s=xi(a.toTensor(),[t,e]);if(null==n)return s;if(1===n.length)return Ki(ji(s,0),[n[0],1,1]);if(2===n.length)return Ki(ji(ji(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ki(ji(ji(ji(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});const Xi=Jr({floor_:function(t){const e={x:Yr(t,"x","floor","float32")};return Wr.runKernel(Ie,e)}});const Yi=Jr({gather_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const r={x:Yr(t,"x","gather"),indices:Yr(e,"indices","gather","int32")},s={axis:n,batchDims:a};return Wr.runKernel(Te,r,s)}});const Qi=Jr({greater_:function(t,e){let n=Yr(t,"a","greater","string_or_numeric"),a=Yr(e,"b","greater","string_or_numeric");[n,a]=Dr(n,a),wo(n.shape,a.shape);const r={a:n,b:a};return Wr.runKernel(Ce,r)}});const Ji=Jr({greaterEqual_:function(t,e){let n=Yr(t,"a","greaterEqual","string_or_numeric"),a=Yr(e,"b","greaterEqual","string_or_numeric");[n,a]=Dr(n,a),wo(n.shape,a.shape);const r={a:n,b:a};return Wr.runKernel(Re,r)}});const Zi=Jr({leakyRelu_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:Yr(t,"x","leakyRelu")},a={alpha:e};return Wr.runKernel(Le,n,a)}});const $i=Jr({log_:function(t){const e={x:Yr(t,"x","log","float32")};return Wr.runKernel(We,e)}});const tc=Jr({log1p_:function(t){const e={x:Yr(t,"x","log1p")};return Wr.runKernel(Ue,e)}});const ec=Jr({max_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:Yr(t,"x","max")},r={reductionIndices:e,keepDims:n};return Wr.runKernel(qe,a,r)}});const nc=Jr({sum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=Yr(t,"x","sum");"bool"===a.dtype&&(a=qs(a,"int32"));const r={x:a},s={axis:e,keepDims:n};return Wr.runKernel(Xn,r,s)}});const ac=Jr({logSoftmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Yr(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(e));const a=ao(((t,n)=>{const a=ec(t,e,!0),r=go(t,a),s=go(qs(r,"float32"),$i(nc(Hi(r),e,!0)));n([s]);return{value:s,gradFunc:(t,n)=>{const[a]=n,r=Hi(a);return go(t,$s(nc(t,e,!0),r))}}}));return a(n)}});function rc(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function sc(t,e,n){const a=t.length+e.length,r=[];let s=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(t[s++]):r.push(e[o++]);return r}function oc(t,e){const n=[],a=t.length;for(let r=0;r<a;r++)-1===e.indexOf(r)&&n.push(t[r]);return[n,e.map((e=>t[e]))]}function ic(t,e){return sc(t,e.map((t=>1)),e)}function cc(t,e,n){A(rc(e,n),(()=>"".concat(t," supports only inner-most axes for now. ")+"Got axes ".concat(e," and rank-").concat(n," input.")))}function lc(t,e){if(rc(t,e))return null;const n=[];for(let a=0;a<e;++a)-1===t.indexOf(a)&&n.push(a);return t.forEach((t=>n.push(t))),n}function uc(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function hc(t,e){const n=[];for(let a=e-t;a<e;++a)n.push(a);return n}const dc=Jr({logSumExp_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a=Yr(t,"x","logSumExp"),r=U(e,a.shape),s=ec(a,r,!0),o=go(a,s),i=Hi(o),c=nc(i,r),l=$i(c),u=Qs(xi(s,l.shape),l);if(n){const t=ic(u.shape,r);return xi(u,t)}return u}});const pc=Jr({logicalAnd_:function(t,e){const n=Yr(t,"a","logicalAnd","bool"),a=Yr(e,"b","logicalAnd","bool");wo(n.shape,a.shape);const r={a:n,b:a};return Wr.runKernel(Ve,r)}});const fc=Jr({matMul_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=Yr(t,"a","matMul"),s=Yr(e,"b","matMul");[r,s]=Dr(r,s);const o={a:r,b:s},i={transposeA:n,transposeB:a};return Wr.runKernel(Ot,o,i)}});const mc=Jr({maxPool_:function(t,e,n,a,r){const s=Yr(t,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=xi(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(4===o.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(o.rank,"."))),A(mi(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),bi("maxPool",a,r);const c={x:o},l={filterSize:e,strides:n,pad:a,dimRoundingMode:r},u=Wr.runKernel(Ye,c,l);return i?xi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const gc=Jr({maxPool3d_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=Yr(t,"x","maxPool3d");let i=o,c=!1;4===o.rank&&(c=!0,i=xi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),A("NDHWC"===s,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),bi("maxPool3d",a,r);const l={x:i},u={filterSize:e,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},h=Wr.runKernel(Je,l,u);return c?xi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const yc=Jr({mean_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:Yr(t,"x","mean")},r={axis:e,keepDims:n};return Wr.runKernel(tn,a,r)}});const bc=Jr({min_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:Yr(t,"x","min")},r={axis:e,keepDims:n};return Wr.runKernel(en,a,r)}});const xc=Jr({minimum_:function(t,e){let n=Yr(t,"a","minimum"),a=Yr(e,"b","minimum");[n,a]=Dr(n,a),"bool"===n.dtype&&(n=qs(n,"int32"),a=qs(a,"int32")),wo(n.shape,a.shape);const r={a:n,b:a};return Wr.runKernel(nn,r)}});const vc=Jr({moments_:function(t){let e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=U(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(t=Yr(t,"x","moments")).shape),a=yc(t,n,e);let r=a.shape;e||(r=ic(a.shape,n));const s=eo(go(qs(t,"float32"),xi(a,r)));return{mean:a,variance:yc(s,n,e)}}});const wc=Jr({neg_:function(t){const e={x:Yr(t,"x","neg")};return Wr.runKernel(cn,e)}});const kc=Jr({notEqual_:function(t,e){let n=Yr(t,"a","notEqual","string_or_numeric"),a=Yr(e,"b","notEqual","string_or_numeric");[n,a]=Dr(n,a),wo(n.shape,a.shape);const r={a:n,b:a};return Wr.runKernel(ln,r)}});const Ic=Jr({oneHot_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(e));const s={indices:Yr(t,"indices","oneHot","int32")},o={dtype:r,depth:e,onValue:n,offValue:a};return Wr.runKernel(fn,s,o)}});function Sc(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(rt(t),"complex64"===e){const e=Sc(t,"float32"),n=Sc(t,"float32");return Zr(e,n)}const n=nt(O(t),e);return Wr.makeTensor(n,t,e)}function Nc(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(rt(t),"complex64"===e){const e=Nc(t,"float32"),n=Sc(t,"float32");return Zr(e,n)}const n=et(O(t),e);return Wr.makeTensor(n,t,e)}const Tc=Jr({onesLike_:function(t){const e={x:Yr(t,"x","onesLike")};return Wr.runKernel(pn,e)}});const Ec=Jr({pad_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a=Yr(t,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:n},s={x:a};return Wr.runKernel(gn,s,r)}});const Cc=Jr({prelu_:function(t,e){const n={x:Yr(t,"x","prelu"),alpha:Yr(e,"alpha","prelu")};return Wr.runKernel(bn,n)}});var Rc=n(699);class _c{constructor(t,e,n,a,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=Rc.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*a*o,e=this.mean+this.stdDev*r*o,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Ac{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(t," - ").concat(e," <= 1 and dtype is not float"));this.random=Rc.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Dc=Jr({randomNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(rt(t),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const s=new _c(e,n,a,!1,r),o=Ks(t,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Fc=Jr({randomUniform_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;rt(t);const s=Ks(t,a),o=new Ac(e,n,null,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});function Oc(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:t,stop:e,step:n,dtype:a};return Wr.runKernel(In,{},r)}const Mc=Jr({relu_:function(t){const e={x:Yr(t,"x","relu")};return Wr.runKernel(Tn,e)}});const Lc=Jr({reverse_:function(t,e){const n={x:Yr(t,"x","reverse")},a={dims:e};return Wr.runKernel(Fn,n,a)}});const zc=Jr({selu_:function(t){const e={x:Yr(t,"x","selu")};return Wr.runKernel(Wn,e)}});const Pc=Jr({separableConv2d_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const i=Yr(t,"x","separableConv2d"),c=Yr(e,"depthwiseFilter","separableConv2d"),l=Yr(n,"pointwiseFilter","separableConv2d");let u=i,h=!1;if(3===i.rank&&(h=!0,u=xi(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(4===u.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(u.rank,"."))),A(4===c.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),A(4===l.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),A(1===l.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(l.shape[0],"."))),A(1===l.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(l.shape[1],".")));const d=c.shape[2],p=c.shape[3];A(l.shape[2]===d*p,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(d*p,", ")+"but got ".concat(l.shape[2],".")));const f=Ui(u,c,a,r,o,s),m=Fi(f,l,1,"valid",o);return h?xi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Bc=Jr({sigmoid_:function(t){const e={x:Yr(t,"x","sigmoid","float32")};return Wr.runKernel(jn,e)}});const Wc=Jr({slice_:function(t,e,n){const a=Yr(t,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const r={x:a},s={begin:e,size:n};return Wr.runKernel(Un,r,s)}});const Uc=Jr({slice1d_:function(t,e,n){const a=Yr(t,"x","slice1d");return A(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),Wc(a,[e],[n])}});const Vc=Jr({slice2d_:function(t,e,n){const a=Yr(t,"x","slice2d");return A(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),Wc(a,e,n)}});const Gc=Jr({slice3d_:function(t,e,n){const a=Yr(t,"x","slice3d");return A(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),Wc(a,e,n)}});const Hc=Jr({slice4d_:function(t,e,n){const a=Yr(t,"x","slice4d");return A(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),Wc(a,e,n)}});const jc=Jr({softmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Yr(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(e));const a={logits:n},r={dim:e};return Wr.runKernel(Jn,a,r)}});const Kc=Jr({softplus_:function(t){const e={x:Yr(t,"x","softplus")};return Wr.runKernel(Kn,e)}});const qc=Jr({split_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a={x:Yr(t,"x","split")},r={numOrSizeSplits:e,axis:n};return Wr.runKernel(Qn,a,r)}});const Xc=Jr({squeeze_:function(t,e){const n=Yr(t,"x","squeeze","string_or_numeric");return xi(n,V(n.shape,e).newShape)}});const Yc=Jr({stack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Qr(t,"tensors","stack","string_or_numeric");A(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&A(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,r={axis:e};return Wr.runKernel(mn,a,r)}});const Qc=Jr({tanh_:function(t){const e={x:Yr(t,"x","tanh","float32")};return Wr.runKernel(da,e)}});function Jc(t,e){F(t);const n=Kr(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return $r(t,null,n,e)}const Zc=Jr({truncatedNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(rt(t),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new _c(e,n,a,!0,r),o=Ks(t,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const $c=Jr({unstack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Yr(t,"x","unstack","string_or_numeric");A(e>=-n.shape.length&&e<n.shape.length,(()=>"Axis = ".concat(e," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const a={value:n},r={axis:e};return Wr.runKernel(ba,a,r)}});const tl=Jr({where_:function(t,e,n){const a=Yr(e,"a","where"),r=Yr(n,"b","where"),s=Yr(t,"condition","where","bool"),o=wo(wo(s.shape,a.shape),r.shape),i={condition:Ti(s,o),t:Ti(a,o),e:Ti(r,o)};return Wr.runKernel(Bn,i)}});const el=Jr({imag_:function(t){const e={input:Yr(t,"input","imag")};return Wr.runKernel(De,e)}});const nl=Jr({real_:function(t){const e={input:Yr(t,"input","real")};return Wr.runKernel(Sn,e)}});const al=Jr({transpose_:function(t,e,n){const a=Yr(t,"x","transpose");if(null==e&&(e=a.shape.map(((t,e)=>e)).reverse()),A(a.rank===e.length,(()=>"Error in transpose: rank of input ".concat(a.rank," ")+"must match length of perm ".concat(e,"."))),e.forEach((t=>{A(t>=0&&t<a.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(a.rank-1)+" but got ".concat(e)))})),a.rank<=1)return a.clone();const r={x:a},s={perm:e};return"complex64"===a.dtype?rs((()=>{let t=nl(a),e=el(a);return t=Wr.runKernel(ga,{x:t},s),e=Wr.runKernel(ga,{x:e},s),n&&(e=wc(e)),Zr(t,e)})):Wr.runKernel(ga,r,s)}});const rl=Jr({dropout_:function(t,e,n,a){const r=Yr(t,"x","dropout");if(A("float32"===r.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead."))),A(e>=0&&e<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(e,"."))),0===e)return t instanceof xr?r.clone():r;const s=function(t,e){if(null==e)return t.shape.slice();if(M(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let a=0;a<t.shape.length;a++)null==e[a]&&null!=t.shape[a]?n.push(t.shape[a]):n.push(e[a]);return n}return e}(r,n),o=1-e,i=Zs(Xi(Qs(Fc(s,0,1,"float32",a),o)),o);return $s(r,i)}});const sl=Jr({fft_:function(t){A("complex64"===t.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(t.dtype,".")));const e={input:t};return Wr.runKernel(ve,e)}});const ol=Jr({rfft_:function(t,e){A("float32"===t.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(t.dtype)));let n=t.shape[t.shape.length-1];const a=t.size/n;let r;if(null!=e&&e<n){const a=t.shape.map((t=>0)),s=t.shape.map((t=>t));s[t.shape.length-1]=e,r=Wc(t,a,s),n=e}else if(null!=e&&e>n){const a=t.shape.map((t=>t));a[t.shape.length-1]=e-n,r=Ci([t,Sc(a)],t.shape.length-1),n=e}else r=t;const s=no(r),o=xi(Zr(r,s),[a,n]),i=sl(o),c=Math.floor(n/2)+1,l=nl(i),u=el(i),h=qc(l,[c,n-c],l.shape.length-1),d=qc(u,[c,n-c],u.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=c,xi(Zr(h[0],d[0]),p)}});const il=Jr({ifft_:function(t){A("complex64"===t.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(t.dtype,".")));const e={input:t};return Wr.runKernel(Ae,e)}});const cl=Jr({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let a;if(e<=2){const r=xi(t,[n,e]);a=il(r)}else{const r=[n,2*(e-1)],s=xi(nl(t),[n,e]),o=xi(el(t),[n,e]),i=Lc(Wc(s,[0,1],[n,e-2]),1),c=$s(Lc(Wc(o,[0,1],[n,e-2]),1),ro(-1)),l=Ci([s,i],1),u=Ci([o,c],1),h=xi(Zr(l,u),[r[0],r[1]]);a=il(h)}if(a=nl(a),3===t.rank&&0!==t.shape[0]){const e=a,n=t.shape[0];a=xi(a,[n,a.shape[0]/n,a.shape[1]]),e.dispose()}return a}});const ll=Jr({conv2DBackpropFilter_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0,i=t;3===t.rank&&(i=xi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c=e;3===c.rank&&(c=xi(e,[1,e.shape[0],e.shape[1],e.shape[2]])),A(4===i.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(i.shape,"."))),A(4===c.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(c.shape,"."))),A(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const l="NHWC"===s?i.shape[3]:i.shape[1],u="NHWC"===s?c.shape[3]:c.shape[1];A(l===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(l,") must ")+"match input depth in filter (".concat(n[2],"."))),A(u===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(u,") must ")+"match output depth for filter (".concat(n[3],")."))),bi("conv2dDerFilter",r,o);const h={x:i,dy:c},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,filterShape:n};return Wr.runKernel(Kt,h,d)}});const ul=Jr({relu6_:function(t){const e={x:Yr(t,"x","relu6")};return Wr.runKernel(Dn,e)}});const hl=Jr({step_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:Yr(t,"x","step")},a={alpha:e};return Wr.runKernel(wa,n,a)}});function dl(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return $s(t,hl(e));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function pl(t,e){let n=e;const a=vo(t.shape,e.shape);return a.length>0&&(n=nc(n,a)),xi(n,t.shape)}function fl(t,e,n,a){if("linear"===e)return t;if("relu"===e)return Mc(t);if("elu"===e)return Vi(t);if("relu6"===e)return ul(t);if("prelu"===e)return Cc(t,n);if("leakyrelu"===e)return Zi(t,a);if("sigmoid"===e)return Bc(t);throw new Error("Unknown fused activation ".concat(e,"."))}const ml=(t,e)=>!(t>0)||"linear"===e;const gl=Jr({fusedConv2d_:function(t){let{x:e,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}=t;if(l=l||"linear",!1===ml(Wr.state.gradientDepth,l)){A("NHWC"===s,(()=>"Error in fused conv2d: got dataFormat of ".concat(s," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let t=Fi(e,n,a,r,s,o,i);return null!=c&&(t=Qs(t,c)),fl(t,l,u,h)}const d=Yr(e,"x","conv2d","float32"),p=Yr(n,"filter","conv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=xi(d,[1,d.shape[0],d.shape[1],d.shape[2]])),A(4===f.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(f.rank,"."))),A(4===p.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(p.rank,"."))),bi("fused conv2d",r,i);const g="NHWC"===s?f.shape[3]:f.shape[1];A(p.shape[2]===g,(()=>"Error in conv2d: depth of input (".concat(g,") must match ")+"input depth for filter ".concat(p.shape[2],"."))),A(mi(a,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'")));const y=ii(f.shape,p.shape,a,o,r,i);let b,x;if(null!=c&&(b=Yr(c,"bias","fused conv2d"),[b]=Dr(b,d),"NHWC"===s?wo(y.outShape,b.shape):(A(b.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(b.shape.length,"."))),A(0===b.shape.length||b.shape[0]===y.outChannels||1===b.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(b.shape,") is not ")+"compatible with the number of output channels "+"(".concat(y.outChannels,")"))))),null!=u){const t=u.shape;if(A(t.length<=1||3===t.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(t.length,"."))),1===t.length)A(1===t[0]||t[0]===y.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(t,") is not compatible with the number of output ")+"channels (".concat(y.outChannels,").")));else if(3===t.length)try{wo(t,y.outShape)}catch(I){const e="Error in fused conv2d: PReLU activation weights (".concat(t,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(y.outShape,").");throw Error(e)}x=Yr(u,"prelu weights","fused conv2d")}const v=(t,e)=>{A("NHWC"===s,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(s," but only NHWC is currently supported.")));const[n,i,c,u]=e,h=dl(t,c,l);A(fi(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const d=[Mi(i.shape,h,n,a,r),ll(i,h,n.shape,a,r)];if(null!=u){const t=pl(u,h);d.push(t)}return d},w={x:f,filter:p,bias:b,preluActivationWeights:x},k={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==c){const t=ao(((t,e,n)=>{let a=Wr.runKernel(Sa,w,k);return n([e,t,a]),m&&(a=xi(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}}));return t(f,p)}{const t=ao(((t,e,n,a)=>{let r=Wr.runKernel(Sa,w,k);return a([e,t,r,n]),m&&(r=xi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return t(f,p,b)}}});const yl=Jr({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=t;3===t.rank&&(i=xi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c=e;3===c.rank&&(c=xi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:i,dy:c},u={strides:a,pad:r,dimRoundingMode:o,dilations:s,filterShape:n};return Wr.runKernel(se,l,u)}});const bl=Jr({depthwiseConv2dNativeBackpropInput_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=e,c=!1;3===e.rank&&(c=!0,i=xi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:i,filter:n},u={strides:a,pad:r,dimRoundingMode:o,dilations:s,inputShape:t},h=Wr.runKernel(oe,l,u);return c?xi(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const xl=Jr({fusedMatMul_:function(t){let{a:e,b:n,transposeA:a=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:c=.2}=t;if(!1===ml(Wr.state.gradientDepth,o)){let t=fc(e,n,a,r);return null!=s&&(t=Qs(t,s)),fl(t,o,i,c)}let l=Yr(e,"a","fused matMul"),u=Yr(n,"b","fused matMul");[l,u]=Dr(l,u);const h=a?l.shape[l.rank-2]:l.shape[l.rank-1],d=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=a?l.shape[l.rank-1]:l.shape[l.rank-2],f=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),g=u.shape.slice(0,-2),y=O(m),b=O(g);A(h===d,(()=>"Error in fused matMul: inner shapes (".concat(h,") and (")+"".concat(d,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(u.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const x=wo(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,f]),v=xi(l,a?[y,h,p]:[y,p,h]),w=xi(u,r?[b,f,d]:[b,d,f]);let k,I;null!=s&&(k=Yr(s,"bias","fused matMul"),[k]=Dr(k,l),wo(x,k.shape)),null!=i&&(I=Yr(i,"prelu weights","fused matMul"));const S=(t,e)=>{const[n,i,c,l]=e,u=dl(xi(t,c.shape),c,o);let h,d;if(a||r?!a&&r?(h=fc(u,i,!1,!1),d=fc(u,n,!0,!1)):a&&!r?(h=fc(i,u,!1,!0),d=fc(n,u,!1,!1)):(h=fc(i,u,!0,!0),d=fc(u,n,!0,!0)):(h=fc(u,i,!1,!0),d=fc(n,u,!0,!1)),null!=s){return[h,d,pl(l,u)]}return[h,d]},N={a:v,b:w,bias:k,preluActivationWeights:I},T={transposeA:a,transposeB:r,activation:o,leakyreluAlpha:c};if(null==s){const t=ao(((t,e,n)=>{const a=Wr.runKernel(Ia,N,T);return n([t,e,a]),{value:xi(a,x),gradFunc:S}}));return t(v,w)}{const t=ao(((t,e,n,a)=>{const r=Wr.runKernel(Ia,N,T);return a([t,e,r,n]),{value:xi(r,x),gradFunc:S}}));return t(v,w,k)}}});function vl(t,e,n){if(F(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const a=Kr(t,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return $r(t,e,a,n)}const wl=Jr({cropAndResize_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=Yr(t,"image","cropAndResize"),i=Yr(e,"boxes","cropAndResize","float32"),c=Yr(n,"boxInd","cropAndResize","int32"),l=i.shape[0];A(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),A(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(l,",4] ")+"but had shape ".concat(i.shape,"."))),A(1===c.rank&&c.shape[0]===l,(()=>"Error in cropAndResize: boxInd must be have size [".concat(l,"] ")+"but had shape ".concat(i.shape,"."))),A(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),A(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),A("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const u={image:o,boxes:i,boxInd:c},h={method:r,extrapolationValue:s,cropSize:a};return Wr.runKernel(ee,u,h)}});const kl=Jr({flipLeftRight_:function(t){const e=Yr(t,"image","flipLeftRight","float32");A(4===e.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(e.rank,".")));const n={image:e};return Wr.runKernel(ke,n,{})}});const Il=Jr({grayscaleToRGB_:function(t){const e=Yr(t,"image","grayscaleToRGB"),n=e.rank-1,a=e.shape[n];A(e.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(e.rank,"."))),A(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const r=new Array(e.rank);return r.fill(1,0,n),r[n]=3,Ki(e,r)}});const Sl=Jr({einsum_:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];const r=n.map(((t,e)=>Yr(t,"tensors".concat(e),"einsum"))),s={equation:t};return Wr.runKernel(de,r,s)}});const Nl=Jr({rgbToGrayscale_:function(t){const e=Yr(t,"image","RGBToGrayscale"),n=e.rank-1,a=e.shape[n];A(e.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(e.rank,"."))),A(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const r=e.dtype,s=qs(e,"float32"),o=Jc([.2989,.587,.114]);let i;switch(e.rank){case 2:i=Sl("ij,j->i",s,o);break;case 3:i=Sl("ijk,k->ij",s,o);break;case 4:i=Sl("ijkl,l->ijk",s,o);break;case 5:i=Sl("ijklm,m->ijkl",s,o);break;case 6:i=Sl("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return i=ji(i,-1),qs(i,r)}});const Tl=Jr({rotateWithOffset_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=Yr(t,"image","rotateWithOffset","float32");A(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const s={image:r},o={radians:e,fillValue:n,center:a};return Wr.runKernel(ka,s,o)}});function El(t,e,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=t.shape[0];return n=Math.min(n,o),A(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),A(2===t.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(t.rank,"'"))),A(4===t.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(t.shape[1]))),A(1===e.rank,(()=>"scores must be a 1D tensor")),A(e.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(e.shape[0]))),A(0<=s&&s<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const Cl=Jr({nonMaxSuppression_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=Yr(t,"boxes","nonMaxSuppression","float32"),o=Yr(e,"scores","nonMaxSuppression","float32"),i=El(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return Wr.runKernel(un,{boxes:s,scores:o},c)}});function Rl(t,e,n){const a=function(t,e,n){return function(t,e,n){let a=0,r=t.length,s=0,o=!1;for(;a<r;){s=a+(r-a>>>1);const i=n(e,t[s]);i>0?a=s+1:(r=s,o=!i)}return o?a:-a-1}(t,e,n||_l)}(t,e,n),r=a<0?-(a+1):a;t.splice(r,0,e)}function _l(t,e){return t>e?1:t<e?-1:0}function Al(t,e,n,a,r){return Ol(t,e,n,a,r,0)}function Dl(t,e,n,a,r,s){return Ol(t,e,n,a,r,0,!1,s,!0)}function Fl(t,e,n,a,r,s){return Ol(t,e,n,a,r,s,!0)}function Ol(t,e,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const l=[];for(let g=0;g<e.length;g++)e[g]>r&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(zl);const u=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&l.length>0;){const e=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=e;if(n<r)break;let i=!1;for(let c=h.length-1;c>=o;--c){const n=Ml(t,s,h[c]);if(n>=a){i=!0;break}if(e.score=e.score*Ll(a,u,n),e.score<=r)break}e.suppressBeginIndex=h.length,i||(e.score===n?(h.push(s),d.push(e.score)):e.score>r&&Rl(l,e,zl))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=d),c&&(m.validOutputs=p),m}function Ml(t,e,n){const a=t.subarray(4*e,4*e+4),r=t.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-s)*(c-o),f=(h-l)*(d-u);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(o,u),y=Math.min(i,h),b=Math.min(c,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function Ll(t,e,n){const a=Math.exp(e*n*n);return n<=t?a:0}function zl(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const Pl=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=Yr(t,"boxes","nonMaxSuppressionAsync"),o=Yr(e,"scores","nonMaxSuppressionAsync"),i=El(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([s.data(),o.data()]),l=c[0],u=c[1],{selectedIndices:h}=Al(l,u,n,a,r);return s!==t&&s.dispose(),o!==e&&o.dispose(),Jc(h,"int32")};const Bl=Jr({nonMaxSuppressionWithScore_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=Yr(t,"boxes","nonMaxSuppression"),i=Yr(e,"scores","nonMaxSuppression"),c=El(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},h=Wr.runKernel(dn,l,u);return{selectedIndices:h[0],selectedScores:h[1]}}});const Wl=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=Yr(t,"boxes","nonMaxSuppressionAsync"),i=Yr(e,"scores","nonMaxSuppressionAsync"),c=El(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Fl(u,h,n,a,r,s);return o!==t&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:Jc(d,"int32"),selectedScores:Jc(p)}};const Ul=Jr({nonMaxSuppressionPadded_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=Yr(t,"boxes","nonMaxSuppression"),i=Yr(e,"scores","nonMaxSuppression"),c=El(o,i,n,a,r,null),l={boxes:o,scores:i},u={maxOutputSize:c.maxOutputSize,iouThreshold:c.iouThreshold,scoreThreshold:c.scoreThreshold,padToMaxOutputSize:s},h=Wr.runKernel(hn,l,u);return{selectedIndices:h[0],validOutputs:h[1]}}});const Vl=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=Yr(t,"boxes","nonMaxSuppressionAsync"),i=Yr(e,"scores","nonMaxSuppressionAsync"),c=El(o,i,n,a,r,null),l=c.maxOutputSize,u=c.iouThreshold,h=c.scoreThreshold,[d,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Dl(d,p,l,u,h,s);return o!==t&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:Jc(f,"int32"),validOutputs:ro(m,"int32")}};const Gl=Jr({resizeBilinear_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=Yr(t,"images","resizeBilinear");A(3===r.rank||4===r.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),A(2===e.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(e,"."))),A(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=xi(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=e,i={images:s},c={alignCorners:n,halfPixelCenters:a,size:e},l=Wr.runKernel(_n,i,c);return o?xi(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Hl=Jr({resizeNearestNeighbor_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=Yr(t,"images","resizeNearestNeighbor");A(3===r.rank||4===r.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),A(2===e.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(e,"."))),A("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),A(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=xi(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=e,i={images:s},c={alignCorners:n,halfPixelCenters:a,size:e},l=Wr.runKernel(Cn,i,c);return o?xi(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const jl=Jr({bincount_:function(t,e,n){const a=Yr(t,"x","bincount"),r=Yr(e,"weights","bincount");A("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),A(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),A(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const s={x:a,weights:r},o={size:n};return Wr.runKernel(Lt,s,o)}});const Kl=Jr({lessEqual_:function(t,e){let n=Yr(t,"a","lessEqual","string_or_numeric"),a=Yr(e,"b","lessEqual","string_or_numeric");[n,a]=Dr(n,a),wo(n.shape,a.shape);const r={a:n,b:a};return Wr.runKernel(Pe,r)}});const ql=Jr({round_:function(t){const e={x:Yr(t,"x","round")};return Wr.runKernel(On,e)}});const Xl=Jr({threshold_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=Yr(t,"image","threshold"),s=r.shape[0]*r.shape[1];let o,i,c,l,u=$s(Jc([a]),255);if(A(3===r.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(r.rank,"."))),A(3===r.shape[2]||1===r.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(r.shape[2],"."))),A("int32"===r.dtype||"float32"===r.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(r.dtype,"."))),A("otsu"===e||"binary"===e,(()=>"Method must be binary or otsu, but was ".concat(e))),3===r.shape[2]){[o,i,c]=qc(r,[1,1,1],-1);const t=$s(o,.2989),e=$s(i,.587),n=$s(c,.114);l=Qs(Qs(t,e),n)}else l=t;if("otsu"===e){u=function(t,e){let n,a,r,s,o,i,c=Jc([-1]),l=Jc([0]),u=Jc([0]);for(let h=0;h<t.size-1;h++){n=Wc(t,0,h+1),a=Wc(t,h+1),o=Zs(nc(n),e),i=Zs(nc(a),e);const d=nc($s(n,Oc(0,n.size)));r=Zs(d,nc(n));const p=po(a.shape,n.size),f=Qs(Oc(0,a.size),p),m=$s(a,f);s=Zs(nc(m),nc(a));const g=go(r,s),y=go(r,s),b=$s(o,i);u=$s($s(b,g),y);const x=Qi(u,l);l=tl(x,u,l),c=tl(x,Jc([h]),c)}return c}(jl(qs(ql(l),"int32"),ts([]),256),s)}const h=n?Kl(l,u):Qi(l,u);return qs($s(h,255),"int32")}});const Yl=Jr({transform_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const o=Yr(t,"image","transform","float32"),i=Yr(e,"transforms","transform","float32");A(4===o.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),A(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),A(null==s||2===s.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(s,".")));const c={image:o,transforms:i},l={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return Wr.runKernel(ma,c,l)}});const Ql=Jr({less_:function(t,e){let n=Yr(t,"a","less","string_or_numeric"),a=Yr(e,"b","less","string_or_numeric");[n,a]=Dr(n,a),wo(n.shape,a.shape);const r={a:n,b:a};return Wr.runKernel(ze,r)}});const Jl=Jr({bandPart_:function(t,e,n){const a=Yr(t,"a","bandPart");A(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[s,o]=a.shape.slice(-2);let i,c;"number"===typeof e?(A(e%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(e,"."))),A(e<=s,(()=>"bandPart(): numLower (".concat(e,")")+" must not be greater than the number of rows (".concat(s,")."))),i=Yr(e<0?s:e,"numLower","bandPart")):(A("int32"===e.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=tl(Ql(e,0),s,xc(e,s))),"number"===typeof n?(A(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),A(n<=o,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."))),c=Yr(n<0?o:n,"numUpper","bandPart")):(A("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=tl(Ql(n,0),o,xc(n,o)));const l=xi(Oc(0,s,1,"int32"),[-1,1]),u=Oc(0,o,1,"int32"),h=go(l,u),d=pc(Kl(h,i),Ji(h,wc(c))),p=Sc([s,o],a.dtype);return xi(Yc($c(xi(a,[-1,s,o])).map((t=>tl(d,t,p)))),r)}});function Zl(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===t.rank)return bo(t);if(1!==t.rank&&null===n)return Zl(xi(t,[-1]),e,n);if(1===t.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===e)return nc(bo(t),n);if(e===1/0)return ec(bo(t),n);if(e===-1/0)return bc(bo(t),n);if("euclidean"===e||2===e)return to(nc(mo(bo(t),ro(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}if(Array.isArray(n)&&2===n.length){if(1===e)return ec(nc(bo(t),n[0]),n[1]-1);if(e===1/0)return ec(nc(bo(t),n[1]),n[0]);if(e===-1/0)return bc(nc(bo(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return to(nc(eo(t),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}throw new Error("Error in norm: invalid axis: ".concat(n))}const $l=Jr({norm_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=Zl(t=Yr(t,"x","norm"),e,n);let s=r.shape;if(a){const e=U(n,t.shape);s=ic(r.shape,e)}return xi(r,s)}});const tu=Jr({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,A(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)A(t[e].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(t[e].shape[0]," vs. ").concat(n,")")))}else e=!0,t=qc(t,t.shape[0],0).map((t=>Xc(t,[0])));A(t.length<=t[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(t.length,") exceeds ")+"number of dimensions (".concat(t[0].shape[0],").")));const n=[],a=t;for(let r=0;r<t.length;++r)n.push(Wr.tidy((()=>{let t=a[r];if(r>0)for(let e=0;e<r;++e){const a=$s(nc($s(n[e],t)),n[e]);t=go(t,a)}return Zs(t,$l(t,"euclidean"))})));return e?Yc(n,0):n}});function eu(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Wr.tidy((()=>{A(2===t.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(t.shape.length,"D Tensor.")));const n=t.shape[0],a=t.shape[1];let r=qi(n),s=Xs(t);const o=vl([[1]],[1,1]);let i=Xs(o);const c=n>=a?a:n;for(let t=0;t<c;++t){const e=s,c=i,l=r;[i,s,r]=Wr.tidy((()=>{const e=Wc(s,[t,t],[n-t,1]),c=$l(e),l=Wc(s,[t,t],[1,1]),u=tl(Qi(l,0),vl([[-1]]),vl([[1]])),h=go(l,$s(u,c)),d=Zs(e,h);i=1===d.shape[0]?Xs(o):Ci([o,Wc(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=wc(Zs(fc(u,h),c)),f=Wc(s,[t,0],[n-t,a]),m=$s(p,i),g=al(i);if(0===t)s=go(f,fc(m,fc(g,f)));else{const e=go(f,fc(m,fc(g,f)));s=Ci([Wc(s,[0,0],[t,a]),e],0)}const y=al(m),b=Wc(r,[0,t],[n,r.shape[1]-t]);if(0===t)r=go(b,fc(fc(b,i),y));else{const e=go(b,fc(fc(b,i),y));r=Ci([Wc(r,[0,0],[n,t]),e],1)}return[i,s,r]})),ss([e,c,l])}return!e&&n>a&&(r=Wc(r,[0,0],[n,a]),s=Wc(s,[0,0],[a,a])),[r,s]}))}const nu=Jr({qr_:function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(A(t.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(t.rank))),2===t.rank)return eu(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),a=$c(xi(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],s=[];a.forEach((t=>{const[n,a]=eu(t,e);r.push(n),s.push(a)}));return[xi(Yc(r,0),t.shape),xi(Yc(s,0),t.shape)]}}});var au;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(au||(au={}));const ru=Jr({squaredDifference_:function(t,e){let n=Yr(t,"a","squaredDifference"),a=Yr(e,"b","squaredDifference");[n,a]=Dr(n,a),wo(n.shape,a.shape);const r={a:n,b:a};return Wr.runKernel(aa,r,{})}});const su={flipLeftRight:kl,grayscaleToRGB:Il,resizeNearestNeighbor:Hl,resizeBilinear:Gl,rgbToGrayscale:Nl,rotateWithOffset:Tl,cropAndResize:wl,nonMaxSuppression:Cl,nonMaxSuppressionAsync:Pl,nonMaxSuppressionWithScore:Bl,nonMaxSuppressionWithScoreAsync:Wl,nonMaxSuppressionPadded:Ul,nonMaxSuppressionPaddedAsync:Vl,threshold:Xl,transform:Yl},ou={bandPart:Jl,gramSchmidt:tu,qr:nu};const iu=class{static sgd(t){return new So(t)}static momentum(t,e){return new No(t,e,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(t){return new To(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new yo(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new ho(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Io(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(t){return new fo(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},cu="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:t=>t();function lu(){return new Promise((t=>cu((()=>t()))))}function uu(t,e){const n=t[0].length;t.forEach(((t,e)=>{A(t.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(e,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),A(e>=0&&e<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=t[0];t.forEach(((t,r)=>{for(let s=0;s<n;s++)A(s===e||t[s]===a[s],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(t,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,".")))}))}function hu(t,e){const n=t[0].slice();for(let a=1;a<t.length;a++)n[e]+=t[a][e];return n}var du;function pu(t,e,n){let a=new Array;if(null==n&&null==e)return a;if(null==e)for(;a.length<t+n.length;)a.push(-1);else a=e.slice();if(null==n)return a;if(t+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(e," are incompatible: rt input.rank = ").concat(t+n.length,", but shape.rank = ").concat(a.length));for(let r=1;r<n.length;++r){const s=n[r],o=a[a.length-n.length+r],i=a[o];if(s>=0)if(i>=0){if(i!==s)throw new Error("rt input.shape and shape=".concat(e," are incompatible: rt input.shape[").concat(r+t,"] = ").concat(s," but shape[").concat(r+t,"] = ").concat(i))}else a[o]=s}return a}function fu(t){const e={FIRST_DIM_SIZE:du.FIRST_DIM_SIZE,VALUE_ROWIDS:du.VALUE_ROWIDS,ROW_LENGTHS:du.ROW_LENGTHS,ROW_SPLITS:du.ROW_SPLITS,ROW_LIMITS:du.ROW_LIMITS,ROW_STARTS:du.ROW_STARTS},n=[];for(const a of t){if(!(a in e))break;n.push(e[a])}return n}function mu(t){return 0===t.length?0:t[0]===du.FIRST_DIM_SIZE?t.length-1:t.length}function gu(t,e){if(null==t||null==e)return;const n=t.length,a=e.length;if(n>=a)throw new Error("defaultValue.shape=".concat(t," and ragged tensor flatValues.shape=").concat(e,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let r=0;r<Math.min(n,a-1);++r){const n=t[r],a=e[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(t,", and ragged tensor input flatValues.shape=").concat(e," are incompatible: defaultValue.shape[").concat(r-t.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(r-t.length,"] = ").concat(a))}}!function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"}(du||(du={}));const yu=30;function bu(t){return t<=yu?t:J(t,Math.floor(Math.sqrt(t)))}function xu(t,e,n){return[n*("number"===typeof t?t:t[0]),e*("number"===typeof t?t:t[1])]}function vu(t,e,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)a=a.concat([t[r+1]/e[r],e[r]]);a=a.concat(t.slice(n+1))}return a}function wu(t,e){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(e);for(let a=e+1;a<t;++a)a<=2*e?(n.push(a),n.push(a-(e+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<t;++n)n>=2*e+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function ku(t,e,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(t[0]/n):r.push(t[0]*n);for(let s=1;s<t.length;++s)s<=e.length?a?r.push(e[s-1]*t[s]):r.push(t[s]/e[s-1]):r.push(t[s]);return r}function Iu(t,e){const n=[0];for(let a=0;a<e;++a)n.push(t[a][0]);return n}function Su(t,e,n){const a=t.slice(0,1);for(let r=0;r<n;++r)a.push(t[r+1]-e[r][0]-e[r][1]);return a}function Nu(t,e){const n=t.shape.length,a=e.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==e.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(e.shape[a-1]," vs. ").concat(n));if(0===O(t.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(t.shape,"."));const r=e.shape,s=r[r.length-1];let o=1;for(let h=0;h<r.length-1;++h)o*=r[h];const i=t.shape,c=r.slice();c.pop();let l=1;for(let h=s;h<n;++h)l*=i[h],c.push(i[h]);const u=[...Z(t.shape).map((t=>t/l)),1].slice(0,s);return[c,o,l,u]}function Tu(t,e,n){const a=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(e.shape,", shape: ").concat(t)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(s+" update.rank < ".concat(r,". "));if(t.length<a+(n.rank-r))throw new Error(s+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+t.length-a)throw new Error(s+" update.rank != ".concat(r+t.length-a));for(let o=0;o<r;++o)if(n.shape[o]!==e.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(e.shape[o],")."));for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==t[o+a])throw new Error(s+" updates.shape[".concat(o+r,"] (").concat(n.shape[o+r],") != shape[").concat(o+r,"] (").concat(t[o+r],")"))}function Eu(t,e,n){if(e.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if(t.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(e.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: ".concat(e.shape));if(0===t.size)throw new Error("Updates specified for empty output. updates shape: ".concat(t.shape))}Tu(n,e,t)}function Cu(t,e,n){const a=e.shape.length,r=a>1?e.shape[a-1]:1,s=n.length;let o=1;for(let c=r;c<s;++c)o*=n[c];const i=r<1?1:r;return{sliceRank:r,numUpdates:O(e.shape)/i,sliceSize:o,strides:[...Z(n.slice(0,r)),1],outputSize:O(n)}}const Ru=1.7580993408473768,_u=1.0507009873554805,Au=.3275911,Du=.254829592,Fu=-.284496736,Ou=1.421413741,Mu=-1.453152027,Lu=1.061405429;function zu(t,e){if(t.length!==e.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(t.length,", imag: ").concat(e.length,"."));const n=new Float32Array(2*t.length);for(let a=0;a<n.length;a+=2)n[a]=t[a/2],n[a+1]=e[a/2];return n}function Pu(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let a=0;a<t.length;a+=2)e[a/2]=t[a],n[a/2]=t[a+1];return{real:e,imag:n}}function Bu(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),a=new Float32Array(e);for(let r=0;r<t.length;r+=4)n[Math.floor(r/4)]=t[r],a[Math.floor(r/4)]=t[r+1];return{real:n,imag:a}}function Wu(t){const e=Math.floor(t.length/4),n=new Float32Array(e),a=new Float32Array(e);for(let r=2;r<t.length;r+=4)n[Math.floor(r/4)]=t[r],a[Math.floor(r/4)]=t[r+1];return{real:n,imag:a}}function Uu(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Vu(t,e,n,a){t[2*a]=e,t[2*a+1]=n}function Gu(t,e){const n=new Float32Array(t/2),a=new Float32Array(t/2);for(let r=0;r<Math.ceil(t/2);r++){const s=(e?2:-2)*Math.PI*(r/t);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function Hu(t,e,n){const a=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(a),imag:Math.sin(a)}}const ju="->",Ku=/->/g,qu=",",Xu="...";function Yu(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(Ku,"").length)/ju.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(ju,'").'));const[a,r]=t.split(ju);A(-1===a.indexOf(Xu),(()=>'The ellipsis notation ("'.concat(Xu,'") is not supported yet.')));const s=a.split(qu),o=s.length;if(e!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(e));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<r.length;++h){const t=r[h];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error("Output subscripts contain the label ".concat(t," ")+"not present in the input subscripts.");-1===i.indexOf(t)&&i.push(t)}for(let h=0;h<a.length;++h){const t=a[h];-1===i.indexOf(t)&&t!==qu&&i.push(t)}const c=new Array(s.length);for(let h=0;h<o;++h){if(new Set(s[h].split("")).size!==s[h].length)throw new Error("Found duplicate axes in input component ".concat(s[h],". ")+"Support for duplicate axes in input is not implemented yet.");c[h]=[];for(let t=0;t<s[h].length;++t)c[h].push(i.indexOf(s[h][t]))}const l=i.length,u=[];for(let h=r.length;h<l;++h)u.push(h);return{allDims:i,summedDims:u,idDims:c}}function Qu(t,e){let n=new Array(t);n.fill(-1);for(let r=0;r<e.length;++r)n[e[r]]=r;const a=[];for(let r=0;r<t;++r)-1===n[r]&&a.push(r);return n=n.filter((t=>-1!==t)),{permutationIndices:n,expandDims:a}}function Ju(t,e,n){const a=new Array(t);for(let r=0;r<n.length;++r){const t=n[r].shape;for(let n=0;n<e[r].length;++n)void 0===a[e[r][n]]?a[e[r][n]]=t[n]:A(a[e[r][n]]===t[n],(()=>"Expected dimension ".concat(a[e[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(t),", ")+"but got dimension ".concat(t[n])))}}function Zu(t,e){const n=t,a=[];let r=0;0===t.length&&n.push(-1),r=t.length+1;for(let o=0;o<r;++o)a.push([]);const s=[];for(let o=0;o<n.length;++o){const t=th(e,n[o]);for(const e of t)-1===s.indexOf(e)&&(a[o].push(e),s.push(e))}return{path:n,steps:a}}function $u(t){return t.every(((t,e)=>t===e))}function th(t,e){const n=[];for(let a=0;a<t.length;++a)0!==t[a].length&&-1===t[a].indexOf(e)&&-1!==e||n.push(a);return n}function eh(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof e)A(t.shape[n]%e===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(e).fill(t.shape[n]/e);else{const r=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);A(r<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const a=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-a}A(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=e}return a}function nh(t){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(t)}function ah(t,e){return"indices(".concat(t,", 0) is invalid: ").concat(e," < 0")}function rh(t,e,n){return"indices(".concat(t,", 0) is invalid: ").concat(e," >= ").concat(n)}function sh(t,e){return"only one output dimension may be -1, not both ".concat(t," and ").concat(e)}function oh(t,e){return"size ".concat(t," must be non-negative, not ").concat(e)}function ih(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ch(t,e){const n=O(t),a=O(e);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(t," outputShape= ").concat(e)}function lh(t,e){const n=O(t),a=O(e);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(t," outputShape=").concat(e)}function uh(){return"segment ids must be >= 0"}function hh(){return"segment ids are not increasing"}function dh(t,e){return"Segment id ".concat(t," out of range [0, ").concat(e,"), possibly because segmentIds input is not sorted.")}function ph(t,e,n){return"Bad: indices[".concat(t,"] == ").concat(e," out of range [0, ").concat(n,")")}function fh(t,e){let n,a=!1;for(t<=yu?(n=t,a=!0):n=J(t,Math.floor(Math.sqrt(t)));!a;)n>e||n===t?a=!0:n=J(t,n+1);return n}function mh(t,e,n){const a=[],r=t.length;for(let s=0;s<r;s++)s!==e?a.push(t[s]):a.push(n);return a}function gh(t,e,n,a){const r=e.shape.length,s=t.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>s)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(s,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let h=0;h<a;++h)if(t.shape[h]!==e.shape[h])throw new Error("x.shape[".concat(h,"]: ").concat(t.shape[h]," should be equal to indices.shape[").concat(h,"]: ").concat(e.shape[h],"."));const o=t.shape[n],i=[];let c=1,l=1,u=1;for(let h=0;h<a;++h)i.push(t.shape[h]),c*=t.shape[h];for(let h=a;h<n;h++)i.push(t.shape[h]),l*=t.shape[h];for(let h=a;h<r;h++)i.push(e.shape[h]);for(let h=n+1;h<s;h++)i.push(t.shape[h]),u*=t.shape[h];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:o,outputShape:i}}function yh(t){try{return t.map((t=>er(t)))}catch(JX){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(JX))}}function bh(t){return t.map((t=>tr(t)))}function xh(t,e){const n=[];for(let s=0;s<e.length;s++)e[s]&&n.push(s);const a=Ks(t,"int32"),r=Ks([n.length,t.length],"int32");for(let s=0;s<n.length;s++){const e=a.indexToLoc(n[s]),o=s*t.length;r.values.set(e,o)}return r.toTensor()}!function(){for(const t of Eo)lo(t)}();const vh={kernelName:gt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$s(t,hl(qs(n,"float32"),-1))}}},wh={kernelName:yt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=eo(qs(n,"float32")),a=to(go(ro(1),e));return wc(Zs(t,a))}}}},kh={kernelName:bt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=to(go(eo(qs(n,"float32")),1));return Zs(t,e)}}}},Ih={kernelName:xt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=wo(n.shape,a.shape);return{a:()=>{let e=t;const a=vo(n.shape,r);return a.length>0&&(e=nc(e,a)),xi(e,n.shape)},b:()=>{let e=t;const n=vo(a.shape,r);return n.length>0&&(e=nc(e,n)),xi(e,a.shape)}}}},Sh={kernelName:vt,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,a)=>{n[a]=()=>t.clone()})),n}},Nh={kernelName:It,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>no(n)}}},Th={kernelName:St,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>no(n)}}},Eh={kernelName:Nt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Zs(t,to(go(ro(1),eo(qs(n,"float32")))))}}},Ch={kernelName:Tt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=to(Qs(ro(1),eo(qs(n,"float32"))));return Zs(t,e)}}}},Rh={kernelName:Rt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=wo(n.shape,a.shape);return{a:()=>{const e=Qs(eo(n),eo(a));let s=$s(t,Zs(a,e));const o=vo(n.shape,r);return o.length>0&&(s=nc(s,o)),xi(s,n.shape)},b:()=>{const e=Qs(eo(n),eo(a));let s=wc($s(t,Zs(n,e)));const o=vo(a.shape,r);return o.length>0&&(s=nc(s,o)),xi(s,a.shape)}}}},_h={kernelName:Et,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Zs(t,Qs(eo(qs(n,"float32")),1))}}},Ah={kernelName:Ct,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Zs(t,go(ro(1),eo(qs(n,"float32"))))}}};const Dh=Jr({avgPool3dGrad_:function(t,e,n,a,r,s){const o=Yr(t,"dy","avgPool3dGrad"),i=Yr(e,"input","avgPool3dGrad");let c=o,l=i,u=!1;4===i.rank&&(u=!0,c=xi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=xi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(5===c.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(c.rank,"."))),A(5===l.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(l.rank,"."))),bi("avgPool3dGrad",r,s);const h={dy:c,input:l},d={filterSize:n,strides:a,pad:r,dimRoundingMode:s},p=Wr.runKernel(Ft,h,d);return u?xi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Fh={kernelName:Dt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{filterSize:r,strides:s,pad:o,dimRoundingMode:i}=n;return{x:()=>Dh(t,a,r,s,o,i)}}};const Oh=Jr({avgPoolGrad_:function(t,e,n,a,r){const s=Yr(t,"dy","avgPoolGrad"),o=Yr(e,"input","avgPoolGrad");A(o.rank===s.rank,(()=>"Rank of input (".concat(o.rank,") does not match rank of dy (").concat(s.rank,")")));let i=o,c=s,l=!1;3===o.rank&&(l=!0,i=xi(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=xi(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(4===c.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),A(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const u={dy:c,input:i},h={filterSize:n,strides:a,pad:r},d=Wr.runKernel(At,u,h);return l?xi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Mh={kernelName:_t,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{filterSize:r,strides:s,pad:o}=n;return{x:()=>Oh(t,a,r,s,o)}}},Lh={kernelName:Ot,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[a,r]=e,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>fc(t,r,!1,!1),b:()=>fc(t,a,!0,!1)}:s&&!o?{a:()=>fc(r,t,!1,!0),b:()=>fc(a,t,!1,!1)}:{a:()=>fc(r,t,!0,!0),b:()=>fc(t,a,!0,!0)}:{a:()=>fc(t,r,!1,!0),b:()=>fc(a,t,!0,!1)}}};const zh=Jr({spaceToBatchND_:function(t,e,n){const a=Yr(t,"x","spaceToBatchND");A(a.rank>=1+e.length,(()=>"input rank ".concat(a.rank," should be > than [blockShape] ").concat(e.length))),A(n.length===e.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(e.length))),A(a.shape.reduce(((t,a,r)=>r>0&&r<=e.length?t&&(a+n[r-1][0]+n[r-1][1])%e[r-1]===0:t),!0),(()=>"input spatial dimensions ".concat(a.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(e.toString())));const r={x:a},s={blockShape:e,paddings:n};return Wr.runKernel(Yn,r,s)}}),Ph={kernelName:Mt,gradFunc:(t,e,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>zh(t,a,r)}}},Bh={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const a=n,r=a.inputShape,s=a.shape,o=Array.from(s);for(let c=r.length-1;c>=0;c--)if(r[c]===s[c])o[c]=1;else if(1!==r[c])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>nc(t,i,!0)}}},Wh={kernelName:Bt,gradFunc:t=>({x:()=>t.clone()})},Uh={kernelName:Wt,gradFunc:t=>({x:()=>no(t)})},Vh={kernelName:Ut,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>tl(pc(Ji(a,r),Kl(a,s)),t,no(t))}}},Gh={kernelName:Gt,inputsToSave:["x"],gradFunc:vh.gradFunc},Hh={kernelName:Ht,saveAllInputs:!0,gradFunc:(t,e,n)=>{const a=e.map((t=>t.shape)),{axis:r}=n,s=U(r,e[0].shape)[0],o=a.map((t=>t[s]));return qc(t,o,s).map((t=>()=>t))}},jh={kernelName:jt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[a,r]=e,{dilations:s,strides:o,pad:i,dataFormat:c}=n;return A(fi(s),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'"))),{x:()=>Mi(a.shape,t,r,o,i,c),filter:()=>ll(a,t,r.shape,o,i,c)}}},Kh={kernelName:qt,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[a,r]=e,{strides:s,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>Fi(t,r,s,o,i,1,c),filter:()=>ll(t,a,r.shape,s,o,i,c)}}};const qh=Jr({conv3DBackpropFilter_:function(t,e,n,a,r){let s=t;4===t.rank&&(s=xi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let o=e;4===o.rank&&(o=xi(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),A(5===s.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(s.shape,"."))),A(5===o.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(o.shape,"."))),A(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),A(s.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(s.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),A(o.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(o.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:s,dy:o},c={strides:a,pad:r,filterShape:n};return Wr.runKernel(Yt,i,c)}}),Xh={kernelName:Xt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:a,strides:r,pad:s}=n;A(fi(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[o,i]=e;return{x:()=>Pi(o.shape,t,i,r,s),filter:()=>qh(o,t,i.shape,r,s)}}};const Yh=Jr({sin_:function(t){const e={x:Yr(t,"x","sin","float32")};return Wr.runKernel(Vn,e)}}),Qh={kernelName:Jt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$s(wc(Yh(qs(n,"float32"))),t)}}};const Jh=Jr({sinh_:function(t){const e={x:Yr(t,"x","sinh")};return Wr.runKernel(Gn,e)}}),Zh={kernelName:Zt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$s(Jh(qs(n,"float32")),t)}}};const $h=Jr({cumsum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:Yr(t,"x","cumsum")},s={axis:e,exclusive:n,reverse:a};return Wr.runKernel(te,r,s)}}),td={kernelName:te,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:r,exclusive:s,reverse:o}=n;return{x:()=>{const e=lc([r],a.rank);let n=$h(t,r,s,!o);return null!=e&&(n=al(n,e)),n}}}},ed={kernelName:re,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:o}=n,i=null==a?[1,1]:a;A(fi(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=e;return A(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),A(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),A(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),A(mi(r,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'."))),bi("depthwiseConv2d",s,o),{x:()=>bl(c.shape,t,l,r,s,i,o),filter:()=>yl(c,t,l.shape,r,s,i,o)}}},nd={kernelName:ce,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[a,r]=e,s={x:a,filter:r,dy:t},o={x:a,filter:r,dy:t};return{x:()=>Wr.runKernel(le,s,n),filter:()=>Wr.runKernel(ue,o,n)}}},ad={kernelName:pe,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,a={dy:t,y:n};return{x:()=>Wr.runKernel(fe,a)}}},rd={kernelName:me,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=$s(Hi(wc(eo(n))),2/Math.sqrt(Math.PI));return{x:()=>$s(t,a)}}},sd={kernelName:ye,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$s(t,n)}}},od={kernelName:be,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>xi(t,n.shape)}}},id={kernelName:xe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$s(t,Hi(n))}}},cd={kernelName:Ie,gradFunc:t=>({x:()=>no(t)})},ld={kernelName:Se,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=wo(n.shape,a.shape);return{a:()=>{const e=Zs(t,qs(a,"float32")),s=vo(n.shape,r);return s.length>0?xi(nc(e,s),n.shape):e},b:()=>{let e=$s(t,qs(n,"float32"));const s=vo(a.shape,r);s.length>0&&(e=xi(nc(e,s),a.shape));const o=eo(a);return wc(Zs(e,qs(o,"float32")))}}}};const ud=Jr({rsqrt_:function(t){const e={x:Yr(t,"x","rsqrt","float32")};return Wr.runKernel(Mn,e)}}),hd={kernelName:Ne,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:a}=n,[r,s,o,i]=e,c=null==i?ro(1):i,l=vo(s.shape,r.shape),u=[];if(1===s.rank){for(let t=0;t<r.shape.length-1;++t)u.push(r.shape[t]);u.push(1)}const h=go(r,s),d=$s(t,c),p=ud(Qs(o,ro(a))),f=$s($s($s(p,p),p),ro(-.5));return{x:()=>1===s.rank?xi($s($s(t,Ki(xi(p,[1,1,1,s.shape[0]]),u)),c),r.shape):xi($s($s(t,p),c),r.shape),mean:()=>{let t=$s($s(p,ro(-1)),d);return 1===s.rank&&(t=nc(t,l)),xi(t,s.shape)},variance:()=>{let t=$s($s(f,h),d);return 1===s.rank&&(t=nc(t,l)),xi(t,s.shape)},scale:()=>{const e=$s(h,p);let n=$s(t,e);return 1===s.rank&&(n=nc(n,l)),xi(n,s.shape)},offset:()=>{let e=t;return 1===s.rank&&(e=nc(e,l)),xi(e,s.shape)}}}};const dd=Jr({unsortedSegmentSum_:function(t,e,n){const a=Yr(t,"x","unsortedSegmentSum"),r=Yr(e,"segmentIds","unsortedSegmentSum","int32");A(L(n),(()=>"numSegments must be of dtype int"));const s={x:a,segmentIds:r},o={numSegments:n};return Wr.runKernel(xa,s,o)}}),pd={kernelName:Te,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[a,r]=e,{axis:s,batchDims:o}=n,i=U(s,a.shape)[0],c=(t,e,n)=>()=>{const a=t.shape,r=e.size,o=a.slice(0,i),c=o.length,l=a.slice(s,a.length).slice(1),u=l.length,h=fd(0,c),d=fd(c+1,c+1+u),p=md([o,[r],l]),f=xi(n,p),m=xi(e,[r]),g=md([[c],h,d]),y=al(f,g);let b=dd(y,m,t.shape[i]);const x=uc(g);return b=al(b,x),b};if(1===o){const e=a.shape[0],n=a.split(e,0);return{x:()=>{const e=Yc(n.map(((e,n)=>c(e,r.slice(n,1),t.slice(n,1))())));return e.reshape(a.shape)},indices:()=>r}}return{x:c(a,r,t),indices:()=>r}}};function fd(t,e){const n=[];for(let a=t;a<e;++a)n.push(a);return n}function md(t){const e=[];for(let n=0;n<t.length;++n)for(let a=0;a<t[n].length;++a)e.push(t[n][a]);return e}const gd={kernelName:Re,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>no(n),b:()=>no(a)}}},yd={kernelName:_e,gradFunc:t=>({x:()=>qs(t,"float32")})},bd={kernelName:Fe,gradFunc:t=>({x:()=>no(t)})},xd={kernelName:Oe,gradFunc:t=>({x:()=>no(t)})},vd={kernelName:Me,gradFunc:t=>({x:()=>no(t)})},wd={kernelName:Le,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{alpha:r}=n,s=Qi(a,0);return{x:()=>tl(s,t,$s(t,r))}}},kd={kernelName:Ue,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Zs(t,Qs(n,1))}}},Id={kernelName:We,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Zs(t,qs(n,"float32"))}}},Sd={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a]=e,{axis:r}=n;return{logits:()=>{const e=Hi(a);return go(t,$s(nc(t,r,!0),e))}}}};const Nd=Jr({localResponseNormalizationBackprop_:function(t,e,n){const a={x:t,y:e,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return Wr.runKernel(Ke,a,r)}}),Td={kernelName:je,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,r]=e,{depthRadius:s,bias:o,alpha:i,beta:c}=n;return{x:()=>Nd(a,r,t,s,o,i,c)}}};function Ed(t,e,n,a){return e.rank<n.rank&&(e=xi(e,ic(e.shape,a))),t.rank<n.rank&&(t=xi(t,ic(t.shape,a))),{x:()=>$s(t,qs(Gi(n,e),t.dtype))}}const Cd={kernelName:qe,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const a=n,{reductionIndices:r}=a,s=e[0],o=Ed(t,e[1],s,U(r,s.shape));return{x:()=>o.x()}}},Rd={kernelName:Xe,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>$s(t,qs(Ji(n,a),"float32")),b:()=>$s(t,qs(Ql(n,a),"float32"))}}};const _d=Jr({maxPool3dGrad_:function(t,e,n,a,r,s,o){const i=Yr(t,"dy","maxPool3dGrad"),c=Yr(e,"input","maxPool3dGrad"),l=Yr(n,"output","maxPool3dGrad");let u=i,h=c,d=l,p=!1;4===c.rank&&(p=!0,u=xi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=xi(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),d=xi(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),A(5===u.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,"."))),A(5===h.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,"."))),A(5===d.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(d.rank,"."))),bi("maxPool3dGrad",s,o);const f={dy:u,input:h,output:d},m={filterSize:a,strides:r,pad:s,dimRoundingMode:o},g=Wr.runKernel(Ze,f,m);return p?xi(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Ad={kernelName:Je,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,r]=e,{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>_d(t,a,r,s,o,i,c)}}};const Dd=Jr({maxPoolGrad_:function(t,e,n,a,r,s,o){const i=Yr(t,"dy","maxPoolGrad"),c=Yr(e,"input","maxPoolGrad"),l=Yr(n,"output","maxPoolGrad");A(c.rank===i.rank,(()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),A(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),A(4===c.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,"."))),bi("maxPoolGrad",s,o);const u={dy:i,input:c,output:l},h={filterSize:a,strides:r,pad:s,dimRoundingMode:o};return Wr.runKernel(Qe,u,h)}}),Fd={kernelName:Ye,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,r]=e,{filterSize:s,strides:o,pad:i}=n;return{x:()=>Dd(t,a,r,s,o,i)}}},Od={kernelName:tn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:r}=n,s=U(r,a.shape),o=O(oc(a.shape,s)[1]);return{x:()=>{const e=a.shape.slice();s.forEach((t=>{e[t]=1}));const n=xi(t,e);return Zs($s(n,Nc(a.shape,"float32")),o)}}}},Md={kernelName:en,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const a=n,{axis:r}=a,[s,o]=e,i=Ed(t,o,s,U(r,s.shape));return{x:()=>i.x()}}},Ld={kernelName:nn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>$s(t,qs(Kl(n,a),"float32")),b:()=>$s(t,qs(Qi(n,a),"float32"))}}},zd={kernelName:an,inputsToSave:["x"],gradFunc:(t,e,n)=>{const a=e[0],{paddings:r}=n,s=r.map((t=>t[0]));return{x:()=>Wc(t,s,a.shape)}}},Pd={kernelName:rn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=wo(n.shape,a.shape);return{a:()=>{const e=vo(n.shape,r);return e.length>0?xi(nc(t,e),n.shape):t},b:()=>{const e=$s(t,wc(Xi(Zs(n,a)))),s=vo(a.shape,r);return s.length>0?xi(nc(e,s),a.shape):e}}}},Bd={kernelName:on,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=wo(n.shape,a.shape);return{a:()=>{const e=$s(t,qs(a,"float32")),s=vo(n.shape,r);return s.length>0?xi(nc(e,s),n.shape):e},b:()=>{const e=$s(t,qs(n,"float32")),s=vo(a.shape,r);return s.length>0?xi(nc(e,s),a.shape):e}}}},Wd={kernelName:cn,gradFunc:t=>({x:()=>wc(t)})},Ud={kernelName:fn,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Sc(n.shape,"float32")}}},Vd={kernelName:pn,gradFunc:t=>({x:()=>no(t)})},Gd={kernelName:mn,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:a}=n;return $c(t,a).map((t=>()=>t))}},Hd={kernelName:gn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const a=e[0],{paddings:r}=n,s=r.map((t=>t[0]));return{x:()=>Wc(t,s,a.shape)}}},jd={kernelName:yn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,a,r]=e,s=n,o=a,i=wo(s.shape,o.shape);return{a:()=>{const e=qs(o,"float32");let n=$s(t,$s(e,mo(s,go(e,ro(1)))));const a=vo(s.shape,i);return a.length>0&&(n=nc(n,a)),xi(n,s.shape)},b:()=>{const e=Qi(s,0),n=tl(e,$i(s),no(s));let a=$s(t,$s(r,n));const c=vo(o.shape,i);return c.length>0&&(a=nc(a,c)),xi(a,o.shape)}}}},Kd={kernelName:bn,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,a]=e,r=Qi(n,0);return{x:()=>tl(r,t,$s(t,a)),alpha:()=>{let e=tl(r,no(t),$s(t,n));const s=vo(a.shape,t.shape);return s.length>0&&(e=nc(e,s)),xi(e,a.shape)}}}};const qd=Jr({cumprod_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:Yr(t,"x","cumprod")},s={axis:e,exclusive:n,reverse:a};return Wr.runKernel($t,r,s)}});function Xd(t,e,n){const a=t.shape.length,r=a-n.length,s=lc(n,a);let o=t;null!=s&&(o=al(t,s));const i=o.shape.slice(),c=i.splice(a-n.length,n.length).reduce(((t,e)=>t*e),1);i.push(c);let l=function(t,e,n){const a=t.shape.slice();a[n]=1;const r=xi(e,a),s=qd(t,n,!0,!1),o=qd(t,n,!0,!0),i=$s(s,o);return $s(r,i)}(o.reshape(i),e,r);if(l=l.reshape(o.shape),null!=s){const t=uc(s);l=al(l,t)}return l}const Yd={kernelName:xn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:r}=n;let s=[];return s=void 0===r||null===r?a.shape.map(((t,e)=>e)):"number"===typeof r?[r]:r,{x:()=>Xd(a,t,s)}}},Qd={kernelName:he,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=wo(n.shape,a.shape);return{a:()=>{const e=Zs(t,qs(a,"float32")),s=vo(n.shape,r);return s.length>0?xi(nc(e,s),n.shape):e},b:()=>{let e=$s(t,qs(n,"float32"));const s=vo(a.shape,r);s.length>0&&(e=xi(nc(e,s),a.shape));const o=eo(a);return wc(Zs(e,qs(o,"float32")))}}}},Jd={kernelName:Nn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Zs(t,wc(eo(n)))}}},Zd={kernelName:Dn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=$s(Kl(n,6),hl(n));return{x:()=>$s(t,qs(a,"float32"))}}},$d={kernelName:Tn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$s(t,qs(hl(n),"float32"))}}},tp={kernelName:En,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xi(t,n.shape)}}},ep={kernelName:_n,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[a]=e,r={dy:t,images:a};return{images:()=>Wr.runKernel(An,r,n)}}},np={kernelName:Cn,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[a]=e,r={dy:t,images:a};return{images:()=>Wr.runKernel(Rn,r,n)}}},ap={kernelName:Fn,gradFunc:(t,e,n)=>{const{dims:a}=n,r=U(a,t.shape);return{x:()=>Lc(t,r)}}},rp={kernelName:On,gradFunc:t=>({x:()=>no(t)})},sp={kernelName:Mn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>wc(Zs(t,$s(mo(n,1.5),2)))}}};const op=Jr({logicalNot_:function(t){const e={x:Yr(t,"x","logicalNot","bool")};return Wr.runKernel(Ge,e)}}),ip={kernelName:Bn,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>qs(no(n),"float32"),t:()=>$s(t,qs(n,t.dtype)),e:()=>$s(t,qs(op(n),t.dtype))}}},cp={kernelName:Wn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Qi(n,ro(0)),a=ro(Ru),r=ro(_u),s=$s(t,r),o=$s($s(t,a),Hi(qs(n,"float32")));return tl(e,s,o)}}}},lp={kernelName:jn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$s(t,$s(n,go(ro(1),n)))}}},up={kernelName:Hn,gradFunc:t=>({x:()=>no(t)})};const hp=Jr({cos_:function(t){const e={x:Yr(t,"x","cos","float32")};return Wr.runKernel(Jt,e)}}),dp={kernelName:Vn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$s(hp(qs(n,"float32")),t)}}};const pp=Jr({cosh_:function(t){const e={x:Yr(t,"x","cosh","float32")};return Wr.runKernel(Zt,e)}}),fp={kernelName:Gn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$s(pp(qs(n,"float32")),t)}}},mp={kernelName:Un,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{begin:r,size:s}=n,o=a.shape,[i,c]=Zo(a,r,s),l=[];for(let u=0;u<t.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>Ec(t,l)}}},gp={kernelName:Jn,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a]=e,{dim:r}=n,s=$s(t,a);return{logits:()=>go(s,$s(nc(s,[r],true),a))}}},yp={kernelName:Kn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$s(t,Bc(n))}}};const bp=Jr({batchToSpaceND_:function(t,e,n){const a=Yr(t,"x","batchToSpaceND"),r=e.reduce(((t,e)=>t*e));A(a.rank>=1+e.length,(()=>"input rank is ".concat(a.rank," but should be > than blockShape.length ").concat(e.length))),A(n.length===e.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(e.length))),A(a.shape[0]%r===0,(()=>"input tensor batch is ".concat(a.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(e.join(" * ")," === ").concat(r)));const s={x:a},o={blockShape:e,crops:n};return Wr.runKernel(Mt,s,o)}}),xp={kernelName:Yn,gradFunc:(t,e,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>bp(t,a,r)}}},vp={kernelName:Qn,gradFunc:(t,e,n)=>{const{axis:a}=n;return{x:()=>Ci(t,a)}}},wp={kernelName:qn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Zs(t,$s(to(qs(n,"float32")),2))}}},kp={kernelName:ra,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$s(t,$s(qs(n,"float32"),2))}}},Ip={kernelName:Xn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,r=a.shape.slice(),{axis:s}=n;U(s,a.shape).forEach((t=>{r[t]=1}));const o=xi(t,r),i=$s(o,Nc(a.shape,"float32"));return{x:()=>i}}},Sp={kernelName:ha,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Zs(t,eo(hp(n)))}}},Np={kernelName:da,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$s(go(ro(1),eo(n)),t)}}},Tp={kernelName:pa,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{reps:r}=n;return{x:()=>{let e=no(a);if(1===a.rank)for(let n=0;n<r[0];++n)e=Qs(e,Wc(t,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)e=Qs(e,Wc(t,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)e=Qs(e,Wc(t,[n*a.shape[0],s*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)for(let i=0;i<r[3];++i)e=Qs(e,Wc(t,[n*a.shape[0],s*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return e}}}},Ep={kernelName:xa,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=ko(e,no(e)),a=Yi(t,n);let r=Ji(e,ro(0,"int32"));const s=a.rank-r.rank;for(let i=0;i<s;++i)r=ji(r,i+1);r=pc(r,Nc(a.shape,"bool"));const o=no(a);return tl(r,a,o)}(t,n)}}};const Cp=[vh,wh,kh,Ih,Sh,Nh,Th,Eh,Ch,Rh,_h,Ah,Fh,Mh,Lh,Ph,Bh,Wh,Uh,Vh,Gh,Hh,Kh,jh,Xh,Qh,Zh,td,ed,nd,Qd,ad,rd,sd,od,id,ld,cd,hd,pd,gd,yd,bd,xd,vd,wd,kd,Id,Sd,Td,Cd,Cd,Rd,Ad,Fd,Od,Md,Ld,zd,Pd,Bd,Wd,Ud,Vd,Gd,Hd,Hd,jd,Kd,Yd,Jd,Zd,$d,tp,ep,np,ap,rp,sp,ip,cp,lp,up,dp,fp,mp,gp,yp,xp,xp,vp,vp,wp,{kernelName:aa,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=ro(2);return{a:()=>$s(t,$s(r,go(n,a))),b:()=>$s(t,$s(r,go(a,n)))}}},kp,{kernelName:wa,gradFunc:t=>({x:()=>no(t)})},{kernelName:ua,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=wo(n.shape,a.shape);return{a:()=>{let e=t;const a=vo(n.shape,r);return a.length>0&&(e=nc(e,a)),xi(e,n.shape)},b:()=>{let e=t;const n=vo(a.shape,r);return n.length>0&&(e=nc(e,n)),xi(wc(e),a.shape)}}}},Ip,Sp,Np,Tp,{kernelName:ga,gradFunc:(t,e,n)=>{const a=n,{perm:r}=a,s=uc(r);return{x:()=>al(t,s)}}},{kernelName:ba,gradFunc:(t,e,n)=>{const a=n,{axis:r}=a;return{value:()=>Yc(t,r)}}},Ep,{kernelName:va,gradFunc:t=>({x:()=>no(t)})}];for(const n of Cp)Oa(n);vr().prototype.abs=function(){return this.throwIfDisposed(),bo(this)};const Rp=Jr({acos_:function(t){const e={x:Yr(t,"x","acos")};return Wr.runKernel(yt,e)}});vr().prototype.acos=function(){return this.throwIfDisposed(),Rp(this)};const _p=Jr({acosh_:function(t){const e={x:Yr(t,"x","acosh")};return Wr.runKernel(bt,e)}});vr().prototype.acosh=function(){return this.throwIfDisposed(),_p(this)},vr().prototype.add=function(t){return this.throwIfDisposed(),Qs(this,t)},vr().prototype.all=function(t,e){return this.throwIfDisposed(),ei(this,t,e)},vr().prototype.any=function(t,e){return this.throwIfDisposed(),ni(this,t,e)},vr().prototype.argMax=function(t){return this.throwIfDisposed(),ai(this,t)};const Ap=Jr({argMin_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:Yr(t,"x","argMin")},a={axis:e};return Wr.runKernel(St,n,a)}});vr().prototype.argMin=function(t){return this.throwIfDisposed(),Ap(this,t)},vr().prototype.asScalar=function(){return this.throwIfDisposed(),A(1===this.size,(()=>"The array must have only 1 element.")),xi(this,[])},vr().prototype.asType=function(t){return this.throwIfDisposed(),qs(this,t)},vr().prototype.as1D=function(){return this.throwIfDisposed(),xi(this,[this.size])},vr().prototype.as2D=function(t,e){return this.throwIfDisposed(),xi(this,[t,e])},vr().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),xi(this,[t,e,n])},vr().prototype.as4D=function(t,e,n,a){return this.throwIfDisposed(),xi(this,[t,e,n,a])},vr().prototype.as5D=function(t,e,n,a,r){return this.throwIfDisposed(),xi(this,[t,e,n,a,r])};const Dp=Jr({asin_:function(t){const e={x:Yr(t,"x","asin")};return Wr.runKernel(Nt,e)}});vr().prototype.asin=function(){return this.throwIfDisposed(),Dp(this)};const Fp=Jr({asinh_:function(t){const e={x:Yr(t,"x","asinh")};return Wr.runKernel(Tt,e)}});vr().prototype.asinh=function(){return this.throwIfDisposed(),Fp(this)};const Op=Jr({atan_:function(t){const e={x:Yr(t,"x","atan")};return Wr.runKernel(Et,e)}});vr().prototype.atan=function(){return this.throwIfDisposed(),Op(this)};const Mp=Jr({atan2_:function(t,e){let n=Yr(t,"a","atan2"),a=Yr(e,"b","atan2");[n,a]=Dr(n,a);const r={a:n,b:a};return Wr.runKernel(Rt,r)}});vr().prototype.atan2=function(t){return this.throwIfDisposed(),Mp(this,t)};const Lp=Jr({atanh_:function(t){const e={x:Yr(t,"x","atanh")};return Wr.runKernel(Ct,e)}});vr().prototype.atanh=function(){return this.throwIfDisposed(),Lp(this)},vr().prototype.avgPool=function(t,e,n,a){return this.throwIfDisposed(),vi(this,t,e,n,a)},vr().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),bp(this,t,e)},vr().prototype.batchNorm=function(t,e,n,a,r){return this.throwIfDisposed(),ki(this,t,e,n,a,r)},vr().prototype.broadcastTo=function(t){return this.throwIfDisposed(),Ti(this,t)},vr().prototype.cast=function(t){return this.throwIfDisposed(),qs(this,t)};const zp=Jr({ceil_:function(t){const e={x:Yr(t,"x","ceil","float32")};return Wr.runKernel(Wt,e)}});vr().prototype.ceil=function(){return this.throwIfDisposed(),zp(this)},vr().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Ei(this,t,e)},vr().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof xr&&(t=[t]),Ci([this,...t],e)},vr().prototype.conv1d=function(t,e,n,a,r,s){return this.throwIfDisposed(),Oi(this,t,e,n,a,r,s)},vr().prototype.conv2dTranspose=function(t,e,n,a,r){return this.throwIfDisposed(),Li(this,t,e,n,a,r)},vr().prototype.conv2d=function(t,e,n,a,r,s){return this.throwIfDisposed(),Fi(this,t,e,n,a,r,s)},vr().prototype.cos=function(){return this.throwIfDisposed(),hp(this)},vr().prototype.cosh=function(){return this.throwIfDisposed(),pp(this)},vr().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),qd(this,t,e,n)},vr().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),$h(this,t,e,n)};const Pp=Jr({depthToSpace_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const a=Yr(t,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],s="NHWC"===n?a.shape[2]:a.shape[3],o="NHWC"===n?a.shape[3]:a.shape[1];A(e>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(e))),A(r*e>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(r," and ").concat(e,"  for depthToSpace with input shape\n    ").concat(a.shape))),A(s*e>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(s," and ").concat(e," for depthToSpace with input shape\n        ").concat(a.shape))),A(o%(e*e)===0,(()=>"Dimension size must be evenly divisible by ".concat(e*e," but is ").concat(o," for depthToSpace with input shape ").concat(a.shape)));const i={x:a},c={blockSize:e,dataFormat:n};return Wr.runKernel(ae,i,c)}});vr().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Pp(this,t,e)},vr().prototype.depthwiseConv2d=function(t,e,n,a,r,s){return this.throwIfDisposed(),Ui(this,t,e,n,a,r,s)};const Bp=Jr({dilation2d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const o=Yr(t,"x","dilation2d"),i=Yr(e,"filter","dilation2d");A(3===o.rank||4===o.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(o.rank,"."))),A(3===i.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(i.rank,"."))),A("NHWC"===s,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(s)));let c=o,l=!1;3===o.rank&&(c=xi(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0),A(c.shape[3]===i.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(c.shape[3]," vs ").concat(i.shape[2])));const u={x:c,filter:i},h={strides:n,pad:a,dilations:r},d=Wr.runKernel(ce,u,h);return l?xi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});vr().prototype.dilation2d=function(t,e,n,a,r){return this.throwIfDisposed(),Bp(this,t,e,n,a,r)};const Wp=Jr({divNoNan_:function(t,e){let n=Yr(t,"a","div"),a=Yr(e,"b","div");[n,a]=Dr(n,a);const r=Zs(n,a),s=no(r),o=Gi(a,s);return tl(o,s,r)}});vr().prototype.divNoNan=function(t){return this.throwIfDisposed(),Wp(this,t)},vr().prototype.div=function(t){return this.throwIfDisposed(),Zs(this,t)};const Up=Jr({dot_:function(t,e){const n=Yr(t,"t1","dot"),a=Yr(e,"t2","dot");A((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=1===n.rank?n.size:n.shape[1],s=1===a.rank?a.size:a.shape[0];if(A(r===s,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(r," and ").concat(s,"."))),1===n.rank&&1===a.rank){const t=xi(n,[1,-1]),e=xi(a,[-1,1]),r=fc(t,e);return xi(r,[])}if(1===n.rank&&2===a.rank){const t=xi(n,[1,-1]),e=xi(a,[a.shape[0],a.shape[1]]),r=fc(t,e);return xi(r,[r.size])}if(2===n.rank&&1===a.rank){const t=xi(a,[-1,1]),e=fc(n,t);return xi(e,[e.size])}{const t=xi(a,[a.shape[0],a.shape[1]]);return fc(n,t)}}});vr().prototype.dot=function(t){return this.throwIfDisposed(),Up(this,t)},vr().prototype.elu=function(){return this.throwIfDisposed(),Vi(this)},vr().prototype.equal=function(t){return this.throwIfDisposed(),Gi(this,t)};const Vp=Jr({erf_:function(t){let e=Yr(t,"x","erf");A("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=qs(e,"float32"));const n={x:e};return Wr.runKernel(me,n)}});vr().prototype.erf=function(){return this.throwIfDisposed(),Vp(this)};const Gp=Jr({euclideanNorm_:function(t){return $l(t,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});vr().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),Gp(this,t,e)},vr().prototype.exp=function(){return this.throwIfDisposed(),Hi(this)},vr().prototype.expandDims=function(t){return this.throwIfDisposed(),ji(this,t)};const Hp=Jr({expm1_:function(t){const e={x:Yr(t,"x","expm1")};return Wr.runKernel(xe,e)}});vr().prototype.expm1=function(){return this.throwIfDisposed(),Hp(this)},vr().prototype.fft=function(){return this.throwIfDisposed(),sl(this)},vr().prototype.flatten=function(){return this.throwIfDisposed(),xi(this,[this.size])},vr().prototype.floor=function(){return this.throwIfDisposed(),Xi(this)},vr().prototype.floorDiv=function(t){return this.throwIfDisposed(),Js(this,t)},vr().prototype.gather=function(t,e,n){return this.throwIfDisposed(),Yi(this,t,e,n)},vr().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Ji(this,t)},vr().prototype.greater=function(t){return this.throwIfDisposed(),Qi(this,t)},vr().prototype.ifft=function(){return this.throwIfDisposed(),il(this)},vr().prototype.irfft=function(){return this.throwIfDisposed(),cl(this)};const jp=Jr({isFinite_:function(t){const e={x:Yr(t,"x","isFinite")};return Wr.runKernel(Fe,e)}});vr().prototype.isFinite=function(){return this.throwIfDisposed(),jp(this)};const Kp=Jr({isInf_:function(t){const e={x:Yr(t,"x","isInf")};return Wr.runKernel(Oe,e)}});vr().prototype.isInf=function(){return this.throwIfDisposed(),Kp(this)};const qp=Jr({isNaN_:function(t){const e={x:Yr(t,"x","isNaN")};return Wr.runKernel(Me,e)}});vr().prototype.isNaN=function(){return this.throwIfDisposed(),qp(this)},vr().prototype.leakyRelu=function(t){return this.throwIfDisposed(),Zi(this,t)},vr().prototype.lessEqual=function(t){return this.throwIfDisposed(),Kl(this,t)},vr().prototype.less=function(t){return this.throwIfDisposed(),Ql(this,t)};const Xp=Jr({localResponseNormalization_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const s=Yr(t,"x","localResponseNormalization");A(4===s.rank||3===s.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(s.rank,"."))),A(L(e),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(e,".")));let o=s,i=!1;3===s.rank&&(i=!0,o=xi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const c={x:o},l={depthRadius:e,bias:n,alpha:a,beta:r},u=Wr.runKernel(je,c,l);return i?xi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});vr().prototype.localResponseNormalization=function(t,e,n,a){return this.throwIfDisposed(),Xp(this,t,e,n,a)};const Yp=Jr({logSigmoid_:function(t){const e=Yr(t,"x","logSigmoid"),n=ao((t=>({value:wc(Kc(wc(t))),gradFunc:e=>$s(e,Bc(wc(t)))})));return n(e)}});vr().prototype.logSigmoid=function(){return this.throwIfDisposed(),Yp(this)},vr().prototype.logSoftmax=function(t){return this.throwIfDisposed(),ac(this,t)},vr().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),dc(this,t,e)},vr().prototype.log=function(){return this.throwIfDisposed(),$i(this)},vr().prototype.log1p=function(){return this.throwIfDisposed(),tc(this)},vr().prototype.logicalAnd=function(t){return this.throwIfDisposed(),pc(this,t)},vr().prototype.logicalNot=function(){return this.throwIfDisposed(),op(this)};const Qp=Jr({logicalOr_:function(t,e){const n=Yr(t,"a","logicalOr","bool"),a=Yr(e,"b","logicalOr","bool");wo(n.shape,a.shape);const r={a:n,b:a};return Wr.runKernel(He,r)}});vr().prototype.logicalOr=function(t){return this.throwIfDisposed(),Qp(this,t)};const Jp=Jr({logicalXor_:function(t,e){const n=Yr(t,"a","logicalXor","bool"),a=Yr(e,"b","logicalXor","bool");return wo(n.shape,a.shape),pc(Qp(t,e),op(pc(t,e)))}});vr().prototype.logicalXor=function(t){return this.throwIfDisposed(),Jp(this,t)},vr().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),fc(this,t,e,n)},vr().prototype.maxPool=function(t,e,n,a){return this.throwIfDisposed(),mc(this,t,e,n,a)},vr().prototype.max=function(t,e){return this.throwIfDisposed(),ec(this,t,e)},vr().prototype.maximum=function(t){return this.throwIfDisposed(),ko(this,t)},vr().prototype.mean=function(t,e){return this.throwIfDisposed(),yc(this,t,e)},vr().prototype.min=function(t,e){return this.throwIfDisposed(),bc(this,t,e)},vr().prototype.minimum=function(t){return this.throwIfDisposed(),xc(this,t)};const Zp=Jr({mirrorPad_:function(t,e,n){A("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const a=Yr(t,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(e.length===a.rank,(()=>"Padding doesn't match input. Must be ".concat(a.rank,". ")+"Got ".concat(e.length,".")));const r="reflect"===n?1:0;for(let i=0;i<a.rank;i++)A(2===e[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),A(e[i][0]>=0&&e[i][0]<=a.shape[i]-r&&e[i][1]>=0&&e[i][1]<=a.shape[i]-r,(()=>"Padding in dimension ".concat(i," cannot be greater than or equal ")+"to ".concat(a.shape[i]-r," or less than 0 for input of ")+"shape ".concat(a.shape)));const s={paddings:e,mode:n},o={x:a};return Wr.runKernel(an,o,s)}});vr().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Zp(this,t,e)};const $p=Jr({mod_:function(t,e){let n=Yr(t,"a","mod"),a=Yr(e,"b","mod");[n,a]=Dr(n,a);const r={a:n,b:a};return Wr.runKernel(rn,r)}});vr().prototype.mod=function(t){return this.throwIfDisposed(),$p(this,t)},vr().prototype.mul=function(t){return this.throwIfDisposed(),$s(this,t)},vr().prototype.neg=function(){return this.throwIfDisposed(),wc(this)},vr().prototype.norm=function(t,e,n){return this.throwIfDisposed(),$l(this,t,e,n)},vr().prototype.notEqual=function(t){return this.throwIfDisposed(),kc(this,t)},vr().prototype.oneHot=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),Ic(this,t,e,n)},vr().prototype.onesLike=function(){return this.throwIfDisposed(),Tc(this)},vr().prototype.pad=function(t,e){return this.throwIfDisposed(),Ec(this,t,e)};const tf=Jr({pool_:function(t,e,n,a,r,s,o){null==r&&(r=[1,1]),null==s&&(s=1),0===a&&(a="valid");const i=Yr(t,"x","maxPool");let c=i,l=!1;3===i.rank&&(l=!0,c=xi(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(mi(s,r),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(r,"'")));const u=si(c.shape,e,s,r,a),h=[u.dilationHeight,u.dilationWidth];let d;d="same"===a?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))),a=n.map((t=>t-1)),r=a.map((t=>Math.floor(t/2))),s=a.map(((t,e)=>t-r[e]));return a.map(((t,e)=>[r[e],s[e]]))}([u.filterHeight,u.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(t,e,n){const a=n.map((t=>t[0])),r=n.map((t=>t[1])),s=t.concat(a,r),o=e.map(((t,e)=>(t-s[e]%t)%t)),i=r.map(((t,e)=>t+o[e])),c=e.map(((t,e)=>[a[e],i[e]])),l=e.map(((t,e)=>[0,o[e]]));return[c,l]}([u.inHeight,u.inWidth],h,d),g=p?a:"valid",y=p?c:zh(c,h,f),b=("avg"===n?()=>vi(y,e,s,g,o):()=>mc(y,e,s,g,o))(),x=p?b:bp(b,h,m);return l?xi(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});vr().prototype.pool=function(t,e,n,a,r,s){return this.throwIfDisposed(),tf(this,t,e,n,a,r,s)},vr().prototype.pow=function(t){return this.throwIfDisposed(),mo(this,t)},vr().prototype.prelu=function(t){return this.throwIfDisposed(),Cc(this,t)};const ef=Jr({prod_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=Yr(t,"x","prod");"bool"===a.dtype&&(a=qs(a,"int32"));const r={x:a},s={axis:e,keepDims:n};return Wr.runKernel(xn,r,s)}});vr().prototype.prod=function(t,e){return this.throwIfDisposed(),ef(this,t,e)};const nf=Jr({reciprocal_:function(t){const e={x:Yr(t,"x","reciprocal")};return Wr.runKernel(Nn,e)}});vr().prototype.reciprocal=function(){return this.throwIfDisposed(),nf(this)},vr().prototype.relu=function(){return this.throwIfDisposed(),Mc(this)},vr().prototype.relu6=function(){return this.throwIfDisposed(),ul(this)},vr().prototype.reshapeAs=function(t){return this.throwIfDisposed(),xi(this,t.shape)},vr().prototype.reshape=function(t){return this.throwIfDisposed(),xi(this,t)},vr().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Gl(this,t,e,n)},vr().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Hl(this,t,e,n)},vr().prototype.reverse=function(t){return this.throwIfDisposed(),Lc(this,t)},vr().prototype.rfft=function(){return this.throwIfDisposed(),ol(this)},vr().prototype.round=function(){return this.throwIfDisposed(),ql(this)},vr().prototype.rsqrt=function(){return this.throwIfDisposed(),ud(this)},vr().prototype.selu=function(){return this.throwIfDisposed(),zc(this)},vr().prototype.separableConv2d=function(t,e,n,a,r,s){return this.throwIfDisposed(),Pc(this,t,e,n,a,r,s)},vr().prototype.sigmoid=function(){return this.throwIfDisposed(),Bc(this)};const af=Jr({sign_:function(t){const e={x:Yr(t,"x","sign")};return Wr.runKernel(Hn,e)}});vr().prototype.sign=function(){return this.throwIfDisposed(),af(this)},vr().prototype.sin=function(){return this.throwIfDisposed(),Yh(this)},vr().prototype.sinh=function(){return this.throwIfDisposed(),Jh(this)},vr().prototype.slice=function(t,e){return this.throwIfDisposed(),Wc(this,t,e)},vr().prototype.softmax=function(t){return this.throwIfDisposed(),jc(this,t)},vr().prototype.softplus=function(){return this.throwIfDisposed(),Kc(this)},vr().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),zh(this,t,e)},vr().prototype.split=function(t,e){return this.throwIfDisposed(),qc(this,t,e)},vr().prototype.sqrt=function(){return this.throwIfDisposed(),to(this)},vr().prototype.square=function(){return this.throwIfDisposed(),eo(this)},vr().prototype.squaredDifference=function(t){return this.throwIfDisposed(),ru(this,t)},vr().prototype.squeeze=function(t){return this.throwIfDisposed(),Xc(this,t)},vr().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof xr?[this,t]:[this,...t];return Yc(n,e)},vr().prototype.step=function(t){return this.throwIfDisposed(),hl(this,t)};const rf=Jr({stridedSlice_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const l={x:Yr(t,"x","stridedSlice","string_or_numeric")},u={begin:e,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};return Wr.runKernel(oa,l,u)}});vr().prototype.stridedSlice=function(t,e,n,a,r,s,o,i){return this.throwIfDisposed(),rf(this,t,e,n,a,r,s,o,i)},vr().prototype.sub=function(t){return this.throwIfDisposed(),go(this,t)},vr().prototype.sum=function(t,e){return this.throwIfDisposed(),nc(this,t,e)};const sf=Jr({tan_:function(t){const e={x:Yr(t,"x","tan","float32")};return Wr.runKernel(ha,e)}});vr().prototype.tan=function(){return this.throwIfDisposed(),sf(this)},vr().prototype.tanh=function(){return this.throwIfDisposed(),Qc(this)},vr().prototype.tile=function(t){return this.throwIfDisposed(),Ki(this,t)},vr().prototype.toBool=function(){return this.throwIfDisposed(),qs(this,"bool")},vr().prototype.toFloat=function(){return this.throwIfDisposed(),qs(this,"float32")},vr().prototype.toInt=function(){return this.throwIfDisposed(),qs(this,"int32")};const of=Jr({topk_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=Yr(t,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(e<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(e));if(e>r)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(r,") ")+"but got ".concat(e));const s={x:a},o={k:e,sorted:n},[i,c]=Wr.runKernel(fa,s,o);return{values:i,indices:c}}});vr().prototype.topk=function(t,e){return this.throwIfDisposed(),of(this,t,e)},vr().prototype.transpose=function(t){return this.throwIfDisposed(),al(this,t)};const cf=Jr({unique_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Yr(t,"x","unique","string_or_numeric");A(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:e},[s,o]=Wr.runKernel(ya,a,r);return{values:s,indices:o}}});vr().prototype.unique=function(t){return this.throwIfDisposed(),cf(this,t)},vr().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),dd(this,t,e)},vr().prototype.unstack=function(t){return this.throwIfDisposed(),$c(this,t)},vr().prototype.where=function(t,e){return this.throwIfDisposed(),tl(t,this,e)},vr().prototype.zerosLike=function(){return this.throwIfDisposed(),no(this)};class lf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,lf.prototype)}}class uf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,uf.prototype)}}class hf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,hf.prototype)}}class df extends Error{constructor(t){super(t),Object.setPrototypeOf(this,df.prototype)}}class pf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,pf.prototype)}}class ff{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const t=this.cache.keys().next().value;this.cache.delete(t)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(t,"."));if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const t=this.cache.keys().next().value;this.cache.delete(t)}this.maxEntries=t}}function mf(t,e){if(Array.isArray(t)){let n=[];for(let a=0;a<e;a++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function gf(t,e){if(!t)throw new pf(e)}function yf(t,e){let n=0;for(const a of t)a===e&&n++;return n}function bf(t){return 1===t.length?t[0]:t}function xf(t){return Array.isArray(t)?t:[t]}function vf(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function wf(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let kf={};function If(t){if(null===t||void 0===t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Sf(t){if(null!=t&&"object"===typeof t)if(Array.isArray(t))t.forEach((t=>Sf(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"===typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!==typeof e.value?Sf(e):t[n]=e.value)}}}function Nf(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof t){const r=t;let s;if(r in n)s=n[r];else if(r in kf)s=kf[r];else if(s=e[r],null==s)throw new hf("Unknown ".concat(a,": ").concat(t,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=t;if(null==s.className||null==s.config)throw new hf("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(s),".\n")+"'className' and 'config' must set.");const o=s.className;let i,c;if(o in n?[i,c]=n[o]:o in kf?[i,c]=kf.className:o in e&&([i,c]=e[o]),null==i)throw new hf("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const t={};for(const n of Object.keys(kf))t[n]=kf[n];for(const r of Object.keys(n))t[r]=n[r];s.config.customObjects=t;const e=Object.assign({},kf);for(const r of Object.keys(n))kf[r]=n[r];Sf(s.config);const a=c(i,s.config,n,r);return kf=Object.assign({},e),a}{const t=Object.assign({},kf);for(const a of Object.keys(n))kf[a]=n[a];const e=new i(s.config);return kf=Object.assign({},t),e}}}function Tf(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function Ef(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Cf(t){if(null==t)throw new hf("Invalid value in obj: ".concat(JSON.stringify(t)));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Rf(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new hf("".concat(n," is not a valid ").concat(e,".  Valid values are ").concat(t," or null/undefined."))}function _f(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return gf(n>=0),gf(a>=n),Array.isArray(t)&&t.length>=n&&t.length<=a&&t.every((t=>typeof t===e))}function Af(t,e){Array.isArray(t)?(A(t.length>0,(()=>"".concat(e," is unexpectedly an empty array."))),t.forEach(((t,n)=>Af(t,"element ".concat(n+1," of ").concat(e))))):A(Number.isInteger(t)&&t>0,(()=>"Expected ".concat(e," to be a positive integer, but got ")+"".concat(Df(t),".")))}function Df(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>Df(t))).join(",")+"]":"string"===typeof t?'"'.concat(t,'"'):"".concat(t)}function Ff(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}let Of=0;function Mf(){return Of++}const Lf={};function zf(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return t in Lf||(Lf[t]=0),Lf[t]+=1,t+Lf[t].toString()}const Pf=["channelsFirst","channelsLast"],Bf=["nearest","bilinear"],Wf=["valid","same","causal"],Uf=["max","avg"],Vf=["sum","mul","concat","ave"],Gf=new Map;function Hf(t){Rf(Pf,"DataFormat",t)}function jf(t){Rf(Wf,"PaddingMode",t)}function Kf(t){Rf(Uf,"PoolMode",t)}const qf=[],Xf="/";function Yf(t,e){qf.push(t);try{const t=e();return qf.pop(),t}catch(n){throw qf.pop(),n}}function Qf(t){if(!$f(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===qf.length?"":qf.join(Xf)+Xf)+t}function Jf(t){if(!$f(t))throw new Error("Not a valid tensor name: '"+t+"'");Gf.has(t)||Gf.set(t,0);const e=Gf.get(t);if(Gf.set(t,Gf.get(t)+1),e>0){const n="".concat(t,"_").concat(e);return Gf.set(n,1),n}return t}const Zf=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function $f(t){return!!t.match(Zf)}function tm(t){return t===parseInt(t.toString(),10)}function em(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let a=1;for(let r=e;r<n;++r)a*=t[r];return a}function nm(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const a=t[n];a<e&&(e=a)}return e}function am(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const a=t[n];a>e&&(e=a)}return e}function rm(t,e){if(e<t)throw new hf("end (".concat(e,") < begin (").concat(t,") is forbidden."));const n=[];for(let a=t;a<e;++a)n.push(a);return n}let sm;function om(){return null==sm&&(sm=cs().epsilon()),sm}function im(t,e){return qs(t,e)}function cm(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),xi(t,n)}function lm(t,e,n){return rs((()=>{switch(t.rank){case 1:return Uc(t,e,n);case 2:return Vc(t,[e,0],[n,t.shape[1]]);case 3:return Gc(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Hc(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Wc(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Wc(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new hf("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function um(t,e,n){return rs((()=>{switch(t.rank){case 1:return Uc(t,e,n);case 2:return Vc(t,[0,e],[t.shape[0],n]);case 3:return Gc(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Hc(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new hf("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function hm(t,e,n,a){return rs((()=>{switch(t.rank){case 1:return Uc(t,e,n);case 2:switch(a){case 1:return lm(t,e,n);case 2:return um(t,e,n);default:throw new hf("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return lm(t,e,n);case 2:return Gc(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return um(t,e,n);default:throw new hf("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return lm(t,e,n);case 2:return Hc(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Hc(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return um(t,e,n);default:throw new hf("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new hf("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function dm(t){let e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(e=t[0].rank,n=0!==e?e:0),n===t[0].rank&&(n=-1),Ci(t,n)}function pm(t,e){switch(t.rank){case 1:return Ri([t,e]);case 2:return _i([t,e],0);case 3:return Ai([t,e],0);case 4:return Di([t,e],0);default:throw new hf("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(t.rank))}}function fm(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new hf("The length of input n (".concat(e.length,") does not match ")+"the number of dimensions in input x (".concat(t.rank,")"));return Ki(t,e)}function mm(t){return Dc(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function gm(t,e,n,a){if(t.rank<2||e.rank<2)throw new df("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(t.shape," and y shape = ").concat(e.shape));if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new df("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(t.shape," and ")+" y shape = ".concat(e.shape))}if(2===t.rank&&2===e.rank){return xl({a:t,b:e,transposeA:!1,transposeB:!1,bias:a?xm(t.rank,a,"channelsLast"):null,activation:n})}{const r=t.shape.slice(),s=r.pop();t=xi(t,[-1,s]);const o=e.shape.slice(),i=o.pop(),c=o.pop(),l=[...o,i],u=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=xi(al(e,u),[c,-1]);const h=[...r,...l];return xi(xl({a:t,b:e,transposeA:!1,transposeB:!1,bias:a?xm(t.rank,a,"channelsLast"):null,activation:n}),h)}}function ym(t,e,n){return rs((()=>(e=Array.isArray(e)?Jc(e,"int32"):qs(e,"int32"),Yi(t,e,n))))}function bm(t){return $s(t,t)}function xm(t,e,n){const a=e.shape;if(1!==e.rank&&e.rank!==t)throw new hf("Unexpected bias dimensions: ".concat(e.rank)+"; expected it to be 1 or ".concat(t));if(5===t){if("channelsFirst"===n)return 1===a.length?xi(e,[1,a[0],1,1,1]):xi(e,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?xi(e,[1,1,1,1,a[0]]):xi(e,[1].concat(a))}else if(4===t){if("channelsFirst"===n)return 1===a.length?xi(e,[1,a[0],1,1]):xi(e,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?xi(e,[1,1,1,a[0]]):xi(e,[1].concat(a))}else if(3===t){if("channelsFirst"===n)return 1===a.length?xi(e,[1,a[0],1]):xi(e,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?xi(e,[1,1,a[0]]):xi(e,[1].concat(a))}else if(t<3)return e;throw new hf("Unsupported input rank by biasAdd: ".concat(e.rank))}function vm(t,e,n){return rs((()=>(null==n&&(n="channelsLast"),Hf(n),Qs(t,xm(t.rank,e,n)))))}function wm(t,e,n,a){return rs((()=>rl(t,e,n,a)))}function km(t,e){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?t():e()}const Im=["fanIn","fanOut","fanAvg"],Sm=["normal","uniform","truncatedNormal"];class Nm extends io{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Tm extends Nm{apply(t,e){return Sc(t,e)}}Tm.className="Zeros",lo(Tm);class Em extends Nm{apply(t,e){return Nc(t,e)}}Em.className="Ones",lo(Em);class Cm extends Nm{constructor(t){if(super(),"object"!==typeof t)throw new hf("Expected argument of type ConstantConfig but got ".concat(t));if(void 0===t.value)throw new hf("config must have value set but got ".concat(t));this.value=t.value}apply(t,e){return rs((()=>$s(ro(this.value),Nc(t,e))))}getConfig(){return{value:this.value}}}Cm.className="Constant",lo(Cm);class Rm extends Nm{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Fc(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Rm.className="RandomUniform",lo(Rm);class _m extends Nm{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new df("randomNormal does not support dType ".concat(e,"."));return mm(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}_m.className="RandomNormal",lo(_m);class Am extends Nm{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new df("truncatedNormal does not support dType ".concat(e,"."));return Zc(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Am.className="TruncatedNormal",lo(Am);class Dm extends Nm{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return rs((()=>{if(2!==t.length||t[0]!==t[1])throw new hf("Identity matrix initializer can only be used for 2D square matrices.");return $s(this.gain,qi(t[0]))}))}getConfig(){return{gain:this.gain}}}Dm.className="Identity",lo(Dm);class Fm extends Nm{constructor(t){if(super(),t.scale<0)throw new hf("scale must be a positive float. Got: ".concat(t.scale));var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Rf(Im,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Rf(Sm,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t){let e,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Hf(a),2===t.length)e=t[0],n=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===a){const a=em(t,2);e=t[1]*a,n=t[0]*a}else if("channelsLast"===a){const a=em(t,0,t.length-2);e=t[t.length-2]*a,n=t[t.length-1]*a}}else{const a=em(t);e=Math.sqrt(a),n=Math.sqrt(a)}return[e,n]}(t),a=n[0],r=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new df("".concat(this.getClassName()," does not support dType ").concat(e,"."));return Zc(t,0,n,e,this.seed)}{const n=Math.sqrt(3*s);return Fc(t,-n,n,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Fm.className="VarianceScaling",lo(Fm);class Om extends Fm{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Fm.className}}Om.className="GlorotUniform",lo(Om);class Mm extends Fm{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Fm.className}}Mm.className="GlorotNormal",lo(Mm);class Lm extends Fm{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Fm.className}}Lm.className="HeNormal",lo(Lm);class zm extends Fm{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Fm.className}}zm.className="HeUniform",lo(zm);class Pm extends Fm{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Fm.className}}Pm.className="LeCunNormal",lo(Pm);class Bm extends Fm{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Fm.className}}Bm.className="LeCunUniform",lo(Bm);class Wm extends Nm{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return rs((()=>{if(t.length<2)throw new df("Shape must be at least 2D.");if("int32"!==e&&"float32"!==e&&void 0!==e)throw new TypeError("Unsupported data type ".concat(e,"."));const n=O(t.slice(0,-1)),a=t[t.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(r,") elements: ")+"Slowness may result.");const s=mm([Math.max(a,n),Math.min(a,n)],0,1,e,this.seed),o=ou.qr(s,!1);let i=o[0];const c=o[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return i=$s(i,c.sign()),n<a&&(i=i.transpose()),$s(ro(this.gain),i.reshape(t))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Wm.className="Orthogonal",lo(Wm);const Um={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Vm(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Nf(t,co.getMap().classNameMap,e,"initializer")}function Gm(t){return If(t)}function Hm(t){if("string"===typeof t){const e=t in Um?Um[t]:t;if("GlorotNormal"===e)return new Mm;if("GlorotUniform"===e)return new Om;if("HeNormal"===e)return new Lm;if("HeUniform"===e)return new zm;if("LeCunNormal"===e)return new Pm;if("LeCunUniform"===e)return new Bm;{const t={};return t.className=e,t.config={},Vm(t)}}return t instanceof Nm?t:Vm(t)}function jm(t){return Array.isArray(t)&&Array.isArray(t[0])}function Km(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function qm(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new hf("Expected Tensor length to be 1; got ".concat(t.length));e=t[0]}else e=t;return e}function Xm(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new hf("Expected exactly 1 Shape; got ".concat(t.length))}return t}function Ym(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}const Qm="Variable";class Jm{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Qm,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Mf(),n=null==n?Qm:n,this.originalName=Qf(n),this.name=Jf(this.originalName),this.trainable_=a,this.constraint=r,this.val=function(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Wr.makeVariable(t,e,n,a)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Zm(t){return t.map((t=>t.read()))}function $m(t){t.forEach((t=>{t[0].write(t[1])}))}class tg{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class eg{constructor(t,e,n,a,r,s,o){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=Mf(),null!=s&&(this.originalName=Qf(s),this.name=Jf(this.originalName)),this.rank=e.length}}let ng=0;class ag{constructor(t,e){this.callArgs=e,this.id=ng++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let rg=0;class sg extends io{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=rg++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=vf(t)+"_"+zf(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new uf("The layer has never been called "+"and thus has no defined ".concat(e,"."));if(this.inboundNodes.length<=t)throw new hf("Asked to get ".concat(e," at node ").concat(t,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[t]}getInputAt(t){return bf(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return bf(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new lf("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new lf("Layer ".concat(this.name)+" is not connected, no input to return.");return bf(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new lf("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new lf("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return bf(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=xf(t);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=xf(this.inputSpec);if(e.length!==n.length)throw new hf("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(e.length," input tensors. ")+"Input received: ".concat(t));for(let a=0;a<e.length;a++){const t=e[a],r=n[a];if(null==r)continue;const s=t.rank;if(null!=r.ndim&&s!==r.ndim)throw new hf("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(s));if(null!=r.maxNDim&&s>r.maxNDim)throw new hf("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(s));if(null!=r.minNDim&&s<r.minNDim)throw new hf("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(s,"."));if(null!=r.dtype&&t.dtype!==r.dtype)throw new hf("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(t.dtype,"."));if(r.axes){const e=t.shape;for(const t in r.axes){const n=Number(t),s=r.axes[t],o=n>=0?e[n]:e[e.length+n];if(null!=s&&-1===[s,null].indexOf(o))throw new hf("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(s," but got shape ").concat(e,"."))}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const n=r.shape[e],s=t.shape[e];if(null!=n&&null!=s&&n!==s)throw new hf("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(t.shape,"."))}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=xf(t),a=function(t){let e=!0;for(const n of xf(t))if(!(n instanceof eg)){e=!1;break}return e}(t),r=function(t){let e=!0;for(const n of xf(t))if(n instanceof eg){e=!1;break}return e}(t);if(a===r)throw new hf("Arguments to apply() must be all SymbolicTensors or all Tensors");return Yf(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of xf(t))e.push(n.shape);this.build(bf(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let a=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,a);const r=xf(a),s=[];for(let t of r)-1!==n.indexOf(t)&&(t=t.clone()),s.push(t);if(a=bf(s),null!=this.activityRegularizer)throw new df("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(t){t=xf(t);const e=[];for(const n of t)e.push(n.shape);return bf(e)}(t),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new eg(s,n,this,xf(t),e,this.name,a))):new eg(s,a,this,xf(t),e,this.name),this.addInboundNode(t,r,null,null,n,a,e),this._refCount++,null!=this.activityRegularizer)throw new df("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(t),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let e=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=t[a]&&t[a]!==n&&(e=!0)})),e&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(t),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new lf("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new lf("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new uf("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Ym(this.weights)}build(t){this.built=!0}getWeights(){return Zm(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(t){rs((()=>{const e=this.weights;if(e.length!==t.length)throw new hf('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(t.length,", ")+"but the layer was expecting ".concat(e.length," weights. ")+"Provided weights: ".concat(t,"..."));if(0===e.length)return;const n=[],a=Zm(e);for(let r=0;r<a.length;++r){const s=a[r],o=e[r],i=t[r];if(!M(s.shape,i.shape))throw new hf("Layer weight shape ".concat(s.shape," ")+"not compatible with provided weight shape ".concat(i.shape));n.push([o,i])}$m(n)}))}addWeight(t,e,n,a,r,s,o,i){if(-1!==this._addedWeightNames.indexOf(t))throw new hf("Duplicate weight name ".concat(t," for layer ").concat(this.name));this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():Hm("zeros"));const c=a.apply(e,n),l=new Jm(c,n,t,s,o);return c.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=xf(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");e.forEach((t=>{if(null!=t)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return e}setMaskMetadata(t,e,n){if(!this.supportsMasking)return;const a=this.computeMask(t,n),r=xf(e),s=xf(a);if(r.length!==s.length)throw new Error("".concat(this.name," outputs ").concat(r.length," tensors ")+"but ".concat(r.length," masks for those tensors"));for(let o=0;o<r.length;o++)r[o].kerasMask=s[o]}addInboundNode(t,e,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=xf(t);e=xf(e),n=xf(n),a=xf(a),r=Km(r),s=Km(s);const c=[],l=[],u=[];for(const h of i)c.push(h.sourceLayer),l.push(h.nodeIndex),u.push(h.tensorIndex);new ag({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:e,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},o);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let t=0;return 0===--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function og(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const a=og(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of a)-1===e.indexOf(t)&&e.push(t)}return e}}}class ig extends sg{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:zf("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new hf("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new hf("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new hf("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const a=new eg(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new ag({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new hf("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}ig.className="InputLayer",lo(ig);class cg{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof cg)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new hf("Duplicate key: name=".concat(t.name,", id=").concat(t.id));return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return qs(e,t.dtype)}catch(JX){throw new hf("The dtype of the feed (".concat(e.dtype,") can not be cast to the dtype ")+"of the key '".concat(t.name,"' (").concat(t.dtype,")."))}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof eg){if(null==this.id2Value[t.id])throw new hf("Nonexistent key: ".concat(t.name));return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new hf("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Value[e]}}getMask(t){if(t instanceof eg){if(null==this.id2Value[t.id])throw new hf("Nonexistent key: ".concat(t.name));return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new hf("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&ss(this.id2Mask)}}const lg=new ff,ug=new ff;function hg(t,e,n,a){const r=null!=n&&n.training,s=Array.isArray(t),o=s?t:[t],i=o.map((t=>t.name)),c=[],l=e.names();for(const f of i)-1!==l.indexOf(f)?c.push(e.getValue(f)):c.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const u=i.join(",")+"|"+e.names().sort().join(",");let h,d=lg.get(u);if(null==d){const t=function(t,e){A(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===t.length){const r=pg(t[0],e);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of t){const{sorted:t,recipientMap:o}=pg(s,e);for(const e of t)r.has(e.name)||(n.push(e),r.add(e.name));for(const e in o)null==a[e]&&(a[e]=new Set),o[e].forEach((t=>a[e].add(t)))}}return{sorted:n,recipientCounts:dg(a)}}(o,e);d=t.sorted,h=t.recipientCounts,lg.put(u,d),ug.put(u,h)}h={},r||Object.assign(h,ug.get(u));const p=new cg(e);for(let f=0;f<d.length;++f){if(null!=a){const t=as().numTensors;t>a.maxNumTensors&&(a.maxNumTensors=t),t<a.minNumTensors&&(a.minNumTensors=t)}const t=d[f],s=t.sourceLayer;if(s instanceof ig)continue;const o=[],l=[],u=[];let m=!1;for(const n of t.inputs){const t=p.getValue(n),a=p.getMask(n);o.push(t),l.push(a),null!=a&&(m=!0),r||(h[n.name]--,0!==h[n.name]||e.hasKey(n)||-1!==i.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||u.push(t))}m&&((n=n||{}).mask=l[0]);const g=xf(s.apply(o,n));let y=null;s.supportsMasking&&(y=s.computeMask(o,l));const b=fg(t),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=i.indexOf(x[e].name);-1!==t&&(c[t]=g[e])}r||ss(u)}return p.disposeMasks(),s?c:c[0]}function dg(t){const e={};for(const n in t)e[n]=t[n].size;return e}function pg(t,e){const n=new Set,a=[],r={};for(const i of e.names())n.add(i);const s=[],o=[];for(s.push(t);s.length>0;){const t=s[s.length-1];if(n.has(t.name)){s.pop();continue}const e=o[o.length-1]===s.length-1;if(0===t.inputs.length||e)s.pop(),a.push(t),n.add(t.name),e&&o.pop();else{o.push(s.length-1);for(const e of t.inputs)null==r[e.name]&&(r[e.name]=new Set),r[e.name].add(t.name),n.has(e.name)||s.push(e)}}return{sorted:a,recipientMap:r}}function fg(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const a of t.sourceLayer.inboundNodes[e].outputTensors)if(a.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}function mg(t,e){return rs((()=>to(nc($s(t,t),e,!0))))}ht().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(t){null!=lg&&lg.setMaxEntries(t),null!=ug&&ug.setMaxEntries(t)}));class gg extends io{getConfig(){return{}}}class yg extends gg{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return rs((()=>{const e=mg(t,this.axis),n=Ei(e,0,this.maxValue);return $s(t,Zs(n,Qs(om(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}yg.className="MaxNorm",lo(yg);class bg extends gg{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return rs((()=>Zs(t,Qs(om(),mg(t,this.axis)))))}getConfig(){return{axis:this.axis}}}bg.className="UnitNorm",lo(bg);class xg extends gg{apply(t){return Mc(t)}}xg.className="NonNeg",lo(xg);class vg extends gg{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return rs((()=>{const e=mg(t,this.axis),n=Qs($s(this.rate,Ei(e,this.minValue,this.maxValue)),$s(1-this.rate,e));return $s(t,Zs(n,Qs(om(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}vg.className="MinMaxNorm",lo(vg);const wg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function kg(t){return If(t)}function Ig(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Nf(t,co.getMap().classNameMap,e,"constraint")}function Sg(t){if(null==t)return null;if("string"===typeof t){return Ig({className:t in wg?wg[t]:t,config:{}})}return t instanceof gg?t:Ig(t)}async function Ng(t){if(null==t)return;const e=[],n=[],a=[];for(const r in t){const s=t[r];if("number"!==typeof s){const t=s;e.push(t.data()),n.push(r),a.push(t)}}if(e.length>0){const r=await Promise.all(e);for(let e=0;e<r.length;++e)t[n[e]]=r[e][0];ss(a)}}function Tg(t){if(null!=t)for(const e in t){const n=t[e];"number"!==typeof n&&n.dispose()}}var Eg;!function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(Eg||(Eg={}));class Cg{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Rg{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class _g extends Cg{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const a in e){const t=e[a];if("number"===typeof t)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+t*n;else{let e;a in this.totals?e=this.totals[a]:this.totals[a]=0;const r=rs((()=>Qs(this.totals[a],$s(t,n))));this.totals[a]=r,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?e[n]=this.totals[n]/this.seen:rs((()=>{const t=$s(Zs(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),os(e[n])})))}}class Ag extends Cg{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const o=a[s];t.push(o.data()),e.push(r),n.push(s)}}const a=await Promise.all(t);for(let r=0;r<a.length;++r){this.history[e[r]][n[r]].dispose(),this.history[e[r]][n[r]]=a[r][0]}}}class Dg extends Cg{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||lu,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");X(this.yieldEvery)&&(this.maybeWait=function(t,e,n){let a,r=null!=n?n():$a();return function(){const s=null!=n?n():$a();return s-r<e||(r=s,a=t(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const a=[];null!=this.yield&&(await Ng(n),a.push(this.yield(t,e,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await Ng(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await Ng(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await Ng(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await Ng(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):X(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await Ng(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await Ng(t),await this.trainEnd(t))}}function Fg(t,e){if(null==t&&(t={}),t instanceof Cg)return[t];if(Array.isArray(t)&&t[0]instanceof Cg)return t;return xf(t).map((t=>new Dg(t,e)))}class Og{constructor(){}static registerCallbackConstructor(t,e){A(t>=0&&Number.isInteger(t),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(t))),Og.checkForDuplicate(e),null==Og.constructors[t]&&(Og.constructors[t]=[]),Og.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Og.constructors){Og.constructors[+e].forEach((e=>{if(e===t)throw new hf("Duplicate callback constructor.")}))}}static clear(){Og.constructors={}}static createCallbacks(t){const e=[];for(const n in Og.constructors){const a=+n;t>=a&&e.push(...Og.constructors[a])}return e.map((t=>new t))}}function Mg(t,e,n,a,r,s,o,i,c){const l=new Ag,u=[new _g,...Og.createCallbacks(e)];null!=t&&u.push(...t),u.push(l);const h=new Rg(u);return h.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:o,verbose:e,doValidation:i,metrics:c}),{callbackList:h,history:l}}function Lg(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Nf(t,co.getMap().classNameMap,e,"layer",n)}function zg(t,e){return rs((()=>{"float32"!==t.dtype&&(t=qs(t,"float32"));const n=nc(bm(t),e,!0),a=po(n.shape,om()),r=to(ko(n,a));return Zs(t,r)}))}function Pg(t,e){return rs((()=>yc(bm(go(e,t)),-1)))}function Bg(t,e){return rs((()=>yc(bo(go(e,t)),-1)))}function Wg(t,e){return rs((()=>{const n=go(t,e),a=Ei(bo(t),om(),Number.MAX_VALUE),r=bo(Zs(n,a));return $s(100,yc(r,-1))}))}function Ug(t,e){return rs((()=>{const n=Ei(e,om(),Number.MAX_VALUE),a=$i(Qs(1,n)),r=Ei(t,om(),Number.MAX_VALUE),s=$i(Qs(1,r));return yc(bm(go(a,s)),-1)}))}function Vg(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return rs((()=>{if(n)e=jc(e);else{const t=nc(e,e.shape.length-1,!0);e=Zs(e,t)}return e=Ei(e,om(),1-om()),wc(nc($s(qs(t,"float32"),$i(e)),e.shape.length-1))}))}function Gg(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return rs((()=>{const a=qs(Xi(function(t){const e=[em(t.shape)];return xi(t,e)}(t)),"int32"),r=(e=Ei(e,om(),1-om())).shape;return Vg(xi(Ic(a,r[r.length-1]),r),e,n)}))}function Hg(t,e){return rs((()=>{let n;return n=Ei(e,om(),1-om()),n=$i(Zs(n,go(1,n))),yc(function(t,e){if(!M(t.shape,e.shape))throw new hf("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(t.shape)," and ").concat(JSON.stringify(e.shape)));return rs((()=>{const n=Mc(e),a=wc(bo(e));return Qs(go(n,$s(e,t)),tc(Hi(a)))}))}(t,n),-1)}))}function jg(t,e){return rs((()=>{const n=Ei(t,om(),1),a=Ei(e,om(),1);return nc($s(t,$i(Zs(n,a))),-1)}))}function Kg(t,e){return rs((()=>{const n=zg(t,-1),a=zg(e,-1),r=$s(n,a);return wc(nc(r,-1))}))}Og.constructors={};const qg={meanSquaredError:Pg,meanAbsoluteError:Bg,meanAbsolutePercentageError:Wg,meanSquaredLogarithmicError:Ug,squaredHinge:function(t,e){return rs((()=>{const n=ko(0,go(1,$s(t,e)));return yc(bm(n),-1)}))},hinge:function(t,e){return rs((()=>{const n=ko(0,go(1,$s(t,e)));return yc(n,-1)}))},categoricalHinge:function(t,e){return rs((()=>{const n=nc($s(t,e),-1),a=ec($s(go(1,t),e),-1);return ko(0,Qs(1,go(a,n)))}))},logcosh:function(t,e){return rs((()=>{const n=Math.log(2),a=go(e,t),r=go(Qs(a,Kc($s(-2,a))),n);return yc(r,-1)}))},categoricalCrossentropy:Vg,sparseCategoricalCrossentropy:Gg,binaryCrossentropy:Hg,kullbackLeiblerDivergence:jg,poisson:function(t,e){return rs((()=>{const n=$i(Qs(om(),e));return yc(go(e,$s(t,n)),-1)}))},cosineProximity:Kg};function Xg(t){if("string"===typeof t){if(t in qg)return qg[t];let e="Unknown loss ".concat(t);throw t.toLowerCase().includes("softmaxcrossentropy")&&(e="Unknown loss ".concat(t,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new hf(e)}return t}function Yg(t,e){return rs((()=>{const n=$s(.5,Tc(e)),a=im(Qi(e,n),t.dtype);return yc(Gi(t,a),-1)}))}function Qg(t,e){return rs((()=>im(Gi(ai(t,-1),ai(e,-1)),"float32")))}function Jg(t,e){return rs((()=>qs(nc(pc(Gi(t,1),Gi(e,1))),"float32")))}function Zg(t,e){return Hg(t,e)}function $g(t,e){return t.rank===e.rank&&(t=Xc(t,[t.rank-1])),(e=ai(e,-1)).dtype!==t.dtype&&(e=qs(e,t.dtype)),qs(Gi(t,e),"float32")}const ty=Vg,ey=Gg,ny={binaryAccuracy:Yg,categoricalAccuracy:Qg,precision:function(t,e){return rs((()=>{const n=Jg(t,e),a=function(t,e){return rs((()=>qs(nc(pc(Gi(t,0),Gi(e,1))),"float32")))}(t,e),r=Qs(n,a);return qs(tl(Qi(r,0),Zs(n,r),0),"float32")}))},categoricalCrossentropy:ty,sparseCategoricalCrossentropy:ey,mse:Pg,MSE:Pg,mae:Bg,MAE:Bg,mape:Wg,MAPE:Wg,cosine:Kg};function ay(t){if("string"===typeof t&&t in ny)return ny[t];if("string"!==typeof t&&null!=t)return t;throw new hf("Unknown metric ".concat(t))}function ry(t){if(gf(null!==t,"Unknown LossOrMetricFn ".concat(t)),"string"===typeof t)return t;{let e;for(const n of Object.keys(qg))if(qg[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(ny))if(ny[n]===t){e=n;break}return void 0!==e?e:t.name}}const sy=1048576;function oy(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t||"object"!==typeof t||Object.getPrototypeOf(t)!==Object.prototype||!iy(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>sy&&console.warn('User-defined metadata of model "'.concat(e,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(sy,"."))}}function iy(t){if(null===t)return!0;if("object"===typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!==typeof n)return!1;if(!iy(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!iy(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function cy(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(t){let e=!0;const n=[],a=[];for(const r in t.nodesByDepth)n.push(t.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){e=!1;break}a.push(...r)}if(e)for(const r of t.layers){let t=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),s=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(r?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!r){s.push("Receives inputs"),o=[];for(const e in t.nodesByDepth)o.push(...t.nodesByDepth[e])}a("_".repeat(e)),ly(s,n,a),a("=".repeat(e));const i=t.layers;for(let u=0;u<i.length;++u)r?uy(i[u],n,a):hy(i[u],n,o,a),a((u===i.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const c=function(t){let e;e=null!=t.collectedTrainableWeights?Ym(t.collectedTrainableWeights):Ym(t.trainableWeights);return e}(t),l=Ym(t.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(e))}function ly(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<t.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=t[r],a=a.slice(0,e[r]),a+=" ".repeat(e[r]-a.length);n(a)}function uy(t,e,n){let a,r;try{r=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(JX){r="multiple"}try{a=JSON.stringify(t.outputShape)}catch(JX){a="multiple"}const s=t.name,o=t.getClassName();ly(["".concat(s," (").concat(o,")"),r,a,t.countParams().toString()],e,n)}function hy(t,e,n,a){let r,s;try{s=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(JX){s="multiple"}try{r=JSON.stringify(t.outputShape)}catch(JX){r="multiple"}const o=[];for(const u of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(let t=0;t<u.inboundLayers.length;++t){const e=u.inboundLayers[t].name,n=u.nodeIndices[t],a=u.tensorIndices[t];o.push("".concat(e,"[").concat(n,"][").concat(a,"]"))}const i=t.name,c=t.getClassName(),l=0===o.length?"":o[0];ly(["".concat(i," (").concat(c,")"),s,r,t.countParams().toString(),l],e,a);for(let u=1;u<o.length;++u)ly(["","","","",o[u]],e,a)}function dy(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"===typeof n}function py(t,e){if(null===t)return null;if("string"===typeof t)return wf(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],a=t.length;for(let r=0;r<a;++r){const a=t[r];dy(e,r,a)?n.push(a):n.push(py(a,e))}return n}{const e={};for(const n of Object.keys(t)){const a=t[n];if("name"===n&&"string"===typeof a)e[n]=a;else{const t=wf(n);e[t]=py(a,t)}}return e}}function fy(t,e){if(null===t||void 0===t)return null;if("string"===typeof t)return vf(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],a=t.length;for(let r=0;r<a;++r){const a=t[r];dy(e,r,a)?n.push(a):n.push(fy(a,e))}return n}{const e={};for(const n of Object.keys(t)){const a=t[n],r=vf(n);e[r]="name"!==n&&"className"!==n||"string"!==typeof a?fy(a,n):a}return e}}const my="4.15.0";class gy extends sg{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=zf(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Ef(this.inputs).length!==this.inputs.length)throw new hf("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((t=>t.name))));Ef(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((t=>t.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const t=y.sourceLayer,e=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const t=y.sourceLayer,e=y.nodeIndex,n=y.tensorIndex;gf(0===e,"input layer has >1 nodes"),gf(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const e=this.inputLayers[y];if(!(e instanceof ig))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(t.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(e.getClassName(),"."));this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},a={},r={},s={},o=[],i=(t,e,n,a,r,c)=>{null!=a&&null!=r&&null!=c||(a=t.sourceLayer,r=t.nodeIndex,c=t.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new uf("The tensor ".concat(t.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==e.indexOf(l))return;this.containerNodes.add(gy.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let s=0;s<u;s++){const t=l.inputTensors[s],a=l.inboundLayers[s],r=l.nodeIndices[s],o=l.tensorIndices[s];i(t,e,n,a,r,o)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},c=[],l=[];for(const y of this.outputs)i(y,c,l);const u=o.slice().reverse();for(const y of u){n[y.id]=y,y.id in e||(e[y.id]=0);let t=e[y.id];const s=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];t=Math.max(t,s),a[y.outboundLayer.id]=t,r[y.outboundLayer.id]=y.outboundLayer,e[y.id]=t;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],s=y.nodeIndices[a],o=r.inboundNodes[s],i=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(t+1,i),n[o.id]=o}}const h={};for(const y in e){const t=e[y];t in h||(h[t]=[]),h[t].push(n[y])}const d={};for(const y in a){const t=a[y];t in d||(d[t]=[]),d[t].push(r[y])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(Tf);this.layers=[];for(const y of p){const t=d[y];t.sort(((t,e)=>{const n=s[t.id],a=s[e.id];return n<a?-1:n>a?1:0}));for(const e of t)e instanceof gy&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((t=>parseInt(t,10))).sort(Tf);const f=this.inputs.slice(),m=[];for(const y of p)for(const t of h[y]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new uf("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(e.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const y of g){const t=g.filter((t=>t===y)).length;if(1!==t)throw new uf('The name "'.concat(y,'" is used ').concat(t," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new ag({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new hf("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const r=(t=>{const e=Object.keys(t);if(0===e.length)return!1;const n=e[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(t);r&&this.parseWeights(t);for(const o of this.layers)for(const[t,e]of o.weights.entries()){const s=r?"".concat(e.name.split("/").slice(0,-1).join("/")+"/").concat(t):e.originalName;if(null!=n[s])throw new hf("Duplicate weight name: ".concat(s));n[s]=e,a++}const s=[];for(const o in t){let a=o;if(null==n[o]){const t=o.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])s.push([n[a],t[o]]);else if(e)throw new hf("Provided weight data has no target variable: ".concat(o));delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new hf("".concat(t.length," of ").concat(a," weights are not set: ")+"".concat(t))}$m(s)}parseWeights(t){for(const e in Object.keys(t)){const n=e.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map((t=>t.startsWith("_")?t.slice(1):t)).filter((t=>!a.includes(t))).join("/");r!==e&&(t[r]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers ".concat(my),e.backend="TensorFlow.js",e}toJSON(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=fy(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return rs((()=>{t=xf(t);const n=new cg;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return hg(this.outputs,n,e)}))}computeMask(t,e){return rs((()=>{let n;return t=xf(t),n=null==e?mf(null,t.length):xf(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=Km(t);if(e.length!==this.inputLayers.length)throw new hf("Invalid inputShape argument ".concat(t,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<e.length;o++){const t=this.inputLayers[o],a=e[o];n[t.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Tf);if(a.length>1)for(const o of a){const t=this.nodesByDepth[o];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(t.id))continue;const a=[];for(let o=0;o<e.inboundLayers.length;o++){const t=e.inboundLayers[o],r=e.nodeIndices[o],s=e.tensorIndices[o],i=n["".concat(t.name,"_").concat(r,"_").concat(s)];a.push(i)}const r=Km(t.computeOutputShape(bf(a))),s=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++){n["".concat(t.name,"_").concat(s,"_").concat(e)]=r[e]}}}const r=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const t=this.outputLayers[o],e=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(t.name,"_").concat(e,"_").concat(n);s.push(a)}for(let o=0;o<s.length;o++){const t=s[o];gf(t in n),r.push(n[t])}return bf(r)}runInternalGraph(t,e){null==e&&(e=mf(null,t.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=t[i],s=e[i];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Tf);for(const i of a){const t=this.nodesByDepth[i];for(const e of t){const t=e.outboundLayer,a=e.inputTensors,r=e.outputTensors,s=new Array;for(const e of a)e.id in n&&s.push(n[e.id]);if(s.length===a.length){let a,o,i,c,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),i=xf(t.call(e,l)),c=xf(t.computeMask(e,n)),a=[e],o=[n]}else a=s.map((t=>t[0])),o=s.map((t=>t[1])),null==l.mask&&(l.mask=o),i=xf(t.call(a,l)),c=xf(t.computeMask(a,o));if(t.activityRegularizer)throw new df("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<r.length;++t){const e=r[t],a=i[t],s=c[t];n[e.id]=[a,s]}}}}const r=[],s=[],o=[];for(const i of this.outputs){gf(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[t,e]=n[i.id];o.push(t.shape),r.push(t),s.push(e)}return[r,s,o]}buildNodeConversionMap(t){const e={};let n;for(const a of this.layers){n=a instanceof gy?1:0;for(let t=0;t<a.inboundNodes.length;t++){const r=gy.nodeKey(a,t);this.containerNodes.has(r)&&(e[r]=n,n+=1)}}return e}getLayer(t,e){if(null!=e)return this.findLayer(e);if(null==t)throw new hf("Provide either a layer name or layer index");if("number"===typeof t)return this.findLayer(t);for(const n of this.layers)if(n.name===t)return n;throw new hf("No such layer: ".concat(t))}findLayer(t){if(this.layers.length<=t)throw new hf("Was asked to retrieve layer at index ".concat(t,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[t]}calculateLosses(){return rs((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const a=gy.nodeKey(e,n);this.containerNodes.has(a)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const t=s.getClassName(),a=s.getConfig(),r=[];for(let n=0;n<s.inboundNodes.length;n++){const t=s.inboundNodes[n],a=gy.nodeKey(s,n);let o={};if(this.containerNodes.has(a)){if(t.callArgs)try{JSON.stringify(t.callArgs),o=t.callArgs}catch(JX){console.warn("Layer ".concat(s.name," was passed ")+"non-serializable keyword arguments: "+"".concat(t.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),o={}}if(t.inboundLayers.length>0){const n=[];for(let a=0;a<t.inboundLayers.length;a++){const r=t.inboundLayers[a],s=t.nodeIndices[a],i=t.tensorIndices[a];let c=e[gy.nodeKey(r,s)];null==c&&(c=0),n.push([r.name,c,i,o])}r.push(n)}}}const o={};o.name=s.name,o.className=t,o.config=a,o.inboundNodes=r,n.push(o)}t.layers=n;const a=[];for(let s=0;s<this.inputLayers.length;s++){const t=this.inputLayers[s],n=this.inputLayersNodeIndices[s],r=gy.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let o=e[r];null!==o&&void 0!==o||(o=0);const i=this.inputLayersTensorIndices[s];a.push([t.name,o,i])}t.inputLayers=a;const r=[];for(let s=0;s<this.outputLayers.length;s++){const t=this.outputLayers[s],n=this.outputLayersNodeIndices[s],a=gy.nodeKey(t,n);if(!this.containerNodes.has(a))continue;let o=e[a];null!==o&&void 0!==o||(o=0);const i=this.outputLayersTensorIndices[s];r.push([t.name,o,i])}return t.outputLayers=r,t}static fromConfig(t,e){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function s(t,e){t.name in r?r[t.name].push(e):r[t.name]=[e]}function o(t,e){const n=[];let r;for(const o of e){const i=o[0],c=o[1],l=o[2];if(r=null==o[3]?{}:o[3],!(i in a))return void s(t,e);const u=a[i];if(u.inboundNodes.length<=c)return void s(t,e);const h=u.inboundNodes[c];n.push(h.outputTensors[l])}n.length>0&&t.apply(bf(n),r)}function i(t){const r=t.name,o=Lg(t,null!=e.customObjects?e.customObjects:{});o.setFastWeightInitDuringBuild(n),a[r]=o;t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new hf("Corrupted configuration, expected array for nodeData: ".concat(t));s(o,t)}))}const c=e.name,l=e.layers;for(const f of l)i(f);for(;!Cf(r);)for(const t of l){const e=a[t.name];if(e.name in r){const t=r[e.name];delete r[e.name];for(const n of t)o(e,n)}}const u=[],h=[],d=e.inputLayers;for(const f of d){const t=f[0],e=f[1],n=f[2];gf(t in a);const r=a[t].inboundNodes[e].outputTensors;u.push(r[n])}const p=e.outputLayers;for(const f of p){const t=f[0],e=f[1],n=f[2];gf(t in a);const r=a[t].inboundNodes[e].outputTensors;h.push(r[n])}return new t({inputs:u,outputs:h,name:c})}get stateful(){if(this._stateful)throw new hf("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){rs((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function yy(t,e,n){const a=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===a)return Array.isArray(t)&&1===t.length?t:"object"===typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(t.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return t}if("object"===typeof t&&Object.keys(t).length>0&&"object"===typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(e," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(t)))}function by(t,e){return yy(t,e,"classWeight")}async function xy(t,e,n,a){if(null!=e||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=rs((()=>{if(1===t.shape.length)return Xs(t);if(2===t.shape.length){if(t.shape[1]>1){return ai(t,1)}if(1===t.shape[1])return xi(t,[t.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(t.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(t.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await e.data());ss(e);const r=[];return a.forEach((t=>{if(null==n[t])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(t," exists in the data but not in ")+"classWeight");r.push(n[t])})),Jc(r,"float32")}return null}function vy(t,e){return $s(t,e)}function wy(t,e){let n,a;const r=e;n=r.xs,a=r.ys,A(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(e)));const s=ky("input",t.inputNames,n),o=ky("output",t.outputNames,a),i=s[0].shape[0];A(s.length===t.inputs.length,(()=>"LayersModel has ".concat(t.inputs.length," inputs, but the dataset ")+"provides ".concat(s.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(t.inputNames),")"))),A(o.length===t.outputs.length,(()=>"LayersModel has ".concat(t.outputs.length," outputs, but the dataset ")+"provides ".concat(o.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(t.outputNames),")")));for(let c=0;c<s.length;c++)A(s[c].shape[0]===i,(()=>"Batch size mismatch: input "+"".concat(t.inputNames[c]," has ").concat(s[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(t.inputNames[0],".")));for(let c=0;c<o.length;c++)A(o[c].shape[0]===i,(()=>"Batch size mismatch: output "+"".concat(t.outputNames[c]," has ").concat(o[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(t.inputNames[0],".")));return{xs:s,ys:o}}function ky(t,e,n){if(n instanceof xr)return[n];if(Array.isArray(n))return A(n.length===e.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(e.length," to match the ").concat(t," keys ").concat(e,"."))),n;{const a=[];for(const r of e){if(null==n[r])throw new hf("The feature data generated by the dataset lacks the required "+"".concat(t," key '").concat(r,"'."));a.push(n[r])}return a}}async function Iy(t,e,n){const a=null!=n.batchesPerEpoch;if(A(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),A(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),A(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),A(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),A(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const r=null!=n.validationData;let s,o;if(r)if(Sy(n.validationData))A(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const t=function(t){if(3===t.length)throw new df("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);s=t.xs,o=t.ys}const i=t.makeTrainFunction(),c=t.getDedupedMetricsNames();let l;l=r?c.slice().concat(c.map((t=>"val_"+t))):c.slice();const u=Fg(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Mg(u,h,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,r,l);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let u=0,h=0;for(a||(m=await e.iterator());!a||u<n.batchesPerEpoch;){const e=await m.next();if(a&&e.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(u," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:a,ys:r}=wy(t,e.value),s={};s.batch=h,s.size=a[0].shape[0],await d.onBatchBegin(h,s);const o=[];if(null!=n.classWeight){const e=by(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)o.push(await xy(r[t],null,e[t]))}const l=a.concat(r).concat(o),p=i(l);ss(l);for(let t=0;t<c.length;++t){const e=c[t],n=p[t];s[e]=n,os(n)}await d.onBatchEnd(h,s),Tg(s),h++,u++}if(a?u>=n.batchesPerEpoch:e.done){if(r){let e;e=Sy(n.validationData)?xf(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):xf(t.evaluate(s,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)l["val_".concat(t.metricsNames[n])]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function Sy(t){return"function"===typeof t.iterator}function Ny(t){A(t>0&&Number.isInteger(t),(()=>"batchSize is required to be a positive integer, but got ".concat(t)))}function Ty(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>lm(t,e,n-e))):lm(t,e,n-e)}function Ey(t,e){return rs((()=>null==t?null:Array.isArray(t)?t.map((t=>Ey(t,e))):ym(t,"int32"===e.dtype?e:qs(e,"int32"))))}function Cy(t,e){const n=[];let a=0,r=null;for(;a<t;)r=a+e,r>=t&&(r=t),n.push([a,r]),a=r;return n}function Ry(t){const e=[];t instanceof xr&&(t=[t]);for(let n=0;n<t.length;++n){const a=t[n];if(1===a.rank)e.push(cm(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(a)}}return e}function _y(t,e){if(null==t)return;const n=[];if(e instanceof xr)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const r in e){const t=e[r];n.push(t.id)}const a=[];if(t instanceof xr)-1===n.indexOf(t.id)&&a.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&a.push(t)}));else if(null!=t)for(const r in t){const e=t[r];-1===n.indexOf(e.id)&&a.push(e)}a.forEach((t=>{t.isDisposed||t.dispose()}))}function Ay(t){return Array.isArray(t)}function Dy(t){return!function(t){return t instanceof xr}(t)&&!Ay(t)}function Fy(t,e,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==e||0===e.length){if(null!=t){let e=!1;if(Ay(t)&&t.length>0)e=!0;else if(Dy(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new hf("Error when checking model ".concat(s," expected no data, ")+"but got ".concat(t))}return[]}if(null==t)return e.map((t=>null));if(Dy(t)){a=[];for(const n of e){if(null==t[n])throw new hf('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(e));a.push(t[n])}}else if(Ay(t)){if(t.length!==e.length)throw new hf("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(e.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(t));a=t}else{if(e.length>1)throw new hf("The model ".concat(s," expects ").concat(e.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(t.shape));a=[t]}if(a=Ry(a),null!=n)for(let o=0;o<e.length;++o){if(null==n[o])continue;const t=a[o];if(t.shape.length!==n[o].length)throw new hf("Error when checking ".concat(s,": expected ").concat(e[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(t.shape));for(let e=0;e<n[o].length;++e){if(0===e&&!r)continue;const a=t.shape[e],i=n[o][e];if(null!=i&&i>=0&&a!==i)throw new hf("".concat(s," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(s," received an input with ").concat(t.shape[0])+" examples, each with shape [".concat(t.shape.slice(1,t.shape.length),"]")+" (tensor shape [".concat(t.shape,"])"))}}return a}function Oy(t,e,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(t)){if(t.length!==e.length)throw new hf("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(e.length," Tensor(s),")+" but instead got ".concat(t.length," Tensors(s)."));a=t}else{if(e.length>1)throw new hf("The model expects ".concat(e.length," ").concat(s," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(t.shape),"."));a=[t]}if(null!=n)for(let o=0;o<e.length;++o){if(null==n[o])continue;const t=a[o];if(t.shape.length!==n[o].length)throw new hf("Error when checking ".concat(s,": expected ").concat(e[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(t.shape)));for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=t.shape[a],c=n[o][a];if(null!=c&&c!==i)throw new hf("Error when checking ".concat(s,": expected ")+"".concat(e[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(t.shape),"."))}}}class My extends gy{constructor(t){super(t),this.isTraining=!1}summary(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new hf("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");cy(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"===typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>iu.adagrad(.01),Adadelta:()=>iu.adadelta(1,.95,om()),Adam:()=>iu.adam(.001,.9,.999,om()),Adamax:()=>iu.adamax(.002,.9,.999,om(),0),RMSProp:()=>iu.rmsprop(.001,.9,0,om()),SGD:()=>iu.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new hf("Unknown Optimizer ".concat(t))}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof uo))throw new hf("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"===typeof t.loss||"function"===typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new hf("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(t.loss,"."));const n=t.loss;e=n.map((t=>Xg(t)))}else{const n=Xg(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new hf('Unknown entry in loss dictionary: "'.concat(e,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==t.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),e.push(Xg(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const t=this.internalOutputShapes[s],e=this.outputNames[s];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Yf("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const a=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"===typeof t||"function"===typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!==typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(t));n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const a of e){let e=n.hasOwnProperty(a)?n[a]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),r=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Yf("metric",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,a,s;for(const o of e){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const e=this.internalOutputShapes[t];let r;1===e[e.length-1]||this.lossFunctions[t]===Hg?-1!==["accuracy","acc"].indexOf(o)?a=Yg:-1!==["crossentropy","ce"].indexOf(o)&&(a=Zg):this.lossFunctions[t]===Gg?-1!==["accuracy","acc"].indexOf(o)?a=$g:-1!==["crossentropy","ce"].indexOf(o)&&(a=ey):-1!==["accuracy","acc"].indexOf(o)?a=Qg:-1!==["crossentropy","ce"].indexOf(o)&&(a=ty),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),s=a,n=""+r}else{const t=ay(o);s=t,n=""+ry(o)}let e;Yf(n,(()=>{e=s})),r(t,n,e)}})(a[t])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;Ny(a);const r=this.standardizeUserDataXY(t,e,!0,a);try{const t=r[0].concat(r[1]);this.makeTestFunction();const e=this.testFunction;return bf(this.testLoop(e,t,a,n.verbose,n.steps))}finally{_y(r[0],t),_y(r[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const a=null!=(n=n||{}).batches,r=t.testFunction;let s=[];if(n.verbose>0)throw new df("Verbose mode is not implemented yet.");A(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const o="function"===typeof e.next?e:await e.iterator();let i=0,c=0;for(;!a||c<n.batches;){const e=await o.next();if(s=rs((()=>{if(e.value){const{xs:n,ys:a}=wy(t,e.value),o=n.concat(a),l=rs((()=>r(o)));if(ss(o),0===c)for(let t=0;t<l.length;++t)s.push(ro(0));const u=o[0].shape[0];for(let t=0;t<l.length;++t){const e=l[t],n=s[t];s[t]=rs((()=>Qs(s[t],$s(u,e)))),c>0&&ss(n)}ss(l),i+=u,++c}return s})),e.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<s.length;++l){const t=s[l];s[l]=Zs(s[l],i),ss(t)}return bf(s)}(this,t,e)}checkNumSamples(t,e,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=e)throw new hf("If ".concat(r," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(e))}else{if(null==t)throw new hf("Either the input data should have a defined shape, or "+"".concat(r," shoud be specified."));a=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return a}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new hf("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),a=n?e:[e],r=this.retrieveSymbolicTensors(a),s=new cg;if(t instanceof xr&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new hf("The number of inputs provided (".concat(t.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let e=0;e<this.inputs.length;++e)s.add(this.inputs[e],t[e])}else for(const i of this.inputs){const e=t[i.name];if(null==e)throw new hf("No value is provided for the model's input ".concat(i.name));s.add(i,e)}const o=hg(r,s);return n?o:o[0]}retrieveSymbolicTensors(t){const e=mf(null,t.length);let n=t.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((t=>t.name));for(let a=0;a<t.length;++a){const o=s.indexOf(t[a]);if(-1!==o&&(e[a]=r[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,a)=>{null==e&&n.push(t[a])})),new hf("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return e}predictLoop(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return rs((()=>{const a=this.checkNumSamples(t);if(n)throw new df("Verbose predictLoop() is not implemented yet.");const r=Cy(a,e),s=this.outputs.map((t=>[]));for(let e=0;e<r.length;++e){rs((()=>{const n=r[e][0],a=r[e][1],s=Ty(t,n,a),o=[];if(Array.isArray(s))for(let t=0;t<s.length;++t)o.push({key:this.inputs[t],value:s[t]});else o.push({key:this.inputs[0],value:s});const i=new cg(o);return hg(this.outputs,i)})).forEach(((t,e)=>s[e].push(t)))}return bf(s.map((t=>Ci(t,0))))}))}predict(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=Ry(t);Oy(n,this.inputNames,this.feedInputShapes,!1);try{const t=null==e.batchSize?32:e.batchSize;return Ny(t),this.predictLoop(n,t)}finally{_y(n,t)}}predictOnBatch(t){Oy(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new uf("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const t=this.feedOutputShapes[r];this.feedLossFns[r]===Gg?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(t,e,n){const a=Ef(t.map((t=>t.shape[0])));a.sort();const r=Ef(e.map((t=>t.shape[0])));if(r.sort(),a.length>1)throw new hf("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((t=>t.shape)))));if(r.length>1)throw new hf("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((t=>t.shape)))));if(a.length>0&&r.length>0&&!M(a,r))throw new hf("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(a[0]," input sample(s) and ").concat(r[0]," target ")+"sample(s).")}(t=Fy(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Fy(e,this.feedOutputNames,a,!1,"target")),function(t,e,n){const a=[Pg,Hg,Vg];for(let r=0;r<t.length;++r){const s=t[r],o=e[r],i=n[r];if(null!=o){if(o===Vg&&1===s.shape[s.shape.length-1])throw new hf("You are passing a target array of shape ".concat(s.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const t=s.shape.slice(1),e=i.slice(1);for(let n=0;n<t.length;++n){const a=t[n],r=e[n];if(null!=r&&a!==r)throw new hf("A target Tensor with shape ".concat(s.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&t[0].shape[0]%n!==0)throw new hf("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(t[0].shape[0]," sample(s)."));return[t,e]}async standardizeUserData(t,e,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(t,e,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const t=by(a,this.outputNames);c=[];for(let e=0;e<t.length;++e)c.push(await xy(i[e],null,t[e]))}return[o,i,c]}testLoop(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return rs((()=>{const s=this.checkNumSamples(e,n,r,"steps"),o=[];if(a>0)throw new df("Verbose mode is not implemented yet.");if(null!=r)throw new df("steps mode in testLoop() is not implemented yet");{const a=Cy(s,n),r=Jc(rm(0,s));for(let n=0;n<a.length;++n){const s=a[n][0],i=a[n][1],c=lm(r,s,i-s),l=Ey(e,c),u=t(l);if(0===n)for(let t=0;t<u.length;++t)o.push(ro(0));for(let t=0;t<u.length;++t){const e=u[t];o[t]=Qs(o[t],$s(i-s,e))}}for(let t=0;t<o.length;++t)o[t]=Zs(o[t],s)}return o}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const a=t[n];let r=a;if(yf(t,a)>1){const e=yf(t.slice(0,n),a);r+="_".concat(e)}e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],o=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const o=new cg(t),i=hg(this.outputs,o,{training:!0});let c;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(a[n],i[n]);null!=r[n]&&(t=vy(t,r[n]));const s=yc(t);e.push(s),c=0===n?t:Qs(c,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],r=this.metricsTensors[n][1];t=yc(e(a[r],i[r]))}os(t),s.push(t)}return c=yc(c),this.calculateLosses().forEach((t=>{c=Qs(c,t)})),c}),!0,o)].concat(s)}}makeTestFunction(){this.testFunction=t=>rs((()=>{const e=[];let n;const a=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let t=0;t<this.inputs.length;++t)s.push({key:this.inputs[t],value:a[t]});const o=new cg(s),i=hg(this.outputs,o);for(let t=0;t<this.lossFunctions.length;++t){const a=this.lossFunctions[t],s=yc(a(r[t],i[t]));n=0===t?s:Qs(n,s),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],a=this.metricsTensors[t][1],s=yc(n(r[a],i[a]));e.push(s)}return e}))}async fit(t,e){let n,a,r,s,o,i,c,l,u,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const d=null==h.batchSize?32:h.batchSize;Ny(d);const p=!1,f=await this.standardizeUserData(t,e,h.sampleWeight,h.classWeight,p,d);n=f[0],a=f[1],u=f[2];let m,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new df("validationData including sample weights is not supported yet."):new hf("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(h.validationData," is invalid."));o=h.validationData[0],i=h.validationData[1];const t=!0,e=await this.standardizeUserData(o,i,null,null,t,d);c=e[0],l=e[1],m=c.concat(l)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const t=Math.floor(n[0].shape[0]*(1-h.validationSplit)),e=n[0].shape[0];c=Ty(n,t,e),r=n,n=Ty(n,0,t),l=Ty(a,t,e),s=a,a=Ty(a,0,t),m=c.concat(l)}else null!=h.validationSteps&&(g=!0);const y=n.concat(a).concat(u);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let v,w;g?(this.makeTestFunction(),v=this.testFunction,w=x.slice().concat(x.map((t=>"val_"+t)))):(v=null,m=[],w=x.slice());const k=Fg(h.callbacks,h.yieldEvery);return await this.fitLoop(b,y,x,d,h.epochs,h.verbose,k,v,m,h.shuffle,w,h.initialEpoch,null,null)}finally{this.isTraining=!1,_y(n,t),_y(a,e),_y(r,t),_y(s,e),_y(c,o),_y(l,i),null!=u&&ss(u)}}async fitLoop(t,e,n,a,r,s,o,i,c,l,u,h,d,p){null==a&&(a=32),null==r&&(r=1),null==l&&(l=!0),null==h&&(h=0);let f=!1;if(null!=i&&null!=c&&(f=!0),null!=p&&(f=!0,null==d))throw new hf("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(e,a,d,"steps_per_epoch");let g;null!=m&&(g=rm(0,m)),null==s&&(s=1);const{callbackList:y,history:b}=Mg(o,s,r,h,m,d,a,f,u);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<r;++x){await y.onEpochBegin(x);const r={};if(null!=d)throw new df("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new df("batch shuffling is not implemneted yet");l&&E(g);const s=Jc(g),o=Cy(m,a);for(let l=0;l<o.length;++l){const u={};if(await y.onBatchBegin(l,u),rs((()=>{const h=o[l][0],d=o[l][1],p=lm(s,h,d-h);u.batch=l,u.size=d-h;const m=Ey(e,p),g=t(m);for(let t=0;t<n.length;++t){const e=n[t],a=g[t];u[e]=a,os(a)}if(l===o.length-1&&f){const t=this.testLoop(i,c,a);for(let e=0;e<n.length;++e){const a=n[e],s=t[e];os(s),r["val_"+a]=s}}})),await y.onBatchEnd(l,u),Tg(u),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(x,r),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return Iy(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),o=[];for(const i of s){const t=await i.data();o.push(t[0])}return ss(s),_y(n[0],t),_y(n[1],e),bf(o)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||e.push({name:a[s].originalName,tensor:r[s]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=as().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-as().numTensors}return t}getLossIdentifiers(){let t;if("string"===typeof this.loss)t=vf(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!==typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>vf(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const a of e){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");t[a]=vf(n[a])}}return t}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[vf(ry(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>vf(ry(t))));{const t={};for(const e in this.metrics)t[e]=vf(ry(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Lg(py(t.optimizer_config));let n,a;if("string"===typeof t.loss)n=wf(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>wf(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=wf(t.loss[e])}if(Array.isArray(t.metrics))a=t.metrics.map((t=>wf(t)));else if(null!=t.metrics){a={};for(const e in t.metrics)a[e]=wf(t.metrics[e])}this.compile({loss:n,metrics:a,optimizer:e})}async save(t,e){if("string"===typeof t){const e=(n=t,bs.getSaveHandlers(n));if(0===e.length)throw new hf("Cannot find any save handlers for URL '".concat(t,"'"));if(e.length>1)throw new hf("Found more than one (".concat(e.length,") save handlers for ")+"URL '".concat(t,"'"));t=e[0]}var n;if(null==t.save)throw new hf("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const a=await us(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(my),convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:n}=await us(await this.optimizer.getWeights(),t);a.specs.push(...n),a.data=(s=[a.data,e],es.join(s))}var s;if(null!=this.userDefinedMetadata){const t=!0;oy(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=a.data,r.weightSpecs=a.specs,t.save(r)}setUserDefinedMetadata(t){oy(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}My.className="Model",lo(My);class Ly extends My{}Ly.className="Functional",lo(Ly);class zy extends My{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:zf("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new hf("Negative dimension size caused by adding layer "+"".concat(t.name," with input shape [")+"".concat(t.inboundNodes[0].inputTensors[0].shape,"]"))}add(t){const e=t instanceof zy||t instanceof My;let n;if(e){if(n=t,1!==n.outputs.length)throw new hf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new hf("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new hf("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new hf("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new ig({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new hf("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(t.name," ")+"which has ".concat(t.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==t.inboundNodes[0].outputTensors.length)throw new hf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=og(this.outputs[0])}this.inboundNodes=[],new ag({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:mf(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Xm(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new My({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new uf("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new uf("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new uf("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new uf("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new hf("Legacy serialization format not supported yet.");n=e}else A(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=e.layers,delete e.layers,r=e;const s=new t(r);if(!(s instanceof zy))throw new df("Sequential.fromConfig called on non-Sequential input: ".concat(s));for(const o of n){const t=Lg(o,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),s.add(t)}return s}set stopTraining(t){if(null==this.model)throw new hf("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new hf("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}zy.className="Sequential",lo(zy);class Py extends io{getConfig(){return{}}}class By extends Py{apply(t){return function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==e)throw new df("Support for alpha values other than 1 (".concat(e,") is not implemented ")+"yet.");return Vi(t)}(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}By.className="elu",lo(By);class Wy extends Py{apply(t){return zc(t)}}Wy.className="selu",lo(Wy);class Uy extends Py{apply(t){return Mc(t)}}Uy.className="relu",lo(Uy);class Vy extends Py{apply(t){return rs((()=>xc(6,Mc(t))))}}Vy.className="relu6",lo(Vy);class Gy extends Py{apply(t){return t}}Gy.className="linear",lo(Gy);class Hy extends Py{apply(t){return Bc(t)}}Hy.className="sigmoid",lo(Hy);class jy extends Py{apply(t){return function(t){return rs((()=>{const e=Qs(.5,$s(.2,t));return Ei(e,0,1)}))}(t)}}jy.className="hardSigmoid",lo(jy);class Ky extends Py{apply(t){return Kc(t)}}Ky.className="softplus",lo(Ky);class qy extends Py{apply(t){return function(t){return rs((()=>Zs(t,Qs(bo(t),1))))}(t)}}qy.className="softsign",lo(qy);class Xy extends Py{apply(t){return Qc(t)}}Xy.className="tanh",lo(Xy);class Yy extends Py{apply(t){return jc(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Yy.className="softmax",lo(Yy);class Qy extends Py{apply(t){return ac(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Qy.className="logSoftmax",lo(Qy);class Jy extends Py{apply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return rs((()=>$s(Bc($s(t,e)),t)))}}Jy.className="swish",lo(Jy);class Zy extends Py{apply(t){return rs((()=>$s(t,Qc(Kc(t)))))}}function $y(t){return t.getClassName()}function tb(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Nf(t,co.getMap().classNameMap,e,"activation")}function eb(t){if(null==t){const t={className:"linear",config:{}};return tb(t)}if("string"===typeof t){const e={};return e.className=t,e.config={},tb(e)}return t instanceof Py?t:tb(t)}function nb(t){if(null!=t&&"object"!==typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(t))}Zy.className="mish",lo(Zy);class ab extends io{}class rb extends ab{constructor(t){super(),nb(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return rs((()=>{let e=Sc([1]);return this.hasL1&&(e=Qs(e,nc($s(this.l1,bo(t))))),this.hasL2&&(e=Qs(e,nc($s(this.l2,bm(t))))),xi(e,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}rb.className="L1L2",lo(rb);const sb={l1l2:"L1L2"};function ob(t){return If(t)}function ib(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Nf(t,co.getMap().classNameMap,e,"regularizer")}function cb(t){if(null==t)return null;if("string"===typeof t){return ib({className:t in sb?sb[t]:t,config:{}})}return t instanceof ab?t:ib(t)}class lb extends sg{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=qm(t);let n=Mc(t);return null!=this.maxValue&&(n=Ei(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}lb.className="ReLU",lo(lb);class ub extends sg{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=qm(t);return Zi(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}ub.className="LeakyReLU",lo(ub);class hb extends sg{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Hm(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=cb(t.alphaRegularizer),this.alphaConstraint=Sg(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!==typeof t.sharedAxes)throw new hf("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(t.sharedAxes));this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Xm(t)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)e[a-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<t.length;++a)n[a]=t[a];this.inputSpec=[new tg({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=qm(t),Cc(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Gm(this.alphaInitializer),alphaRegularizer:ob(this.alphaRegularizer),alphaConstraint:kg(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}hb.className="PReLU",lo(hb);class db extends sg{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new df("Non-default alpha value (".concat(t.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=qm(t);return Vi(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}db.className="ELU",lo(db);class pb extends sg{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=qm(t);return $s(n,qs(Qi(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}pb.className="ThresholdedReLU",lo(pb);class fb extends sg{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Yy).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){return rs((()=>{let n=qm(t);const a=e.mask;if(null!=a){const t=$s(go(Nc(n.shape),qs(a,n.dtype)),ro(-1e9));n=Qs(n,t)}return this.axis instanceof Array?this.axis.length>1?Hi(go(n,dc(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function mb(t,e,n){if("number"===typeof t)return mf(t,e);if(t.length!==e)throw new hf("The ".concat(n," argument must be an integer or tuple of ").concat(e," integers.")+" Received: ".concat(t.length," elements."));for(let a=0;a<e;++a){const r=t[a];if(!tm(r))throw new hf("The ".concat(n," argument must be an integer or tuple of ").concat(e)+" integers. Received: ".concat(JSON.stringify(t)," including a")+" non-integer number ".concat(r))}return t}function gb(t,e,n,a){if(null==t)return t;let r;return r="same"===n?t:t-(e+(e-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+a-1)/a)}function yb(t,e,n,a){if(null==t)return null;if("valid"===a)t=t*e+am([n-e,0]);else{if("same"!==a)throw new hf("Unsupport padding mode: ".concat(a,"."));t*=e}return t}function bb(t,e){return rs((()=>(Hf(e),"channelsFirst"===e?al(t,[0,2,3,1]):t)))}function xb(t,e){return rs((()=>(Hf(e),"channelsFirst"===e?al(t,[0,2,3,4,1]):t)))}function vb(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return rs((()=>{if(null==s&&(s="channelsLast"),Hf(s),3!==t.shape.length)throw new hf("The input of a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead."));if(3!==e.shape.length)throw new hf("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new hf("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(e.shape.length," instead"));if("channelsFirst"===s&&(t=al(t,[0,2,1])),"causal"===r)throw new df("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Oi(t,e,a,"same"===r?"same":"valid","NWC",o);return null!=n&&(i=vm(i,n)),i}))}function wb(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return rs((()=>{if(null==s&&(s="channelsLast"),Hf(s),3!==t.rank&&4!==t.rank)throw new hf("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));if(3!==e.rank&&4!==e.rank)throw new hf("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));let c=bb(t,s);if("causal"===r)throw new df("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=gl({x:c,filter:e,strides:a,pad:"same"===r?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===s&&(c=al(c,[0,3,1,2])),c}))}function kb(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;return rs((()=>{if(null==s&&(s="channelsLast"),Hf(s),4!==t.rank&&5!==t.rank)throw new hf("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(t.rank,"."));if(4!==e.rank&&5!==e.rank)throw new hf("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(t.rank,"."));let i=xb(t,s);if("causal"===r)throw new df("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=zi(i,e,a,"same"===r?"same":"valid","NDHWC",o),null!=n&&(i=vm(i,n)),"channelsFirst"===s&&(i=al(i,[0,4,1,2,3])),i}))}fb.className="Softmax",lo(fb);class Ib extends sg{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ib.verifyArgs(e),this.rank=t,Af(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new df("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=mb(e.kernelSize,t,"kernelSize"),this.strides=mb(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,jf(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Hf(this.dataFormat),this.activation=eb(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Hm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Sg(e.biasConstraint),this.biasRegularizer=cb(e.biasRegularizer),this.activityRegularizer=cb(e.activityRegularizer),this.dilationRate=mb(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new hf("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new hf("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new hf("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(t){if(gf("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!==typeof t.kernelSize&&!_f(t.kernelSize,"number",1,3))throw new hf("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(t.kernelSize),"."))}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:$y(this.activation),useBias:this.useBias,biasInitializer:Gm(this.biasInitializer),biasRegularizer:ob(this.biasRegularizer),activityRegularizer:ob(this.activityRegularizer),biasConstraint:kg(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Sb extends Ib{constructor(t,e){super(t,e),this.kernel=null,Sb.verifyArgs(e),this.filters=e.filters,Af(this.filters,"filters"),this.kernelInitializer=Hm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Sg(e.kernelConstraint),this.kernelRegularizer=cb(e.kernelRegularizer)}build(t){t=Xm(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new hf("The channel dimension of the input should be defined. "+"Found ".concat(t[e]));const n=t[e],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return rs((()=>{let e;t=qm(t);const n=null==this.bias?null:this.bias.read(),a=Ff(this.activation.getClassName());if(null!=a&&2===this.rank)e=wb(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)e=vb(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=wb(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new df("convolutions greater than 3D are not implemented yet.");e=kb(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=Xm(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let r=0;r<n.length;++r){const t=gb(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);e.push(t)}let a=[t[0]];return"channelsLast"===this.dataFormat?(a=a.concat(e),a.push(this.filters)):(a.push(this.filters),a=a.concat(e)),a}getConfig(){const t={filters:this.filters,kernelInitializer:Gm(this.kernelInitializer),kernelRegularizer:ob(this.kernelRegularizer),kernelConstraint:kg(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!==typeof t.filters||t.filters<1)throw new hf("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(t.filters)))}}class Nb extends Sb{constructor(t){super(2,t),Nb.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!_f(t.kernelSize,"number",1,2))throw new hf("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(t.kernelSize),"."))}}Nb.className="Conv2D",lo(Nb);class Tb extends Sb{constructor(t){super(3,t),Tb.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new hf("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(t.kernelSize),"."))}}Tb.className="Conv3D",lo(Tb);class Eb extends Nb{constructor(t){if(super(t),this.inputSpec=[new tg({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new hf("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(t){if(4!==(t=Xm(t)).length)throw new hf("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new hf("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new tg({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return rs((()=>{let e=qm(t);if(4!==e.shape.length)throw new hf("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(e.shape.length));const n=e.shape,a=n[0];let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const o=n[r],i=n[s],c=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],h=this.strides[1],d=[a,yb(o,u,c,this.padding),yb(i,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=al(e,[0,2,3,1]));let p=Li(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=al(p,[0,3,1,2])),null!=this.bias&&(p=vm(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=Xm(t)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return e[n]=this.filters,e[a]=yb(e[a],i,s,this.padding),e[r]=yb(e[r],c,o,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Eb.className="Conv2DTranspose",lo(Eb);class Cb extends Tb{constructor(t){if(super(t),this.inputSpec=[new tg({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new hf("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(t){if(5!==(t=Xm(t)).length)throw new hf("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new hf("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new tg({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return rs((()=>{let e=qm(t);if(5!==e.shape.length)throw new hf("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(e.shape.length));const n=e.shape,a=n[0];let r,s,o;"channelsFirst"===this.dataFormat?(o=2,r=3,s=4):(o=1,r=2,s=3);const i=n[o],c=n[r],l=n[s],u=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,yb(i,p,u,this.padding),yb(c,f,h,this.padding),yb(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=al(e,[0,2,3,4,1]));let y=Bi(e,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=al(y,[0,4,1,2,3])),null!==this.bias&&(y=vm(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(t){const e=(t=Xm(t)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],h=this.strides[2];return e[n]=this.filters,e[a]=yb(e[a],l,o,this.padding),e[r]=yb(e[r],u,i,this.padding),e[s]=yb(e[s],h,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Cb.className="Conv3DTranspose",lo(Cb);class Rb extends Sb{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new hf("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new hf("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new hf("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(e.padding)));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Hm(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=cb(e.depthwiseRegularizer),this.depthwiseConstraint=Sg(e.depthwiseConstraint),this.pointwiseInitializer=Hm(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=cb(e.pointwiseRegularizer),this.pointwiseConstraint=Sg(e.pointwiseConstraint)}build(t){if((t=Xm(t)).length<this.rank+2)throw new hf("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(t)));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new hf("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(t[e])));const n=t[e],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new tg({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return rs((()=>{let e;if(t=qm(t),1===this.rank)throw new df("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=al(t,[0,2,3,1])),e=Pc(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=vm(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=al(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Gm(this.depthwiseInitializer),t.pointwiseInitializer=Gm(this.pointwiseInitializer),t.depthwiseRegularizer=ob(this.depthwiseRegularizer),t.pointwiseRegularizer=ob(this.pointwiseRegularizer),t.depthwiseConstraint=kg(this.depthwiseConstraint),t.pointwiseConstraint=kg(this.pointwiseConstraint),t}}Rb.className="SeparableConv";class _b extends Rb{constructor(t){super(2,t)}}_b.className="SeparableConv2D",lo(_b);class Ab extends Sb{constructor(t){super(1,t),Ab.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!_f(t.kernelSize,"number",1,1))throw new hf("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(t.kernelSize),"."))}}Ab.className="Conv1D",lo(Ab);class Db extends sg{constructor(t){super(t),"number"===typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"===typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return rs((()=>{if(t=qm(t),"channelsLast"===this.dataFormat){const e=hm(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return hm(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=hm(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return hm(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Db.className="Cropping2D",lo(Db);class Fb extends sg{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Hf(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,Rf(Bf,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return rs((()=>{let e=qm(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=al(e,[0,2,3,1]);const t=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?su.resizeNearestNeighbor(e,[t,a]):su.resizeBilinear(e,[t,a]);return al(r,[0,3,1,2])}{const t=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?su.resizeNearestNeighbor(e,[t,a]):su.resizeBilinear(e,[t,a])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}Fb.className="UpSampling2D",lo(Fb);class Ob extends Ib{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Hm(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Sg(t.depthwiseConstraint),this.depthwiseRegularizer=cb(t.depthwiseRegularizer)}build(t){if((t=Xm(t)).length<4)throw new hf("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(t),"."));const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new hf("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(t[e],")."));const n=t[e],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return rs((()=>{let e=function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return rs((()=>{null==r&&(r="channelsLast"),Hf(r);let o=bb(t,r);if(4!==t.rank)throw new hf("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));if(4!==e.rank)throw new hf("depthwiseKernel is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));return o=Ui(o,e,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(o=al(o,[0,3,1,2])),o}))}(t=qm(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=vm(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=Xm(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],a="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=gb(e,this.kernelSize[0],this.padding,this.strides[0]),s=gb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],a,r,s]:[t[0],r,s,a]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Gm(this.depthwiseInitializer),t.depthwiseRegularizer=ob(this.depthwiseRegularizer),t.depthwiseConstraint=kg(this.depthwiseRegularizer),t}}function Mb(t,e,n,a){if(Array.isArray(t)){if(null!=e||null!=n)throw new hf("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=t.slice(t.length-a,t.length),t=t.slice(0,t.length-a)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function r(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=r(e),constants:n=r(n)}}function Lb(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return rs((()=>{const c=e.shape.length;if(c<3)throw new hf("Input should be at least 3D, but is ".concat(c,"D."));const l=[1,0].concat(rm(2,c));if(e=al(e,l),null!=s)throw new df("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=qs(qs(r,"bool"),"float32"),r.rank===c-1&&(r=ji(r,-1)),r=al(r,l)),a&&(e=Lc(e,0),null!=r&&(r=Lc(r,0)));const u=[];let h,d=n;const p=e.shape[0],f=$c(e);let m,g;null!=r&&(m=$c(r));for(let e=0;e<p;++e){const n=f[e],a=rs((()=>t(n,d)));if(null==r)h=a[0],d=a[1];else{const t=rs((()=>{const t=m[e],n=go(Tc(t),t);return{output:Qs($s(a[0],t),$s(d[0],n)),newStates:d.map(((e,r)=>Qs($s(a[1][r],t),$s(e,n))))}}));h=t.output,d=t.newStates}i&&u.push(h)}if(i){g=Yc(u,1)}return[h,g,d]}))}Ob.className="DepthwiseConv2D",lo(Ob);class zb extends sg{constructor(t){let e;if(super(t),null==t.cell)throw new hf("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new jb({cells:t.cell}):t.cell,null==e.stateSize)throw new hf("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new tg({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return rm(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null))}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){jm(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let a;if(a=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const a of e)n.push([t[0],a]);return[a].concat(n)}return a}computeMask(t,e){return rs((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new df("Constants support is not implemented in RNN yet.");jm(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new tg({shape:[e,null,...n]});const a=[t[0]].concat(t.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!M(this.stateSpec.map((t=>t.shape[t.shape.length-1])),r))throw new hf("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((t=>new tg({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];rs((()=>{if(!this.stateful)throw new lf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new hf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Sc([n,t]))):this.states_=[Sc([n,this.cell.stateSize])];else if(null==t)ss(this.states_),null!=this.keptStates&&(ss(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Sc([n,t]))):this.states_[0]=Sc([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new hf("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));!0===e?this.keptStates.push(this.states_.slice()):ss(this.states_);for(let e=0;e<this.states_.length;++e){const a=t[e],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,s=[n,r];if(!M(a.shape,s))throw new hf("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(s,", received shape=").concat(a.shape));this.states_[e]=a}}this.states_=this.states_.map((t=>os(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,a=null==e?null:e.constants;null==e&&(e={});const r=Mb(t,n,a,this.numConstants);t=r.inputs,n=r.initialState,a=r.constants;let s=[],o=[];if(null!=n){e.initialState=n,s=s.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new tg({shape:t.shape}));o=o.concat(this.stateSpec)}null!=a&&(e.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof eg){const n=[t].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,e);return this.inputSpec=r,i}return super.apply(t,e)}call(t,e){return rs((()=>{const n=null==e?null:e.mask,a=null==e?null:e.training;let r=null==e?null:e.initialState;t=qm(t),null==r&&(r=this.stateful?this.states_:this.getInitialState(t));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new hf("RNN Layer has ".concat(s," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=Lb(((t,e)=>{const n=this.cell.call([t].concat(e),o);return[n[0],n.slice(1)]}),t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const h=this.returnSequences?l:c;return this.returnState?[h].concat(u):h}))}getInitialState(t){return rs((()=>{let e=Sc(t.shape);return e=nc(e,[1,2]),e=cm(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?fm(e,[1,t]):e)):this.cell.stateSize>1?[fm(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===zb.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),t),e)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=Lg(e.cell,n);return new t(Object.assign(e,{cell:a}))}}zb.className="RNN",lo(zb);class Pb extends sg{}class Bb extends Pb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Af(this.units,"units"),this.activation=eb(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Hm(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Hm(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Hm(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=cb(t.kernelRegularizer),this.recurrentRegularizer=cb(t.recurrentRegularizer),this.biasRegularizer=cb(t.biasRegularizer),this.kernelConstraint=Sg(t.kernelConstraint),this.recurrentConstraint=Sg(t.recurrentConstraint),this.biasConstraint=Sg(t.biasConstraint),this.dropout=nm([1,am([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=nm([1,am([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Xm(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return rs((()=>{if(2!==t.length)throw new hf("SimpleRNNCell expects 2 input Tensors, got ".concat(t.length,"."));let n=t[1];t=t[0];const a=null!=e.training&&e.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Kb({ones:()=>Tc(t),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Kb({ones:()=>Tc(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;r=gm(null!=s?$s(t,s):t,this.kernel.read()),null!=this.bias&&(r=vm(r,this.bias.read())),null!=o&&(n=$s(n,o));let i=Qs(r,gm(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:$y(this.activation),useBias:this.useBias,kernelInitializer:Gm(this.kernelInitializer),recurrentInitializer:Gm(this.recurrentInitializer),biasInitializer:Gm(this.biasInitializer),kernelRegularizer:ob(this.kernelRegularizer),recurrentRegularizer:ob(this.recurrentRegularizer),biasRegularizer:ob(this.biasRegularizer),activityRegularizer:ob(this.activityRegularizer),kernelConstraint:kg(this.kernelConstraint),recurrentConstraint:kg(this.recurrentConstraint),biasConstraint:kg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}Bb.className="SimpleRNNCell",lo(Bb);class Wb extends zb{constructor(t){t.cell=new Bb(t),super(t)}call(t,e){return rs((()=>{null!=this.cell.dropoutMask&&(ss(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ss(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:r})}))}static fromConfig(t,e){return new t(e)}}Wb.className="SimpleRNN",lo(Wb);class Ub extends Pb{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new hf("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Af(this.units,"units"),this.activation=eb(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=eb(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Hm(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Hm(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Hm(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=cb(t.kernelRegularizer),this.recurrentRegularizer=cb(t.recurrentRegularizer),this.biasRegularizer=cb(t.biasRegularizer),this.kernelConstraint=Sg(t.kernelConstraint),this.recurrentConstraint=Sg(t.recurrentConstraint),this.biasConstraint=Sg(t.biasConstraint),this.dropout=nm([1,am([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=nm([1,am([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Xm(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return rs((()=>{if(2!==t.length)throw new hf("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=null!=e.training&&e.training;let a=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Kb({ones:()=>Tc(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Kb({ones:()=>Tc(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,s=this.recurrentDropoutMask;let o,i,c;0<this.dropout&&this.dropout<1&&(t=$s(t,r[0]));let l=gm(t,this.kernel.read());this.useBias&&(l=vm(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=$s(a,s[0]));const u=this.recurrentKernel.read(),[h,d]=qc(u,[2*this.units,this.units],u.rank-1),p=gm(a,h),[f,m,g]=qc(l,3,l.rank-1),[y,b]=qc(p,2,p.rank-1);o=this.recurrentActivation.apply(Qs(f,y)),i=this.recurrentActivation.apply(Qs(m,b));const x=gm($s(i,a),d);c=this.activation.apply(Qs(g,x));const v=Qs($s(o,a),$s(Qs(1,wc(o)),c));return[v,v]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:$y(this.activation),recurrentActivation:$y(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Gm(this.kernelInitializer),recurrentInitializer:Gm(this.recurrentInitializer),biasInitializer:Gm(this.biasInitializer),kernelRegularizer:ob(this.kernelRegularizer),recurrentRegularizer:ob(this.recurrentRegularizer),biasRegularizer:ob(this.biasRegularizer),activityRegularizer:ob(this.activityRegularizer),kernelConstraint:kg(this.kernelConstraint),recurrentConstraint:kg(this.recurrentConstraint),biasConstraint:kg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}Ub.className="GRUCell",lo(Ub);class Vb extends zb{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Ub(t),super(t)}call(t,e){return rs((()=>{null!=this.cell.dropoutMask&&(ss(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ss(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Vb.className="GRU",lo(Vb);class Gb extends Pb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Af(this.units,"units"),this.activation=eb(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=eb(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Hm(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Hm(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Hm(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=cb(t.kernelRegularizer),this.recurrentRegularizer=cb(t.recurrentRegularizer),this.biasRegularizer=cb(t.biasRegularizer),this.kernelConstraint=Sg(t.kernelConstraint),this.recurrentConstraint=Sg(t.recurrentConstraint),this.biasConstraint=Sg(t.biasConstraint),this.dropout=nm([1,am([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=nm([1,am([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Xm(t))[t.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;a=new((e=class extends Nm{apply(e,a){const r=t.apply([n]),s=(new Em).apply([n]),o=t.apply([2*n]);return pm(pm(r,s),o)}}).className="CustomInit",e)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return rs((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new hf("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));let a=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Kb({ones:()=>Tc(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Kb({ones:()=>Tc(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let i,c,l,u;0<this.dropout&&this.dropout<1&&(t=$s(t,s[0]));let h=gm(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=$s(a,o[0])),h=Qs(h,gm(a,this.recurrentKernel.read())),this.useBias&&(h=vm(h,this.bias.read()));const[d,p,f,m]=qc(h,4,h.rank-1);i=this.recurrentActivation.apply(d),c=this.recurrentActivation.apply(p),l=Qs($s(c,r),$s(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);const g=$s(u,this.activation.apply(l));return[g,g,l]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:$y(this.activation),recurrentActivation:$y(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Gm(this.kernelInitializer),recurrentInitializer:Gm(this.recurrentInitializer),biasInitializer:Gm(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ob(this.kernelRegularizer),recurrentRegularizer:ob(this.recurrentRegularizer),biasRegularizer:ob(this.biasRegularizer),activityRegularizer:ob(this.activityRegularizer),kernelConstraint:kg(this.kernelConstraint),recurrentConstraint:kg(this.recurrentConstraint),biasConstraint:kg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}Gb.className="LSTMCell",lo(Gb);class Hb extends zb{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Gb(t),super(t)}call(t,e){return rs((()=>{null!=this.cell.dropoutMask&&(ss(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ss(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Hb.className="LSTM",lo(Hb);class jb extends Pb{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return rs((()=>{let n=t.slice(1);const a=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?a.push(n.splice(0,t.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],s=0===o?[t[0]].concat(n):[s[0]].concat(n),s=i.call(s,e),r.push(s.slice(1))}n=[];for(const t of r.slice().reverse())n.push(...t);return[s[0]].concat(n)}))}build(t){let e;jm(t)&&(t=t[0]),this.cells.forEach(((n,a)=>{Yf("RNNCell_".concat(a),(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign(Object.assign({},t),e)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of e.cells)a.push(Lg(r,n));return new t({cells:a})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Zm(t)}setWeights(t){const e=[];for(const n of this.cells){const a=n.weights.length,r=t.splice(a);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],r[t]])}$m(e)}}function Kb(t){const{ones:e,rate:n,training:a=!1,count:r=1,dropoutFunc:s}=t,o=()=>null!=s?s(e(),n):wm(e(),n),i=()=>km(o,e,a);if(!r||r<=1)return os(i().clone());return Array(r).fill(void 0).map(i).map((t=>os(t.clone())))}jb.className="StackedRNNCells",lo(jb);var qb=function(t,e){var n={};for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&e.indexOf(a)<0&&(n[a]=t[a]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(t);r<a.length;r++)e.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(t,a[r])&&(n[a[r]]=t[a[r]])}return n};class Xb extends zb{constructor(t){if(t.unroll)throw new df("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new df("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new tg({ndim:5})]}call(t,e){return rs((()=>{if(null!=this.cell.dropoutMask&&(ss(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ss(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new hf("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,a=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:r})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return rs((()=>{const{stateSize:e}=this.cell,n=t.shape,a=this.computeSingleOutputShape(n),r=Sc([a[0],...a.slice(2)]);return Array.isArray(e)?Array(e.length).fill(r):[r]}))}resetStates(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];rs((()=>{if(!this.stateful)throw new lf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new hf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Sc(r))):this.states_=[Sc(r)];else if(null==t)ss(this.states_),null!=this.keptStates&&(ss(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Sc(r))):this.states_[0]=Sc(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new hf("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));e?this.keptStates.push(this.states_.slice()):ss(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],a=r;if(!M(n.shape,a))throw new hf("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[e]=n}}this.states_=this.states_.map((t=>os(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===e,c=t[i?3:2],l=t[i?4:3],u=gb(c,a[0],r,s[0],o[0]),h=gb(l,a[1],r,s[1],o[1]);return[...t.slice(0,2),...i?[n,u,h]:[u,h,n]]}}Xb.className="ConvRNN2D";class Yb extends Gb{constructor(t){const{filters:e,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:o}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,Af(this.filters,"filters"),this.kernelSize=mb(n,2,"kernelSize"),this.kernelSize.forEach((t=>Af(t,"kernelSize"))),this.strides=mb(a||1,2,"strides"),this.strides.forEach((t=>Af(t,"strides"))),this.padding=r||"valid",jf(this.padding),this.dataFormat=s||"channelsLast",Hf(this.dataFormat),this.dilationRate=mb(o||1,2,"dilationRate"),this.dilationRate.forEach((t=>Af(t,"dilationRate")))}build(t){var e;t=Xm(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new hf("The channel dimension of the input should be defined. "+"Found ".concat(t[n]));const a=t[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;t=new((e=class extends Nm{apply(t,e){return dm([n.apply([a]),Nc([a]),n.apply([2*a])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return rs((()=>{if(3!==t.length)throw new hf("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=e.training||!1,a=t[0],r=t[1],s=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Kb({ones:()=>Tc(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=(t,e,n)=>e&&e[n]?$s(e[n],t):t;let c=i(a,o,0),l=i(a,o,1),u=i(a,o,2),h=i(a,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Kb({ones:()=>Tc(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=i(r,d,0),f=i(r,d,1),m=i(r,d,2),g=i(r,d,3);const[y,b,x,v]=qc(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?qc(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,y,w,this.padding),l=this.inputConv(l,b,k,this.padding),u=this.inputConv(u,x,I,this.padding),h=this.inputConv(h,v,S,this.padding);const[N,T,E,C]=qc(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,E),g=this.recurrentConv(g,C);const R=this.recurrentActivation.apply(Qs(c,p)),_=this.recurrentActivation.apply(Qs(l,f)),A=Qs($s(_,s),$s(R,this.activation.apply(Qs(u,m)))),D=$s(this.recurrentActivation.apply(Qs(h,g)),this.activation.apply(A));return[D,D,A]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=qb(t,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(t,e,n,a){const r=Fi(t,e,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?vm(r,n,this.dataFormat):r}recurrentConv(t,e){return Fi(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Yb.className="ConvLSTM2DCell",lo(Yb);class Qb extends Xb{constructor(t){const e=new Yb(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}Qb.className="ConvLSTM2D",lo(Qb);class Jb extends sg{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?e[a]:this.noiseShape[a]);return n}call(t,e){return rs((()=>{this.invokeCallHook(t,e);const n=qm(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,a=this.getNoiseShape(n);return km((()=>wm(n,this.rate,a,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Jb.className="Dropout",lo(Jb);class Zb extends Jb{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Zb.className="SpatialDropout1D",lo(Zb);class $b extends sg{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Af(this.units,"units"),this.activation=eb(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Hm(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Hm(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Sg(t.kernelConstraint),this.biasConstraint=Sg(t.biasConstraint),this.kernelRegularizer=cb(t.kernelRegularizer),this.biasRegularizer=cb(t.biasRegularizer),this.activityRegularizer=cb(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Xm(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Xm(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return rs((()=>{this.invokeCallHook(t,e);const n=qm(t),a=Ff(this.activation.getClassName());let r;return null!=a?r=gm(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=gm(n,this.kernel.read()),null!=this.bias&&(r=vm(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const t={units:this.units,activation:$y(this.activation),useBias:this.useBias,kernelInitializer:Gm(this.kernelInitializer),biasInitializer:Gm(this.biasInitializer),kernelRegularizer:ob(this.kernelRegularizer),biasRegularizer:ob(this.biasRegularizer),activityRegularizer:ob(this.activityRegularizer),kernelConstraint:kg(this.kernelConstraint),biasConstraint:kg(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}$b.className="Dense",lo($b);class tx extends sg{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Xm(t);for(const e of t.slice(1))if(null==e)throw new hf('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(t.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[t[0],em(t,1)]}call(t,e){return rs((()=>{this.invokeCallHook(t,e);let n=qm(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=al(n,t)}return function(t){if(t.rank<=1)throw new hf("batchFlatten requires a minimum rank of 2. Got rank: ".concat(t.rank,"."));const e=[t.shape[0],em(t.shape,1)];return xi(t,e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}tx.className="Flatten",lo(tx);class ex extends sg{constructor(t){super(t),this.supportsMasking=!0,this.activation=eb(t.activation)}call(t,e){return rs((()=>{this.invokeCallHook(t,e);const n=qm(t);return this.activation.apply(n)}))}getConfig(){const t={activation:$y(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}ex.className="Activation",lo(ex);class nx extends sg{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return rs((()=>function(t,e){return rs((()=>{if(2!==t.shape.length)throw new hf("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return fm(cm(t,1),[1,e,1])}))}(t=qm(t),this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}nx.className="RepeatVector",lo(nx);class ax extends sg{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",a=e.slice();let r=1,s=null;for(let i=0;i<a.length;++i){const t=a[i];if(this.isUnknown(t)){if(null!==s)throw new hf("Can only specifiy one unknown dimension.");s=i}else r*=t}const o=em(t);if(null!==s){if(0===r||o%r!==0)throw new hf(n);a[s]=o/r}else if(o!==r)throw new hf(n);return a}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return rs((()=>{this.invokeCallHook(t,e);const n=qm(t),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return xi(n,r)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}ax.className="Reshape",lo(ax);class rx extends sg{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(t.dims," instead."));const e=rm(1,t.dims.length+1);if(!M(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new tg({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Xm(t)).slice();return this.dims.forEach(((n,a)=>{e[a+1]=t[n]})),e}call(t,e){return al(qm(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}rx.className="Permute",lo(rx);class sx extends sg{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=qm(t);return ni(kc(n,this.maskValue),-1)}call(t,e){return rs((()=>{this.invokeCallHook(t,e);const n=qm(t),a=ni(kc(n,this.maskValue),-1,!0);return $s(n,qs(a,n.dtype))}))}}sx.className="Masking",lo(sx);class ox extends sg{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(xf(t.inputLength))}this.inputDim=t.inputDim,Af(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Af(this.outputDim,"outputDim"),this.embeddingsInitializer=Hm(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=cb(t.embeddingsRegularizer),this.activityRegularizer=cb(t.activityRegularizer),this.embeddingsConstraint=Sg(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return rs((()=>this.maskZero?(t=qm(t),kc(t,no(t))):null))}computeOutputShape(t){if(t=Xm(t),null==this.inputLength)return[...t,this.outputDim];const e=xf(this.inputLength);if(e.length!==t.length-1)throw new hf('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));{let n=0;for(let a=0;a<e.length;++a){const r=e[a],s=t[a+1];if(null!=r&&null!=s&&r!==s)throw new hf('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));null==r&&(e[n]=s),n++}}return[t[0],...e,this.outputDim]}call(t,e){return rs((()=>{this.invokeCallHook(t,e);let n=qm(t);"int32"!==n.dtype&&(n=im(n,"int32"));const a=ym(this.embeddings.read(),xi(n,[n.size]));return xi(a,Xm(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Gm(this.embeddingsInitializer),embeddingsRegularizer:ob(this.embeddingsRegularizer),activityRegularizer:ob(this.activityRegularizer),embeddingsConstraint:kg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}ox.className="Embedding",lo(ox);class ix extends sg{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new df}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let a=0;a<e.length;++a){const r=t[t.length-e.length+a],s=e[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new hf("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Xm(t)]),t.length<2)throw new hf("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(t.length," input(s)."));let e=[];for(const r of t)null!=r&&null!==r[0]&&e.push(r[0]);if(e=Ef(e),e.length>1)throw new hf("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(t),"."));let n=null==t[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const e=null==t[r]?null:t[r].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const a=t.map((t=>t.length));-1===t.indexOf(null)&&1===Ef(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return rs((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const a=am(n);for(let n of t){const t=n.rank;for(let e=0;e<a-t;++e)n=cm(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,a=t[0],r=t.slice(1).concat([a]);let o=xi(s,[a].concat(em(t.slice(1))));o=al(o,[1,0]),o=xi(o,r),e.push(o),n=!0}else if(t>1){const a=rm(1,t).concat([0]);e.push(al(s,a)),n=!0}else e.push(s)}let a=this.mergeFunction(e);const r=a.rank;if(n)if(null==r){const t=a.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));a=xi(al(xi(a,[-1,e]),[1,0]),n)}else if(r>1){const t=[r-1].concat(rm(0,r-1));a=al(a,t)}return a}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const n=null==t[a]?null:t[a].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const a of t)null!=a&&null!==a[0]&&n.push(a[0]);return n=Ef(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return rs((()=>{if(null==e)return null;if(!Array.isArray(e))throw new hf("`mask` should be an Array");if(!Array.isArray(t))throw new hf("`inputs` should be an Array");if(e.length!==t.length)throw new hf("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(t.length," vs ").concat(e.length,")"));if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:ji(t,0))))[0];for(let t=1;t<e.length-1;++t)n=pc(n,e[t]);return n}))}}class cx extends ix{constructor(t){super(t)}mergeFunction(t){return rs((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Qs(e,t[n]);return e}))}}cx.className="Add",lo(cx);class lx extends ix{constructor(t){super(t)}mergeFunction(t){return rs((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=$s(e,t[n]);return e}))}}lx.className="Multiply",lo(lx);class ux extends ix{constructor(t){super(t)}mergeFunction(t){return rs((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Qs(e,t[n]);return $s(1/t.length,e)}))}}ux.className="Average",lo(ux);class hx extends ix{constructor(t){super(t)}mergeFunction(t){return rs((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ko(e,t[n]);return e}))}}hx.className="Maximum",lo(hx);class dx extends ix{constructor(t){super(t)}mergeFunction(t){return rs((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=xc(e,t[n]);return e}))}}dx.className="Minimum",lo(dx);class px extends ix{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new hf("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const a of t)if(null!=a){e=!1;break}if(e)return;const n=[];for(let a=0;a<t.length;++a){const e=t[a].slice();e.splice(this.axis,1);let r=!1;for(const t of n)if(M(t,e)){r=!0;break}r||n.push(e)}if(n.length>1)throw new hf("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return rs((()=>dm(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new hf("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of e.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new hf("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new hf("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new hf("Mismatch in the length of mask (".concat(e.length,") ")+"and the legnth of inputs (".concat(t.length,")"));return rs((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const a=[];for(let s=0;s<t.length;++s)null==e[s]?a.push(qs(Tc(t[s]),"bool")):e[s].rank<t[s].rank?a.push(ji(e[s],-1)):a.push(e[s]);const r=Ci(a,this.axis);return ei(r,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function fx(t,e){for(;t<0;)t+=e;return t}px.className="Concatenate",lo(px);class mx extends ix{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){A(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new df("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,n);if(e[a[0]]!==n[a[1]])throw new hf("Dimension incompatibility: "+"".concat(e[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(t){if(2!==t.length)throw new hf("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(t.length," input(s)."));let e,n=t[0],a=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>fx(e,t[n].shape.length))):[fx(this.axes,n.shape.length),fx(this.axes,a.shape.length)],this.normalize&&(n=zg(n,e[0]),a=zg(a,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new df("batchDot is not implemented for tensors of 4D or higher rank yet");if(A(t.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(t.shape.length))),A(t.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(e.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new df("batchDot is not implemented for complex64-type Tensors yet.");const a=t.shape.length,r=e.shape.length;null==n&&(n=[a-1,r-2]);const s=n;return rs((()=>{let n,o;if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=xi(e,e.shape.concat(t))}else if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=xi(t,t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)o=s[0]===s[1]?nc($s(t,e),s[0]):nc($s(al(t,[1,0]),e),s[1]);else{const n=s[0]!==t.shape.length-1,a=s[1]===e.shape.length-1;o=fc(t,e,n,a)}if(n>0){let t;t=a>r?a+r-3:a-1;const e=[];for(let a=t;a<t+n;++a)e.push(a);o=Xc(o,e)}return 1===o.shape.length&&(o=ji(o,1)),o}))}(n,a,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[fx(this.axes,t.length),fx(this.axes,e.length)],n}computeOutputShape(t){A(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new df("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,n);e.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=e.concat(n);return 1===r.length&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}mx.className="Dot",lo(mx);class gx extends sg{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return rs((()=>{this.invokeCallHook(t,e);const n=qm(t);return km((()=>Qs(mm(n.shape,0,this.stddev),n)),(()=>n),e.training||!1)}))}}gx.className="GaussianNoise",lo(gx);class yx extends sg{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return rs((()=>{this.invokeCallHook(t,e);const n=qm(t);if(this.rate>0&&this.rate<1){return km((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return $s(n,mm(n.shape,1,t))}),(()=>n),e.training||!1)}return n}))}}yx.className="GaussianDropout",lo(yx);class bx extends sg{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||qm(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return rs((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t),a=()=>{const e=qm(t),a=-1.7580993408473766;let r=Ji(Fc(n),this.rate);r=im(r,"float32");const s=((1-this.rate)*(1+this.rate*a**2))**-.5,o=-s*a*this.rate,i=Qs($s(e,r),$s(Qs(r,-1),a));return Qs($s(i,s),o)};return km(a,(()=>qm(t)),e.training||!1)}return t}))}}function xx(t,e,n,a,r){let s,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===t.rank)s=Ii(t,e,n,a,r,o);else if(3===t.rank)s=Si(t,e,n,a,r,o);else{if(4!==t.rank)throw new df("batchNormalization is not implemented for array of rank ".concat(t.rank," ")+"yet");s=Ni(t,e,n,a,r,o)}return s}function vx(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return M(a.slice().sort(),rm(0,t.rank-1))?function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return rs((()=>{const s=vc(t,a),o=s.mean,i=s.variance;return[xx(t,o,i,n,e,r),o,i]}))}(t,e,n,a,r):function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return rs((()=>{const s=vc(t,a),o=s.mean,i=s.variance,c=[];for(const e of rm(0,t.rank))-1!==a.indexOf(e)?c.push(1):c.push(t.shape[e]);const l=xi(o,c),u=xi(i,c),h=null==e?null:xi(e,c),d=null==n?null:xi(n,c);return[xx(t,l,u,d,h,r),o,i]}))}(t,e,n,a,r)}bx.className="AlphaDropout",lo(bx);class wx extends sg{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Hm(t.betaInitializer||"zeros"),this.gammaInitializer=Hm(t.gammaInitializer||"ones"),this.movingMeanInitializer=Hm(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Hm(t.movingVarianceInitializer||"ones"),this.betaConstraint=Sg(t.betaConstraint),this.gammaConstraint=Sg(t.gammaConstraint),this.betaRegularizer=cb(t.betaRegularizer),this.gammaRegularizer=cb(t.gammaRegularizer)}build(t){t=Xm(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new hf("Axis ".concat(e," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(t),"."));this.inputSpec=[new tg({ndim:t.length,axes:{[e]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return rs((()=>{const n=null!=e.training&&e.training,a=qm(t),r=a.shape,s=r.length,o=rm(0,s),i=this.axis>=0?this.axis:this.axis+s;o.splice(i,1);const c=mf(1,s);c[i]=r[i];const l=o.slice();l.sort();const u=!M(l,rm(0,s).slice(0,s-1));if(!n)return(()=>{if(u){const t=xi(this.movingMean.read(),c),e=xi(this.movingVariance.read(),c),n=this.center?xi(this.beta.read(),c):null,r=this.scale?xi(this.gamma.read(),c):null;return xx(a,t,e,n,r,this.epsilon)}return xx(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=vx(a,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(t,e,n)=>{rs((()=>{const a=1-n,r=t.read(),s=$s(go(r,e),a);t.write(go(r,s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Gm(this.betaInitializer),gammaInitializer:Gm(this.gammaInitializer),movingMeanInitializer:Gm(this.movingMeanInitializer),movingVarianceInitializer:Gm(this.movingVarianceInitializer),betaRegularizer:ob(this.betaRegularizer),gammaRegularizer:ob(this.gammaRegularizer),betaConstraint:kg(this.betaConstraint),gammaConstraint:kg(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}wx.className="BatchNormalization",lo(wx);class kx extends sg{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Hm(t.betaInitializer||"zeros"),this.gammaInitializer=Hm(t.gammaInitializer||"ones"),this.betaRegularizer=cb(t.betaRegularizer),this.gammaRegularizer=cb(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Xm(t)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=e);for(const a of this.axis)if(a<0||a>=e)throw new Error("Invalid axis: ".concat(a));if(this.axis.length!==Ef(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(t,e){const n=qm(t),a=n.shape,r=a.length;return rs((()=>{let{mean:t,variance:e}=vc(n,this.axis,!0);const s=mf(1,r);for(const n of this.axis)s[n]=a[n];const o=t=>null!=t&&t.shape.length!==r?xi(t,s):t;let i=this.scale?o(this.gamma.read()):null,c=this.center?o(this.beta.read()):null;const l=[],u=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(l.push(a[n]),u.push(1)):(l.push(1),u.push(a[n]));return t=Ki(t,l),e=Ki(e,l),null!=i&&(i=Ki(i,u)),null!=c&&(c=Ki(c,u)),xx(n,t,e,c,i,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Gm(this.betaInitializer),gammaInitializer:Gm(this.gammaInitializer),betaRegularizer:ob(this.betaRegularizer),gammaRegularizer:ob(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}kx.className="LayerNormalization",lo(kx);class Ix extends sg{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new hf("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(t.padding.length," array."));let e,n;if("number"===typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new hf("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(t.padding[0].length," array."));if(e=t.padding[0],2!==t.padding[1].length)throw new hf("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(t.padding[1].length," array."));n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new tg({ndim:4})]}computeOutputShape(t){let e,n;return t=Xm(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return rs((()=>function(t,e,n){return rs((()=>{if(4!==t.rank)throw new hf("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==e&&(e=[[1,1],[1,1]]),2!==e.length||2!==e[0].length||2!==e[1].length)throw new hf("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new hf("Unknown data format: ".concat(n,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let a;return a="channelsFirst"===n?[[0,0],[0,0],e[0],e[1]]:[[0,0],e[0],e[1],[0,0]],Ec(t,a)}))}(qm(t),this.padding,this.dataFormat)))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function Sx(t,e,n,a,r,s){return rs((()=>{let o;Hf(r),Kf(s),jf(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),t=bb(t,r);const i="same"===a?"same":"valid";return o="max"===s?mc(t,e,n,i):vi(t,e,n,i),"channelsFirst"===r&&(o=al(o,[0,3,1,2])),o}))}function Nx(t,e,n,a,r,s){return rs((()=>{let o;Hf(r),Kf(s),jf(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),t=xb(t,r);const i="same"===a?"same":"valid";return o="max"===s?gc(t,e,n,i):wi(t,e,n,i),"channelsFirst"===r&&(o=al(o,[0,4,1,2,3])),o}))}Ix.className="ZeroPadding2D",lo(Ix);class Tx extends sg{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"===typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!==typeof t.poolSize[0])throw new hf("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.poolSize)));this.poolSize=t.poolSize}if(Af(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"===typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!==typeof t.strides[0])throw new hf("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.strides)));this.strides=t.strides}Af(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,jf(this.padding),this.inputSpec=[new tg({ndim:3})]}computeOutputShape(t){const e=gb((t=Xm(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return rs((()=>{this.invokeCallHook(t,e),t=cm(qm(t),2);const n=this.poolingFunction(qm(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Xc(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Ex extends Tx{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return Hf(r),jf(a),Sx(t,e,n,a,r,"max")}}Ex.className="MaxPooling1D",lo(Ex);class Cx extends Tx{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return Hf(r),jf(a),Sx(t,e,n,a,r,"avg")}}Cx.className="AveragePooling1D",lo(Cx);class Rx extends sg{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new hf("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides];Af(this.poolSize,"poolSize"),Af(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Hf(this.dataFormat),jf(this.padding),this.inputSpec=[new tg({ndim:4})]}computeOutputShape(t){t=Xm(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=gb(e,this.poolSize[0],this.padding,this.strides[0]),n=gb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return rs((()=>(this.invokeCallHook(t,e),this.poolingFunction(qm(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class _x extends Rx{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return Hf(r),jf(a),Sx(t,e,n,a,r,"max")}}_x.className="MaxPooling2D",lo(_x);class Ax extends Rx{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return Hf(r),jf(a),Sx(t,e,n,a,r,"avg")}}Ax.className="AveragePooling2D",lo(Ax);class Dx extends sg{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new hf("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Af(this.poolSize,"poolSize"),Af(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Hf(this.dataFormat),jf(this.padding),this.inputSpec=[new tg({ndim:5})]}computeOutputShape(t){t=Xm(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],a="channelsFirst"===this.dataFormat?t[4]:t[3];return e=gb(e,this.poolSize[0],this.padding,this.strides[0]),n=gb(n,this.poolSize[1],this.padding,this.strides[1]),a=gb(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,a]:[t[0],e,n,a,t[4]]}call(t,e){return rs((()=>(this.invokeCallHook(t,e),this.poolingFunction(qm(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Fx extends Dx{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return Hf(r),jf(a),Nx(t,e,n,a,r,"max")}}Fx.className="MaxPooling3D",lo(Fx);class Ox extends Dx{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return Hf(r),jf(a),Nx(t,e,n,a,r,"avg")}}Ox.className="AveragePooling3D",lo(Ox);class Mx extends sg{constructor(t){super(t),this.inputSpec=[new tg({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new df}}class Lx extends Mx{constructor(t){super(t||{})}call(t,e){return rs((()=>{const e=qm(t);return yc(e,1)}))}}Lx.className="GlobalAveragePooling1D",lo(Lx);class zx extends Mx{constructor(t){super(t||{})}call(t,e){return rs((()=>{const e=qm(t);return ec(e,1)}))}}zx.className="GlobalMaxPooling1D",lo(zx);class Px extends sg{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Hf(this.dataFormat),this.inputSpec=[new tg({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new df}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Bx extends Px{call(t,e){return rs((()=>{const e=qm(t);return"channelsLast"===this.dataFormat?yc(e,[1,2]):yc(e,[2,3])}))}}Bx.className="GlobalAveragePooling2D",lo(Bx);class Wx extends Px{call(t,e){return rs((()=>{const e=qm(t);return"channelsLast"===this.dataFormat?ec(e,[1,2]):ec(e,[2,3])}))}}Wx.className="GlobalMaxPooling2D",lo(Wx);class Ux extends sg{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=Lg(e.layer,n);delete e.layer;const r={layer:a};return Object.assign(r,e),new t(r)}}class Vx extends Ux{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Xm(t)).length<3)throw new hf("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(t)));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Xm(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),a=t[1];return[n[0],a].concat(n.slice(1))}call(t,e){return rs((()=>Lb(((t,n)=>[qm(this.layer.call(t,e)),[]]),t=qm(t),[],!1,null,null,!1,!0)[1]))}}Vx.className="TimeDistributed",lo(Vx);class Gx extends Ux{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Lg(n),e.goBackwards=!0!==e.goBackwards;const a={};var r;if(a.className=t.layer.getClassName(),a.config=e,this.backwardLayer=Lg(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,r=this.mergeMode,Rf(Vf,"BidirectionalMergeMode",r),t.weights)throw new df("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,a,r=this.forwardLayer.computeOutputShape(t);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),e=r[0]):e=r[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[e].concat(a).concat(a.slice()):bf(n)}apply(t,e){let n=null==e?null:e.initialState,a=null==e?null:e.constants;null==e&&(e={});const r=Mb(t,n,a,this.numConstants);if(t=r.inputs,n=r.initialState,a=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==a)return super.apply(t,e);const s=[],o=[];if(null!=n){const t=n.length;if(t%2>0)throw new hf("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,s.push(...n);const a=n.map((t=>new tg({shape:t.shape})));this.forwardLayer.stateSpec=a.slice(0,t/2),this.backwardLayer.stateSpec=a.slice(t/2),o.push(...a)}if(null!=a)throw new df("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof eg;for(const c of s)if(c instanceof eg!==i)throw new hf("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[t].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,e);return this.inputSpec=r,i}return super.apply(t,e)}call(t,e){return rs((()=>{const n=e.initialState;let a,r,s,o;if(null==n)a=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const s=n.slice(0,n.length/2),o=n.slice(n.length/2);a=this.forwardLayer.call(t,Object.assign(e,{initialState:s})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:o}))}return this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=Lc(r,1)),"concat"===this.mergeMode?o=dm([a,r]):"sum"===this.mergeMode?o=Qs(a,r):"ave"===this.mergeMode?o=$s(.5,Qs(a,r)):"mul"===this.mergeMode?o=$s(a,r):null==this.mergeMode&&(o=[a,r]),this.returnState?null==this.mergeMode?o.concat(s):[o].concat(s):o}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Yf(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Yf(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Lg(e.layer);if(delete e.layer,null!=e.numConstants)throw new df("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=e;return a.layer=n,new t(a)}}Gx.className="Bidirectional",lo(Gx);class Hx extends sg{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return rs((()=>("float32"!==(t=qm(t)).dtype&&(t=im(t,"float32")),Qs($s(t,this.scale),this.offset))))}}Hx.className="Rescaling",lo(Hx);const{resizeBilinear:jx,cropAndResize:Kx}=su;class qx extends sg{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,n,a,r,s,o,i){return rs((()=>{let c,l=!1;const u=[e/s,n/o,(a+e)/s,(r+n)/o],h=[];3===t.rank?(l=!0,c=Yc([t])):c=t;for(let t=0;t<c.shape[0];t++)h.push(u);const d=ts(h,[h.length,4]),p=Oc(0,h.length,1,"int32"),f=Kx(c,d,p,[a,r],"nearest");return im(l?qm($c(f)):f,i)}))}upsize(t,e,n,a){return rs((()=>im(jx(t,[e,n]),a)))}call(t,e){return rs((()=>{const e=qm(t),n=e.dtype,a=e.shape,r=a[a.length-3],s=a[a.length-2];let o=0;r!==this.height&&(o=Math.floor((r-this.height)/2));let i=0;return s!==this.width&&(i=Math.floor((s-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(e,o,i,this.height,this.width,r,s,n):this.upsize(t,this.height,this.width,n)}))}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){const e=(t=Xm(t)).length-3,n=t.length-2;return t[e]=this.height,t[n]=this.width,t}}qx.className="CenterCrop",lo(qx);class Xx extends sg{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return null==(t=Xm(t))?[this.numTokens]:"oneHot"===this.outputMode&&1!==t[t.length-1]?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return rs((()=>{let n;if("int32"!==(t=qm(t)).dtype&&(t=im(t,"int32")),"undefined"!==typeof e.countWeights){if("count"!==this.outputMode)throw new hf("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(e.countWeights));n=qm(e.countWeights)}const a=ec(t),r=bc(t),s=Qi(this.numTokens,a).bufferSync().get(0),o=Ji(r,0).bufferSync().get(0);if(!s||!o)throw new hf("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(t,e,n,a){let r=qm(t);if("int32"!==r.dtype&&(r=im(r,"int32")),"int"===e)return r;const s=r.shape;if(0===r.rank&&(r=ji(r,-1)),"oneHot"===e&&1!==r.shape[r.shape.length-1]&&(r=ji(r,-1)),r.rank>2)throw new hf("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(e," and input shape ").concat(s)+" which would result in output rank ".concat(r.rank,"."));const o=["multiHot","oneHot"].includes(e),i=r;let c;if(c=Wi(i,"undefined"!==typeof a&&"count"===e?a:[],n,o),"tfIdf"!==e)return c;if(a)return $s(c,a);throw new hf("When outputMode is 'tfIdf', weights must be provided.")}(t,this.outputMode,this.numTokens,n)}))}}Xx.className="CategoryEncoding",lo(Xx);const Yx=new Set(["bilinear","nearest"]);class Qx extends sg{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation){if(!Yx.has(t.interpolation))throw new hf("Invalid interpolation parameter: ".concat(t.interpolation," is not implemented"));this.interpolation=t.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){const e=(t=Xm(t))[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return rs((()=>{const e=[this.height,this.width];if("bilinear"===this.interpolation)return su.resizeBilinear(t,e,!this.cropToAspectRatio);if("nearest"===this.interpolation)return su.resizeNearestNeighbor(t,e,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...Yx]," are supported"))}))}}Qx.className="Resizing",lo(Qx);class Jx{constructor(t){this.seed=t}next(){if(void 0!==this.seed)return this.seed++}}Jx.className="RandomSeed";class Zx extends sg{constructor(t){super(t),this.randomGenerator=new Jx(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}Zx.className="BaseRandomLayer";const $x=new Set(["bilinear","nearest"]);class tv extends Zx{constructor(t){super(t);const{factor:e,interpolation:n="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new hf("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new hf("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new hf("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!$x.has(n))throw new hf("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){const e=(t=Xm(t))[2];return[this.imgHeight,-1,e]}call(t,e){return rs((()=>{const e=qm(t);this.imgHeight=e.shape[e.shape.length-3];const n=e.shape[e.shape.length-2];this.widthFactor=Fc([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return su.resizeBilinear(t,r);case"nearest":return su.resizeNearestNeighbor(t,r);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...$x]," are supported"))}}))}}tv.className="RandomWidth",lo(tv);var ev,nv;ht().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"}(ev||(ev={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(nv||(nv={}));new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function av(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==t)return null;if("function"===typeof Blob&&t instanceof Blob)return t.slice();if(a.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(iv(t)){const r=Array.isArray(t)?[]:{};a.add(t);for(const s in t){const o=av(t[s],e,n,a);r[s]=o}return a.delete(t),t.__proto__&&(r.__proto__=t.__proto__),r}throw new Error("Can't recurse into non-iterable type: ".concat(t))}return n.set(t,r.value),r.value}function rv(t){return sv(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:ov)}function sv(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=t[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(iv(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=t.map((t=>t[s])),o=sv(a,e,n);r[s]=o}return n.delete(a),r}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return r.value}function ov(t){return null===t?null:iv(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function iv(t){let e=!1;if(ht().get("IS_BROWSER"))e=t instanceof TextDecoder;else{const{StringDecoder:a}=n(401);e=t instanceof a}return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"===typeof t&&!(t instanceof xr)&&!(t instanceof Promise)&&!e)}function cv(t){return function(t,e){return av(t,e)}(t,lv)}function lv(t){return t instanceof xr?{value:t.clone(),recurse:!1}:iv(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class uv{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class hv extends uv{constructor(){super(hv.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let a=0;a<n;a++)e[a]=this.get(this.wrap(this.begin+a));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function dv(t){return new gv(t)}function pv(t,e){return new Ev(t,e)}hv.INITIAL_CAPACITY=32;class fv{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Iv(this,t)}filter(t){return new wv(this,t)}map(t){return new kv(this,t)}mapAsync(t){return new Sv(this,t)}serialMapAsync(t){return new Sv(this,t).serial()}flatmap(t){return new Tv(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t){return new vv(this,t,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ov;return this.rowMajorBatch(t,e).map((t=>rv(t,n)))}concatenate(t,e){return new Ev(new mv([this,t]),e)}take(t){return t<0||null==t?this:new xv(this,t)}skip(t){return t<0||null==t?this:new bv(this,t)}prefetch(t){return new Rv(this,t)}shuffle(t,e){return new _v(this,t,e)}serial(){return new yv(this)}}class mv extends fv{constructor(t){super(),this.items=t,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:cv(t),done:!1}}}class gv extends fv{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: ".concat(t.message),t}}}class yv extends fv{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class bv extends fv{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;ss(t.value)}return this.upstream.next()}}class xv extends fv{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class vv extends fv{constructor(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class wv extends fv{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;ss(t.value)}}}class kv extends fv{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Or(t.value),n=this.transform(t.value),a=Or(n);for(const r of e)Fr(r,a)||r.dispose();return{value:n,done:!1}}}class Iv extends fv{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class Sv extends fv{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Or(t.value),n=await this.transform(t.value),a=Or(n);for(const r of e)Fr(r,a)||r.dispose();return{value:n,done:!1}}}class Nv extends fv{constructor(){super(),this.outputQueue=new hv,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Tv extends Nv{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=Or(t.value),n=this.transform(t.value),a=Or(n);this.outputQueue.pushAll(n);for(const r of e)Fr(r,a)||r.dispose();return!0}}class Ev extends fv{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}var Cv;!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(Cv||(Cv={}));class Rv extends fv{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new uv(e)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class _v extends Rv{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Rc.alea(n||$a().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Av{constructor(){this.size=null}batch(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return A(t>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(t))),a=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Dv((async()=>(await n.iterator()).columnMajorBatch(t,e,Fv)),a)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Dv((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Dv((async()=>(await e.iterator()).filter((e=>rs((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Dv((async()=>(await e.iterator()).map((e=>rs((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return Dv((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Dv((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Dv((async()=>pv(dv((async()=>({value:await e.iterator(),done:!1}))).take(t))),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Dv((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,r=Rc.alea(e||$a().toString());return Dv((async()=>{let e=r.int32();return n&&(e+=r.int32()),(await a.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Dv((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Dv(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends Av{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Fv(t){if(null===t)return null;if(function(t){return null==t||null===(e=t)||"object"!==typeof e&&"function"!==typeof e||Array.isArray(t)||"object"===typeof t&&t instanceof xr||nr(t);var e}(t[0])){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof xr?Yc(t):ts(t)}(t),recurse:!1}}return{value:null,recurse:!0}}Av.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function Ov(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&A("complex64"!==t.dtype,(()=>"".concat(e," does not support complex64 tensors in the CPU backend.")))}))}const Mv=xh;class Lv extends N{nextDataId(){return Lv.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new S(this,ns())}write(t,e,n){this.firstUse&&(this.firstUse=!1,ht().get("IS_NODE")&&Ta("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:t,dtype:n,refCount:1}),a}makeTensorInfo(t,e,n){let a;if("string"===e&&null!=n&&n.length>0&&q(n[0])){const r=n.map((t=>tr(t)));a=this.write(r,t,e)}else a=this.write(n,t,e);return{dataId:a,shape:t,dtype:e}}refCount(t){if(this.data.has(t)){return this.data.get(t).refCount}return 0}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,a,r){this.data.set(t,{values:e,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){return zu(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return function(t,e){if(Array.isArray(t))return t;if("float32"===e)return t instanceof Float32Array?t:new Float32Array(t);if("int32"===e)return t instanceof Int32Array?t:new Int32Array(t);if("bool"===e||"string"===e)return Uint8Array.from(new Int32Array(t));throw new Error("Unknown dtype ".concat(e))}(this.data.get(t).values,e)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>er(t)));return Ks(t.shape,t.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ks(t.shape,t.dtype,e)}makeOutput(t,e,n){return ns().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=$a();t();return{kernelMs:$a()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Ov([t],"where");const e=this.readSync(t.dataId);return Mv(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Lv.nextDataId=0;function zv(t){return(e,n,a)=>{const r=H(n,e.length);for(let s=0;s<e.length;++s)r[s]=t(e[s],a);return r}}function Pv(t,e,n){return Bv(t,zv(e),n)}function Bv(t,e,n){return a=>{let{inputs:r,attrs:s,backend:o}=a;const{x:i}=r;Ov(i,t);const c=o,l=c.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=yh(l)}else u=l;const h=n||i.dtype,d=e(u,h,s);return c.makeTensorInfo(i.shape,h,d)}}is("cpu",(()=>new Lv),1);const Wv=Pv(pe,(t=>t>=0?t:Math.exp(t)-1)),Uv={kernelName:pe,backendName:"cpu",kernelFunc:Wv};function Vv(t){const{inputs:e,backend:n}=t,{x:a}=e;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Gv={kernelName:_e,backendName:"cpu",kernelFunc:Vv};function Hv(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{alpha:s}=a;Ov([r],"leakyRelu");const o=O(r.shape),i=n.data.get(r.dataId).values,c=G("float32",o);for(let l=0;l<i.length;l++)c[l]=i[l]<0?s*i[l]:i[l];return n.makeTensorInfo(r.shape,"float32",c)}const jv={kernelName:Le,backendName:"cpu",kernelFunc:Hv};function Kv(t){return(e,n,a,r,s)=>{const o=wo(e,n),i=o.length,c=Z(o),l=G(s,O(o)),u=e.length,h=n.length,d=Z(e),p=Z(n),f=xo(e,o),m=xo(n,o);if(f.length+m.length===0)for(let g=0;g<l.length;++g)l[g]=t(a[g%a.length],r[g%r.length]);else for(let g=0;g<l.length;++g){const e=ot(g,i,c),n=e.slice(-u);f.forEach((t=>n[t]=0));const s=st(n,u,d),o=e.slice(-h);m.forEach((t=>o[t]=0));const y=st(o,h,p);l[g]=t(a[s],r[y])}return[l,o]}}const qv=Kv(((t,e)=>t<0?e*t:t));function Xv(t){const{inputs:e,backend:n}=t,{x:a,alpha:r}=e;Ov([a,r],"prelu");const s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,[i,c]=qv(a.shape,r.shape,s,o,"float32");return n.makeTensorInfo(c,"float32",i)}const Yv={kernelName:bn,backendName:"cpu",kernelFunc:Xv},Qv=Pv(Tn,(t=>Math.max(0,t))),Jv={kernelName:Tn,backendName:"cpu",kernelFunc:Qv},Zv=Pv(Dn,(t=>Math.min(Math.max(0,t),6))),$v={kernelName:Dn,backendName:"cpu",kernelFunc:Zv},tw=zv((t=>1/(1+Math.exp(-t)))),ew=Pv(jn,(t=>1/(1+Math.exp(-t)))),nw={kernelName:jn,backendName:"cpu",kernelFunc:ew};function aw(t,e,n,a,r){if("linear"===n)return Vv({inputs:{x:e},backend:t});if("relu"===n)return Qv({inputs:{x:e},backend:t});if("elu"===n)return Wv({inputs:{x:e},backend:t});if("relu6"===n)return Zv({inputs:{x:e},backend:t});if("prelu"===n)return Xv({inputs:{x:e,alpha:a},backend:t});if("leakyrelu"===n)return Hv({inputs:{x:e},backend:t,attrs:{alpha:r}});if("sigmoid"===n)return ew({inputs:{x:e},backend:t});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function rw(t){const{inputs:e,backend:n}=t,{real:a,imag:r}=e,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",o)},i}const sw={kernelName:Vt,backendName:"cpu",kernelFunc:rw};function ow(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return rw({inputs:{real:ow(t,e,"float32"),imag:ow(t,e,"float32")},backend:t})}const a=nt(O(e),n);return t.makeTensorInfo(e,n,a)}function iw(t){const{inputs:e,backend:n}=t,{input:a}=e,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const cw={kernelName:Sn,backendName:"cpu",kernelFunc:iw};function lw(t,e,n,a){if("int32"===a){return[e,"int32",Int32Array.from(t)]}if("bool"===a){const a=Za([0],n),[r,s]=Kv(((t,e)=>t!==e?1:0))(e,[],t,a,"bool");return[s,"bool",r]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function uw(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return Vv({inputs:{x:r},backend:n});const t=ow(n,r.shape,r.dtype),e=uw({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=rw({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),a}if("complex64"===r.dtype){const t=iw({inputs:{input:r},backend:n}),e=uw({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),e}if(!j(r.dtype,s)){const t=Vv({inputs:{x:r},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:s}}const o=n.data.get(r.dataId).values,[i,c,l]=lw(o,r.shape,r.dtype,s);return n.makeTensorInfo(i,c,l)}const hw={kernelName:Bt,backendName:"cpu",kernelFunc:uw};function dw(t,e,n,a){return null==n?n=>{let{inputs:r,backend:s}=n;const{a:o,b:i}=r,c=s;Ov([o,i],t);const l=c.data.get(o.dataId).values,u=c.data.get(i.dataId).values,h="string"===o.dtype?yh(l):l,d="string"===o.dtype?yh(u):u,p=a||o.dtype,[f,m]=e(o.shape,i.shape,h,d,p);return c.makeTensorInfo(m,p,f)}:t=>{let{inputs:r,backend:s}=t;const{a:o,b:i}=r,c=s;if("complex64"===o.dtype||"complex64"===i.dtype){const t=uw({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),e=c.data.get(t.dataId),a=e.complexTensorInfos.real,r=e.complexTensorInfos.imag,s=c.data.get(a.dataId).values,l=c.data.get(r.dataId).values,u=uw({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(u.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=c.data.get(d.dataId).values,m=c.data.get(p.dataId).values,[g,y,b]=n(o.shape,i.shape,s,l,f,m),x=c.makeTensorInfo(b,"float32",g),v=c.makeTensorInfo(b,"float32",y),w=rw({inputs:{real:x,imag:v},backend:c});return c.disposeIntermediateTensorInfo(t),c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(v),w}{const t=c.data.get(o.dataId).values,n=c.data.get(i.dataId).values,r=a||o.dtype,[s,l]=e(o.shape,i.shape,t,n,r);return c.makeTensorInfo(l,r,s)}}}function pw(t){return(e,n,a,r,s,o)=>{const i=wo(e,n),c=O(i),l=i.length,u=Z(i),h=G("float32",c),d=G("float32",c),p=xo(e,i),f=xo(n,i),m=zu(a,r),g=zu(s,o),y=e.length,b=Z(e),x=n.length,v=Z(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const e=w%m.length,n=w%g.length,a=t(m[2*e],m[2*e+1],g[2*n],g[2*n+1]);h[w]=a.real,d[w]=a.imag}else for(let w=0;w<h.length;w++){const e=ot(w,l,u),n=e.slice(-y);p.forEach((t=>n[t]=0));const a=st(n,y,b),r=e.slice(-x);f.forEach((t=>r[t]=0));const s=st(r,x,v),o=t(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);h[w]=o.real,d[w]=o.imag}return[h,d,i]}}const fw=Kv(((t,e)=>t+e)),mw=pw(((t,e,n,a)=>({real:t+n,imag:e+a}))),gw=dw(xt,fw,mw),yw={kernelName:xt,backendName:"cpu",kernelFunc:gw};function bw(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{shape:s}=a,o=O(r.shape),i=W(s,o),c=O(i);A(o===c,(()=>"The new shape (".concat(i,") has ").concat(c," elements and the old ")+"shape (".concat(r.shape,") has ").concat(o," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(null!=l.complexTensorInfos){const t=l.complexTensorInfos.real,e=l.complexTensorInfos.imag;t.shape=i,e.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const xw={kernelName:En,backendName:"cpu",kernelFunc:bw};function vw(t){const{inputs:e,backend:n,attrs:a}=t,{a:r,b:s}=e,{transposeA:o,transposeB:i}=a;Ov([r,s],"matMul");const c=r.shape.length,l=s.shape.length,u=o?r.shape[c-2]:r.shape[c-1],h=i?s.shape[l-1]:s.shape[l-2],d=o?r.shape[c-1]:r.shape[c-2],p=i?s.shape[l-2]:s.shape[l-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=O(f),y=O(m),b=wo(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,p]);A(u===h,(()=>"Error in matMul: inner shapes (".concat(u,") and (")+"".concat(h,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(s.shape," and transposeA=").concat(o)+" and transposeB=".concat(i," must match.")));const x=i?[y,p,h]:[y,h,p],v=bw({inputs:{x:r},backend:n,attrs:{shape:o?[g,u,d]:[g,d,u]}}),w=bw({inputs:{x:s},backend:n,attrs:{shape:x}}),k=o?v.shape[1]:v.shape[2],I=o?v.shape[2]:v.shape[1],S=i?w.shape[1]:w.shape[2],N=Math.max(g,y),T=n.data.get(v.dataId).values,E=n.data.get(w.dataId).values,C=Z(v.shape),R=Z(w.shape),[_,D,F]=o?[C[0],1,C[1]]:[C[0],C[1],1],[M,L,z]=i?[1,R[1],R[0]]:[R[1],1,R[0]],P=I*S,B=Ks([N,I,S],v.dtype),W=B.values,U=n.blockSize;for(let A=0;A<N;A++){const t=A%g,e=A%y;for(let n=0;n<I;n+=U){const a=Math.min(n+U,I);for(let r=0;r<S;r+=U){const s=Math.min(r+U,S);for(let o=0;o<k;o+=U){const i=Math.min(o+U,k);for(let c=n;c<a;c++)for(let n=r;n<s;n++){let a=0;for(let r=o;r<i;r++){a+=T[t*_+c*D+r*F]*E[r*M+n*L+e*z]}W[A*P+(c*S+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,B.dtype,B.values)}const ww={kernelName:Ot,backendName:"cpu",kernelFunc:vw};const kw={kernelName:Ia,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:r,b:s,bias:o,preluActivationWeights:i}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;let d,p,f;const m=[];d=vw({inputs:{a:r,b:s},attrs:{transposeA:c,transposeB:l},backend:n}),o&&(p=gw({inputs:{a:d,b:o},backend:n}),m.push(d),d=p),u&&(f=aw(n,d,u,i,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function Iw(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const Sw={kernelName:gt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;Ov(e,"abs");let a=new Float32Array(O(e.shape));return a=Iw(n.data.get(e.dataId).values),n.makeOutput(a,e.shape,e.dtype)}},Nw=Pv(yt,(t=>Math.acos(t))),Tw={kernelName:yt,backendName:"cpu",kernelFunc:Nw},Ew=Pv(bt,(t=>Math.acosh(t))),Cw={kernelName:bt,backendName:"cpu",kernelFunc:Ew};const Rw={kernelName:vt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,a=e;Ov(e,"addN");const r=a.map((t=>n.data.get(t.dataId).values)),s=Ks(a[0].shape,a[0].dtype),o=s.values;for(let i=0;i<a.length;i++){const t=r[i];for(let e=0;e<o.length;e++)o[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function _w(t,e,n,a,r){const s=e.length,o=O(e),i=Z(e),c=Z(r),l=G(n,O(r));for(let u=0;u<o;++u){const e=ot(u,s,i),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[a[t]];l[st(n,s,c)]=t[u]}return l}function Aw(t){const{inputs:e,attrs:n,backend:a}=t,{x:r}=e,{perm:s}=n;Ov(r,"transpose");const o=r.shape.length,i=new Array(o);for(let l=0;l<i.length;l++)i[l]=r.shape[s[l]];const c=_w(a.data.get(r.dataId).values,r.shape,r.dtype,s,i);return{dataId:a.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const Dw={kernelName:ga,backendName:"cpu",kernelFunc:Aw};const Fw={kernelName:wt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a;Ov(r,"all");const i=U(s,r.shape);let c=i;const l=lc(c,r.shape.length);let u=r;null!=l&&(u=Aw({inputs:{x:r},backend:n,attrs:{perm:l}}),c=hc(c.length,r.shape.length)),cc("all",c,u.shape.length);const[h,d]=oc(u.shape,c),p=O(d),f=nt(O(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const t=y*p;let e=m[t];for(let n=0;n<p;++n){const a=m[t+n];e=e&&a}f[y]=e}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(o){const t=bw({inputs:{x:g},backend:n,attrs:{shape:ic(h,i)}});return n.disposeIntermediateTensorInfo(g),t}return g}};const Ow={kernelName:kt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a;Ov(r,"any");const i=U(s,r.shape);let c=i;const l=lc(c,r.shape.length);let u=r;null!=l&&(u=Aw({inputs:{x:r},backend:n,attrs:{perm:l}}),c=hc(c.length,r.shape.length)),cc("any",c,u.shape.length);const[h,d]=oc(u.shape,c),p=O(d),f=nt(O(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const t=y*p;let e=m[t];for(let n=0;n<p;++n){const a=m[t+n];e=e||a}f[y]=e}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(o){const t=bw({inputs:{x:g},backend:n,attrs:{shape:ic(h,i)}});return n.disposeIntermediateTensorInfo(g),t}return g}};const Mw={kernelName:It,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s}=a;Ov(r,"argMax");let o=U(s,r.shape);const i=lc(o,r.shape.length);let c=r;const l=[];null!=i&&(c=Aw({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=hc(o.length,c.shape.length)),o=[o[0]],cc("argMax",o,c.shape.length);const[u,h]=oc(c.shape,o),d=nt(O(u),"int32"),p=O(h),f=n.data.get(c.dataId).values;for(let m=0;m<d.length;++m){const t=m*p;let e=f[t],n=0;for(let a=0;a<p;++a){const r=f[t+a];r>e&&(e=r,n=a)}d[m]=n}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(u,"int32",d)}};const Lw={kernelName:St,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s}=a;Ov(r,"argMin");let o=U(s,r.shape);const i=lc(o,r.shape.length);let c=r;const l=[];null!=i&&(c=Aw({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=hc(o.length,c.shape.length)),o=[o[0]],cc("argMin",o,c.shape.length);const[u,h]=oc(c.shape,o),d=nt(O(u),"int32"),p=O(h),f=n.data.get(c.dataId).values;for(let m=0;m<d.length;++m){const t=m*p;let e=f[t],n=0;for(let a=0;a<p;++a){const r=f[t+a];r<e&&(e=r,n=a)}d[m]=n}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(u,"int32",d)}},zw=Pv(Nt,(t=>Math.asin(t))),Pw={kernelName:Nt,backendName:"cpu",kernelFunc:zw},Bw=Pv(Tt,(t=>Math.asinh(t))),Ww={kernelName:Tt,backendName:"cpu",kernelFunc:Bw},Uw=Pv(Et,(t=>Math.atan(t))),Vw={kernelName:Et,backendName:"cpu",kernelFunc:Uw},Gw=Kv(((t,e)=>Math.atan2(t,e))),Hw=dw(Rt,Gw),jw={kernelName:Rt,backendName:"cpu",kernelFunc:Hw},Kw=Pv(Ct,(t=>Math.atanh(t))),qw={kernelName:Ct,backendName:"cpu",kernelFunc:Kw};function Xw(t,e,n,a,r,s){const o=r.strideHeight,i=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,u=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ks(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let v=0;v<r.batchSize;++v){const e=v*y,n=v*a[0];for(let m=0;m<r.inChannels;++m)for(let y=0;y<r.outHeight;++y){const v=y*o-d,w=Math.max(0,v),k=Math.min(r.inHeight,u+v),I=e+y*b;for(let e=0;e<r.outWidth;++e){const o=e*i-p,u=Math.max(0,o),d=Math.min(r.inWidth,h+o);let y=f,b=0,v=0;for(let e=w;e<k;e+=c){const r=n+e*a[1];for(let e=u;e<d;e+=l){const n=t[r+e*a[2]+m];"max"===s&&n>y?y=n:"avg"===s&&(b+=n,v++)}if(isNaN(y))break}g[I+e*x+m]="avg"===s?b/v:y}}}return m}function Yw(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=Ks(a.outShape,"int32"),i=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m=Ks(e,n,t);for(let g=0;g<a.batchSize;++g)for(let t=0;t<a.inChannels;++t)for(let e=0;e<a.outHeight;++e){const n=e*i-p;let y=n;for(;y<0;)y+=l;const b=Math.min(a.inHeight,h+n);for(let i=0;i<a.outWidth;++i){const h=i*c-f;let p=h;for(;p<0;)p+=u;const x=Math.min(a.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let e=y;e<b;e+=l){const o=e-n;for(let n=p;n<x;n+=u){const i=n-h,c=m.get(g,e,n,t);c>v&&(v=c,w=r?s?((g*a.inHeight+e)*a.inWidth+n)*a.inChannels+t:(e*a.inWidth+n)*a.inChannels+t:o*d+i)}}o.set(w,g,e,i,t)}}return o}function Qw(t,e,n,a,r,s){const o=r.strideDepth,i=r.strideHeight,c=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ks(r.outShape,n),v=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],S=r.outShape[4];for(let N=0;N<r.batchSize;++N){const e=N*w,n=N*a[0];for(let x=0;x<r.inChannels;++x)for(let w=0;w<r.outDepth;++w){const N=w*o-m;let T=N;for(;T<0;)T+=l;const E=Math.min(r.inDepth,d+N),C=e+w*k;for(let e=0;e<r.outHeight;++e){const o=e*i-g;let d=o;for(;d<0;)d+=u;const m=Math.min(r.inHeight,p+o),w=C+e*I;for(let e=0;e<r.outWidth;++e){const o=e*c-y;let i=o;for(;i<0;)i+=h;const p=Math.min(r.inWidth,f+o),g=w+e*S;let k=b,I=0,N=0;for(let e=T;e<E;e+=l){const r=n+e*a[1];for(let e=d;e<m;e+=u){const n=r+e*a[2];for(let e=i;e<p;e+=h){const r=t[n+e*a[3]+x];if("max"===s&&r>k?k=r:"avg"===s&&(I+=r,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+x]="avg"===s?I/Math.max(N,1):k}}}}return x}const Jw={kernelName:_t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;Ov(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;A(mi(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=si(r.shape,s,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&M(l.inShape,l.outShape))u=Vv({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=Z(r.shape),a=Xw(t,r.shape,r.dtype,e,l,"avg");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const Zw={kernelName:Dt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a;Ov(r,"avgPool3d");const u=oi(r.shape,s,o,1,i,c,l),h=Qw(n.data.get(r.dataId).values,r.shape,r.dtype,Z(r.shape),u,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const $w={kernelName:Ft,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;Ov([r,s],"avgPool3DGrad");const u=oi(s.shape,o,i,1,c,l),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,x=u.dilationWidth,v=u.effectiveFilterDepth,w=u.effectiveFilterHeight,k=u.effectiveFilterWidth,I=v-1-u.padInfo.front,S=k-1-u.padInfo.left,N=w-1-u.padInfo.top,T=Ks(s.shape,"float32"),E=1/(f*m*g),C=n.bufferSync(r);for(let R=0;R<u.batchSize;++R)for(let t=0;t<u.inChannels;++t)for(let e=0;e<u.inDepth;++e)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=e-I,s=n-N,o=a-S;let i=0;for(let e=0;e<v;e+=y){const n=(r+e)/h;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let e=0;e<w;e+=b){const a=(s+e)/d;if(!(a<0||a>=u.outHeight||Math.floor(a)!==a))for(let e=0;e<k;e+=x){const r=(o+e)/p;if(r<0||r>=u.outWidth||Math.floor(r)!==r)continue;i+=C.get(R,n,a,r,t)}}}T.set(i*E,R,e,n,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const tk={kernelName:At,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s}=e,o=s;Ov([r,s],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=si(o.shape,i,c,1,l),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,x=b-1-u.padInfo.left,v=y-1-u.padInfo.top,w=Ks(o.shape,"float32"),k=1/(p*f),I=n.data.get(r.dataId).values,S=Ks(r.shape,"float32",I);for(let N=0;N<u.batchSize;++N)for(let t=0;t<u.inChannels;++t)for(let e=0;e<u.inHeight;++e)for(let n=0;n<u.inWidth;++n){const a=e-v,r=n-x;let s=0;for(let e=0;e<y;e+=m){const n=(a+e)/h;if(!(n<0||n>=u.outHeight||Math.floor(n)!==n))for(let e=0;e<b;e+=g){const a=(r+e)/d;if(a<0||a>=u.outWidth||Math.floor(a)!==a)continue;s+=S.get(N,n,a,t)}}w.set(s*k,N,e,n,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const ek={kernelName:Ne,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,scale:s,offset:o,mean:i,variance:c}=e;A(i.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),A(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),A(null==s||i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Ov([r,i,c,s,o],"batchNorm");let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=n.data.get(c.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=p.length,b=d.length,x=h.length;let v=0,w=0,k=0,I=0;for(let S=0;S<u.length;++S)m[S]=f[v++]+(u[S]-h[w++])*p[k++]/Math.sqrt(d[I++]+l),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function nk(t,e,n,a,r){const s=Qo(a,e,n),o=O(n),i=Z(a);if(s){const n=Jo(e,i);return"string"===r?t.slice(n,n+o):t.subarray(n,n+o)}const c=Ks(a,r,"string"===r?yh(t):t),l=Ks(n,r);for(let u=0;u<l.size;++u){const t=l.indexToLoc(u),n=t.map(((t,n)=>t+e[n]));l.set(c.get(...n),...t)}return"string"===r?bh(l.values):l.values}function ak(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{begin:s,size:o}=a;Ov(r,"slice");const[i,c]=Zo(r,s,o);Po(r,i,c);const l=nk(n.data.get(r.dataId).values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,l)}const rk={kernelName:Un,backendName:"cpu",kernelFunc:ak};const sk={kernelName:Mt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockShape:s,crops:o}=a;Ov([r],"batchToSpaceND");const i=s.reduce(((t,e)=>t*e)),c=vu(r.shape,s,i),l=wu(c.length,s.length),u=ku(r.shape,s,i),h=Iu(o,s.length),d=Su(u,o,s.length),p=bw({inputs:{x:r},backend:n,attrs:{shape:c}}),f=Aw({inputs:{x:p},backend:n,attrs:{perm:l}}),m=bw({inputs:{x:f},backend:n,attrs:{shape:u}}),g=ak({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function ok(t,e,n,a,r){const s=O(a),o=nt(r,n);for(let i=0;i<t.length;i++){const n=t[i];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(o[n]+=s>0?e[i]:1)}return o}function ik(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=t.shape[0],s=t.shape[1],o=Ks([r,n],e.dtype);for(let i=0;i<r;i++)for(let r=0;r<s;r++){const s=t.get(i,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?o.set(1,i,s):e.size>0?o.set(o.get(i,s)+e.get(i,r),i,s):o.set(o.get(i,s)+1,i,s))}return o}const ck={kernelName:Lt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,weights:s}=e,{size:o}=a,i=ok(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}},lk=Kv(((t,e)=>t&e)),uk={kernelName:zt,backendName:"cpu",kernelFunc:dw(zt,lk)};const hk={kernelName:Pt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:a,s1:r}=e,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=wo(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},dk=zv((t=>Math.ceil(t))),pk=Bv(Wt,dk),fk={kernelName:Wt,backendName:"cpu",kernelFunc:pk},mk=Pv(Ut,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),gk={kernelName:Ut,backendName:"cpu",kernelFunc:mk},yk={kernelName:Gt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,a=new Float32Array(O(e.shape)),r=n.data.get(e.dataId),s=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values;for(let l=0;l<i.length;l++){const t=i[l],e=c[l];a[l]=Math.hypot(t,e)}return n.makeOutput(a,e.shape,"float32")}};function bk(t,e,n,a){const r=H(n,O(e));if(a&&"string"!==n){let e=0;t.forEach((t=>{const n=O(t.shape);r.set(t.vals,e),e+=n}))}else{let a=0;t.forEach((t=>{const s="string"===n?yh(t.vals):t.vals;let o=0;for(let n=0;n<t.shape[0];++n){const i=n*e[1]+a;for(let e=0;e<t.shape[1];++e)r[i+e]=s[o++]}a+=t.shape[1]}))}return r}function xk(t){const{inputs:e,backend:n}=t,{input:a}=e,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const vk={kernelName:De,backendName:"cpu",kernelFunc:xk};function wk(t){const{inputs:e,backend:n,attrs:a}=t,{axis:r}=a,s=U(r,e[0].shape)[0];uu(e.map((t=>t.shape)),s);let o=hu(e.map((t=>t.shape)),s);if(0===O(o))return n.makeTensorInfo(o,e[0].dtype,[]);const i=e.filter((t=>O(t.shape)>0));if(1===i.length)return Vv({inputs:{x:i[0]},backend:n});if("complex64"===i[0].dtype){const t=i.map((t=>iw({inputs:{input:t},backend:n}))),e=i.map((t=>xk({inputs:{input:t},backend:n}))),a=wk({inputs:t,backend:n,attrs:{axis:s}}),r=wk({inputs:e,backend:n,attrs:{axis:s}}),o=rw({inputs:{real:a,imag:r},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),o}const c=i.map((t=>{const e=O(t.shape.slice(s));return bw({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),l=c.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));o=hu(c.map((t=>t.shape)),1);const u=1===c[0].shape[0],h=bk(l,o,e[0].dtype,u),d=hu(i.map((t=>t.shape)),s),p=n.makeTensorInfo(d,e[0].dtype,h);return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}const kk={kernelName:Ht,backendName:"cpu",kernelFunc:wk};function Ik(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s}=e,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a;Ov([r,s],"conv2d");const h=yi(c),d=ii(r.shape,s.shape,o,l,i,u,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new mr(d.outShape,r.dtype),w=Z(r.shape),k=Z(s.shape),I=w[0],S=x?w[1]:w[2],N=x?w[2]:1,T=x?1:w[1],E=v.strides[0],C=x?v.strides[1]:v.strides[2],R=x?v.strides[2]:1,_=x?1:v.strides[1],A=n.data.get(r.dataId).values,D=n.data.get(s.dataId).values,F=v.values;for(let O=0;O<d.batchSize;++O){const t=O*I,e=O*E;for(let n=0;n<d.outHeight;++n){const a=e+n*C,r=n*d.strideHeight-b;for(let e=0;e<p;++e){const n=r+e*m;if(n<0||n>=d.inHeight)continue;const s=e*k[0],o=t+n*S;for(let t=0;t<d.outWidth;++t){const e=a+t*R,n=t*d.strideWidth-y;for(let t=0;t<f;++t){const a=n+t*g;if(a<0||a>=d.inWidth)continue;const r=o+a*N;let i=s+t*k[1];for(let t=0;t<d.inChannels;++t){const n=A[r+t*T];for(let t=0;t<d.outChannels;++t)F[e+t*_]+=n*D[i+t];i+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const Sk={kernelName:jt,backendName:"cpu",kernelFunc:Ik};const Nk={kernelName:Kt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:s}=e,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a;Ov([r,s],"conv2dBackpropFilter");const h=yi(c),d=ii(r.shape,u,o,1,i,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new mr(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,I=new mr(r.shape,r.dtype,w),S=new mr(s.shape,s.dtype,k);for(let N=0;N<m;++N){const t=Math.max(0,Math.ceil((v-N)/p)),e=Math.min(d.outHeight,(d.inHeight+v-N)/p);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((x-n)/f)),r=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let s=0;s<d.inChannels;++s)for(let o=0;o<d.outChannels;++o){let i=0;for(let c=0;c<d.batchSize;++c)for(let l=t;l<e;++l){const t=N+l*p-v;for(let e=a;e<r;++e){const a=n+e*f-x;i+=y?I.get(c,t,a,s)*S.get(c,l,e,o):I.get(c,s,t,a)*S.get(c,o,l,e)}}b.set(i,N,n,s,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Tk={kernelName:qt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:s}=e,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a;Ov([r,s],"conv2dBackpropInput");const h=Z(s.shape),d=Z(r.shape);let p=yi(l);const f=ii(o,s.shape,i,1,c,u,!1,p),m=new mr(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:E,outChannels:C,outHeight:R,outWidth:_,strideHeight:A,strideWidth:D}=f;p=f.dataFormat;const F=I-1-f.padInfo.top,O=S-1-f.padInfo.left,M="channelsLast"===p,L=m.strides[0],z=M?m.strides[1]:m.strides[2],P=M?m.strides[2]:1,B=M?1:m.strides[1],W=d[0],U=M?d[1]:d[2],V=M?d[2]:1,G=M?1:d[1];for(let H=0;H<k;++H)for(let t=0;t<N;++t)for(let e=0;e<T;++e){const n=e-F,a=Math.max(0,Math.ceil(n/A)),r=Math.min(R,(I+n)/A);for(let s=0;s<E;++s){const o=s-O,i=Math.max(0,Math.ceil(o/D)),c=Math.min(_,(S+o)/D);let l=0;for(let e=a;e<r;++e){const a=e*A-n;for(let n=i;n<c;++n){const r=W*H+U*e+V*n,s=x*(I-1-a)+v*(S-1-(n*D-o))+w*t;for(let t=0;t<C;++t){l+=y[r+G*t]*b[s+t]}}}g[L*H+z*e+P*s+B*t]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Ek={kernelName:Xt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s}=e,{strides:o,pad:i,dilations:c}=a;Ov([r,s],"conv3d");const l=ci(r.shape,s.shape,o,c,i),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,v=new mr(l.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,I=v.values,S=Z(r.shape),N=Z(s.shape);for(let T=0;T<l.batchSize;++T){const t=T*S[0],e=T*v.strides[0];for(let n=0;n<l.outDepth;++n){const a=e+n*v.strides[1],r=n*l.strideDepth-y;for(let e=0;e<u;++e){const n=r+e*p;if(n<0||n>=l.inDepth)continue;const s=e*N[0],o=t+n*S[1];for(let t=0;t<l.outHeight;++t){const e=a+t*v.strides[2],n=t*l.strideHeight-x;for(let t=0;t<h;++t){const a=n+t*f;if(a<0||a>=l.inHeight)continue;const r=s+t*N[1],i=o+a*S[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,a=t*l.strideWidth-b;for(let t=0;t<d;++t){const e=a+t*m;if(e<0||e>=l.inWidth)continue;const s=r+t*N[2],o=i+e*l.inChannels;let c=s;for(let t=0;t<l.inChannels;++t){const e=w[o+t];for(let t=0;t<l.outChannels;++t)I[n+t]+=e*k[c+t];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Ck={kernelName:Yt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:s}=e,{strides:o,pad:i,filterShape:c}=a;Ov([r,s],"conv3dBackpropFilterV2");const l=Z(r.shape),u=Z(s.shape),h=ci(r.shape,c,o,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new mr(h.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,E,C]=u,R=n.data.get(r.dataId).values,[_,A,D,F]=l,O=h.padInfo.front,M=h.padInfo.left,L=h.padInfo.top;for(let z=0;z<m;++z){const t=Math.max(0,Math.ceil((O-z)/d)),e=Math.min(h.outDepth,(h.inDepth+O-z)/d),n=z*v;for(let a=0;a<g;++a){const r=Math.max(0,Math.ceil((L-a)/p)),s=Math.min(h.outHeight,(h.inHeight+L-a)/p),o=a*w+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((M-n)/f)),c=Math.min(h.outWidth,(h.inWidth+M-n)/f),l=n*k+o;for(let o=0;o<h.inChannels;++o){const u=o*I+l;for(let l=0;l<h.outChannels;++l){let m=0;for(let u=0;u<h.batchSize;++u){const h=u*_,g=u*N;for(let u=t;u<e;++u){const t=(z+u*d-O)*A+h,e=u*T+g;for(let u=r;u<s;++u){const r=(a+u*p-L)*D+t,s=u*E+e;for(let t=i;t<c;++t){const e=t*C+s;m+=R[(n+t*f-M)*F+r+o]*S[e+l]}}}}x[u+l]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Rk={kernelName:Qt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:s}=e,{pad:o,strides:i,inputShape:c}=a;Ov([r],"conv3dBackpropInputV2");const l=Z(r.shape),u=Z(s.shape),h=ci(c,s.shape,i,1,o),d=new mr(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(r.dataId).values,[x,v,w,k]=l,I=n.data.get(s.dataId).values,[S,N,T,E]=u,{batchSize:C,filterDepth:R,filterHeight:_,filterWidth:A,inChannels:D,inDepth:F,inHeight:O,inWidth:M,outChannels:L,outDepth:z,outHeight:P,outWidth:B,strideDepth:W,strideHeight:U,strideWidth:V}=h,G=R-1-h.padInfo.front,H=_-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let K=0;K<C;++K)for(let t=0;t<D;++t)for(let e=0;e<F;++e){const n=e-G,a=Math.max(0,Math.ceil(n/W)),r=Math.min(z,(R+n)/W);for(let s=0;s<O;++s){const o=s-H,i=Math.max(0,Math.ceil(o/U)),c=Math.min(P,(_+o)/U);for(let l=0;l<M;++l){const u=l-j,h=Math.max(0,Math.ceil(u/V)),d=Math.min(B,(A+u)/V);let C=0;for(let e=a;e<r;++e){const a=e*W-n;for(let n=i;n<c;++n){const r=n*U-o;for(let s=h;s<d;++s){const o=x*K+v*e+w*n+k*s,i=S*(R-1-a)+N*(_-1-r)+T*(A-1-(s*V-u))+E*t;for(let t=0;t<L;++t){C+=b[o+t]*I[i+t]}}}}p[f*K+m*e+g*s+y*l+t]=C}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},_k=Pv(Jt,(t=>Math.cos(t))),Ak={kernelName:Jt,backendName:"cpu",kernelFunc:_k},Dk=Pv(Zt,(t=>Math.cosh(t))),Fk={kernelName:Zt,backendName:"cpu",kernelFunc:Dk};const Ok={kernelName:ee,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{image:r,boxes:s,boxInd:o}=e,{cropSize:i,method:c,extrapolationValue:l}=a,[u,h,d,p]=r.shape,f=s.shape[0],[m,g]=i,y=Ks([f,m,g,p],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(o.dataId).values,v=n.data.get(r.dataId).values,w=Z(r.shape),k=Z(y.shape);for(let I=0;I<f;I++){const t=4*I,e=b[t],n=b[t+1],a=b[t+2],r=b[t+3],s=x[I];if(s>=u)continue;const o=m>1?(a-e)*(h-1)/(m-1):0,i=g>1?(r-n)*(d-1)/(g-1):0;for(let u=0;u<m;u++){const t=m>1?e*(h-1)+u*o:.5*(e+a)*(h-1);if(t<0||t>h-1)for(let e=0;e<g;e++)for(let t=0;t<p;t++){const n=t+e*k[2]+u*k[1]+I*k[0];y.values[n]=l}else if("bilinear"===c){const e=Math.floor(t),a=Math.ceil(t),o=t-e;for(let t=0;t<g;t++){const c=g>1?n*(d-1)+t*i:.5*(n+r)*(d-1);if(c<0||c>d-1){for(let e=0;e<p;e++){const n=e+t*k[2]+u*k[1]+I*k[0];y.values[n]=l}continue}const h=Math.floor(c),f=Math.ceil(c),m=c-h;for(let n=0;n<p;n++){let r=n+h*w[2]+e*w[1]+s*w[0];const i=v[r];r=n+f*w[2]+e*w[1]+s*w[0];const c=v[r];r=n+h*w[2]+a*w[1]+s*w[0];const l=v[r];r=n+f*w[2]+a*w[1]+s*w[0];const d=i+(c-i)*m,p=l+(v[r]-l)*m;r=n+t*k[2]+u*k[1]+I*k[0],y.values[r]=d+(p-d)*o}}}else for(let e=0;e<g;++e){const a=g>1?n*(d-1)+e*i:.5*(n+r)*(d-1);if(a<0||a>d-1){for(let t=0;t<p;t++){const n=t+e*k[2]+u*k[1]+I*k[0];y.values[n]=l}continue}const o=Math.round(a),c=Math.round(t);for(let t=0;t<p;t++){const n=t+o*w[2]+c*w[1]+s*w[0],a=t+e*k[2]+u*k[1]+I*k[0];y.values[a]=v[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Mk={kernelName:$t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,exclusive:o,reverse:i}=a;Ov(r,"cumprod");const c=lc([s],r.shape.length);let l=r;null!=c&&(l=Aw({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=hc(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const h=Cr(l.dtype,"int32"),d=et(O(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let y=0;y<p.length;y+=f)for(let t=0;t<f;t++){const e=m(y,t);if(0===t)d[e]=o?1:p[e];else{const n=m(y,t-1);d[e]=o?p[n]*d[n]:p[e]*d[n]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=c){const t=Aw({inputs:{x:g},backend:n,attrs:{perm:uc(c)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),t}return g}};const Lk={kernelName:te,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,exclusive:o,reverse:i}=a;Ov(r,"cumsum");const c=lc([s],r.shape.length);let l=r;null!=c&&(l=Aw({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=hc(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const h=Cr(l.dtype,"int32"),d=nt(O(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let y=0;y<p.length;y+=f)for(let t=0;t<f;t++){const e=m(y,t);if(0===t)d[e]=o?0:p[e];else{const n=m(y,t-1);d[e]=o?p[n]+d[n]:p[e]+d[n]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=c){const t=Aw({inputs:{x:g},backend:n,attrs:{perm:uc(c)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),t}return g}};const zk={kernelName:ne,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,weights:s}=e,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const t=ok(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,t)}if(2===r.shape.length){const t=ik(n.bufferSync(r),n.bufferSync(s),o,i);return n.makeTensorInfo(t.shape,s.dtype,t.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const Pk={kernelName:ae,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockSize:s,dataFormat:o}=a;A("NHWC"===o,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(o)));const i=r.shape[0],c=r.shape[1],l=r.shape[2],u=r.shape[3],h=c*s,d=l*s,p=u/(s*s),f=n.data.get(r.dataId).values,m=new Float32Array(i*h*d*p);let g=0;for(let y=0;y<i;++y)for(let t=0;t<h;++t){const e=Math.floor(t/s),n=t%s;for(let t=0;t<d;++t){const a=Math.floor(t/s),r=(n*s+t%s)*p;for(let t=0;t<p;++t){const n=t+r+u*(a+l*(e+c*y));m[g++]=f[n]}}}return n.makeTensorInfo([i,h,d,p],r.dtype,m)}};function Bk(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s}=e,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=a;Ov([r,s],"depthwiseConv2DNative");const u=Z(r.shape),h=Z(s.shape);let d=c;null==d&&(d=[1,1]),A(mi(o,d),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(d,"'")));const p=ii(r.shape,s.shape,o,d,i,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,v=b.top,w=p.outChannels/p.inChannels,k=new mr(p.outShape,r.dtype),I=n.data.get(r.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let T=0;T<p.batchSize;++T){const t=T*u[0],e=T*k.strides[0];for(let n=0;n<p.outHeight;++n){const a=e+n*k.strides[1],r=n*p.strideHeight-v;for(let e=0;e<f;++e){const n=r+e*g;if(n<0||n>=p.inHeight)continue;const s=e*h[0],o=t+n*u[1];for(let t=0;t<p.outWidth;++t){const e=a+t*k.strides[2],n=t*p.strideWidth-x;for(let t=0;t<m;++t){const a=n+t*y;if(a<0||a>=p.inWidth)continue;const r=s+t*h[1],i=o+a*p.inChannels;let c=e,l=r;for(let t=0;t<p.inChannels;++t){const e=I[i+t];for(let t=0;t<w;++t)N[c+t]+=e*S[l+t];c+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Wk={kernelName:re,backendName:"cpu",kernelFunc:Bk};const Uk={kernelName:se,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:s}=e,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a;Ov([r,s],"depthwiseConv2dNativeBackpropFilter");const h=ii(r.shape,u,o,i,c,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new mr(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,w=new mr(r.shape,r.dtype,v),k=n.data.get(s.dataId).values,I=new mr(s.shape,s.dtype,k);for(let S=0;S<f;++S){const t=Math.max(0,Math.ceil((b-S)/d)),e=Math.min(h.outHeight,(h.inHeight+b-S)/d);for(let n=0;n<m;++n){const a=Math.max(0,Math.ceil((y-n)/p)),r=Math.min(h.outWidth,(h.inWidth+y-n)/p);for(let s=0;s<h.outChannels;++s){const o=Math.trunc(s/x),i=s%x;let c=0;for(let l=0;l<h.batchSize;++l)for(let i=t;i<e;++i){const t=S+i*d-b;for(let e=a;e<r;++e){const a=n+e*p-y;c+=w.get(l,t,a,o)*I.get(l,i,e,s)}}g.set(c,S,n,o,i)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const Vk={kernelName:oe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:s}=e,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a;Ov([r,s],"depthwiseConv2DNativeBackpropInput");const h=Z(r.shape),d=Z(s.shape),p=ii(u,s.shape,o,i,c,l,!0),f=new mr(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[v,w,k]=h,I=n.data.get(s.dataId).values,[S,N,T]=d,{batchSize:E,filterHeight:C,filterWidth:R,inChannels:_,inHeight:A,inWidth:D,outChannels:F,outHeight:O,outWidth:M,strideHeight:L,strideWidth:z}=p,P=C-1-p.padInfo.top,B=R-1-p.padInfo.left,W=F/_;for(let U=0;U<E;++U)for(let t=0;t<_;++t)for(let e=0;e<A;++e){const n=e-P,a=Math.max(0,Math.ceil(n/L)),r=Math.min(O,(C+n)/L);for(let s=0;s<D;++s){const o=s-B,i=Math.max(0,Math.ceil(o/z)),c=Math.min(M,(R+o)/z);let l=0;for(let e=a;e<r;++e){const a=e*L-n;for(let n=i;n<c;++n){const r=v*U+w*e+k*n,s=S*(C-1-a)+N*(R-1-(n*z-o))+T*t;for(let e=0;e<W;++e){l+=x[r+(t*W+e)]*I[s+e]}}}m[g*U+y*e+b*s+t]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const Gk={kernelName:ie,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,r=O(a.shape),s=n.data.get(a.dataId).values,o=Ks([r,r],a.dtype),i=o.values;for(let l=0;l<s.length;l++)i[l*r+l]=s[l];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,o.dtype,o.values)}},Hk={kernelName:ce,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r,filter:s}=e,{strides:o,pad:i,dilations:c}=a,l=n,u=l.data.get(r.dataId).values,h=r.shape.length,d=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:N,dilationWidth:T,outShape:E}=ri(r.shape,s.shape,o,i,"NHWC",c),C=O(E),R=E.length,_=H(r.dtype,C);for(let A=0;A<f;++A)for(let t=0;t<b;++t){const e=t*w-v.top;for(let n=0;n<x;++n){const a=n*k-v.left;for(let o=0;o<y;++o){let i=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const n=e+t*N;if(n>=0&&n<m)for(let e=0;e<S;++e){const c=a+e*T;if(c>=0&&c<g){const a=st([A,n,c,o],h,Z(r.shape)),l=st([t,e,o],p,Z(s.shape)),f=u[a]+d[l];f>i&&(i=f)}}}_[st([A,t,n,o],R,Z(E))]=i}}}return{dataId:l.write(Za(_,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},jk={kernelName:ue,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r,filter:s,dy:o}=e,{strides:i,pad:c,dilations:l}=a,u=n,h=tt(r.shape,u.data.get(r.dataId).values),d=tt(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=ri(r.shape,s.shape,i,c,"NHWC",l);A(o.rank===T.length,(()=>"Error in ".concat(ue,", dy ")+"must have the same rank as output ".concat(T.length,", but got ")+"".concat(o.rank)));const E=tt(T,u.data.get(o.dataId).values),C=at(s.shape,s.dtype);for(let R=0;R<p;++R)for(let t=0;t<y;++t){const e=t*v-x.top;for(let n=0;n<b;++n){const a=n*w-x.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=0,i=0;for(let t=0;t<k;++t){const n=e+t*S;if(n>=0&&n<f)for(let e=0;e<I;++e){const c=a+e*N;if(c>=0&&c<m){const a=h[R][n][c][r]+d[t][e][r];a>s&&(s=a,o=t,i=e)}}}C[o][i][r]+=E[R][t][n][r]}}}return{dataId:u.write(Za(C,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Kk={kernelName:le,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r,filter:s,dy:o}=e,{strides:i,pad:c,dilations:l}=a,u=n,h=tt(r.shape,u.data.get(r.dataId).values),d=tt(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=ri(r.shape,s.shape,i,c,"NHWC",l);A(o.rank===T.length,(()=>"Error in ".concat(le,", dy ")+"must have the same rank as output ".concat(T.length,", but got ")+"".concat(o.rank)));const E=tt(T,u.data.get(o.dataId).values),C=at(r.shape,r.dtype);for(let R=0;R<p;++R)for(let t=0;t<y;++t){const e=t*v-x.top;for(let n=0;n<b;++n){const a=n*w-x.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=e<0?0:e,i=a<0?0:a;for(let t=0;t<k;++t){const n=e+t*S;if(n>=0&&n<f)for(let e=0;e<I;++e){const c=a+e*N;if(c>=0&&c<m){const a=h[R][n][c][r]+d[t][e][r];a>s&&(s=a,o=n,i=c)}}}C[R][o][i][r]+=E[R][t][n][r]}}}return{dataId:u.write(Za(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const qk={kernelName:"Draw",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{image:r}=e,{canvas:s,options:o}=a,{contextOptions:i,imageOptions:c}=o||{},l=(null===c||void 0===c?void 0:c.alpha)||1,u=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const h=s.getContext(u,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==h)throw new Error("Could not get the context with ".concat(u," type."));const[d,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let x=0;x<d*p;++x){const t=[0,0,0,255*l];for(let n=0;n<f;n++){const e=m[x*f+n];if("float32"===r.dtype){if(e<0||e>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(e,"."))}else if("int32"===r.dtype&&(e<0||e>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(e,"."));1===f?(t[0]=e*g,t[1]=e*g,t[2]=e*g):t[n]=e*g}const e=4*x;y[e+0]=Math.round(t[0]),y[e+1]=Math.round(t[1]),y[e+2]=Math.round(t[2]),y[e+3]=Math.round(t[3])}s.width=p,s.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),r}},Xk=Kv(((t,e)=>t*e)),Yk=pw(((t,e,n,a)=>({real:t*n-e*a,imag:t*a+e*n}))),Qk=dw(on,Xk,Yk),Jk={kernelName:on,backendName:"cpu",kernelFunc:Qk};function Zk(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a;let i;Ov(r,"sum"),i="bool"===r.dtype?uw({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Vv({inputs:{x:r},backend:n});const c=i.shape.length,l=U(s,i.shape),u=lc(l,c);let h=l,d=i;null!=u&&(d=Aw({inputs:{x:i},backend:n,attrs:{perm:u}}),h=hc(h.length,c)),cc("sum",h,d.shape.length);const[p,f]=oc(d.shape,h);let m=ow(n,p,Cr(d.dtype,"int32"));const g=O(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let x=0;x<y.length;++x){const t=x*g;let e=0;for(let n=0;n<g;++n)e+=b[t+n];y[x]=e}if(o){const t=m;m=bw({inputs:{x:m},backend:n,attrs:{shape:ic(m.shape,l)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(i),null!=u&&n.disposeIntermediateTensorInfo(d),m}const $k={kernelName:Xn,backendName:"cpu",kernelFunc:Zk};const tI={kernelName:de,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{equation:r}=a,s=e,{allDims:o,summedDims:i,idDims:c}=Yu(r,s.length);Ju(o.length,c,s);const{path:l,steps:u}=Zu(i,c),h=u.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const t of u[m]){const{permutationIndices:e,expandDims:a}=Qu(p,c[t]);let r;$u(e)?r=s[t]:(r=Aw({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(r));const o=r.shape.slice();for(let t=0;t<a.length;++t)o.splice(a[t],0,1);M(r.shape,o)||(r=bw({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===d?d=r:(d=Qk({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=Zk({inputs:{x:d},backend:n,attrs:{axis:l[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}};const eI={kernelName:fe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:a,y:r}=e;Ov([a,r],"eluGrad");const s=new Float32Array(O(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values;for(let c=0;c<o.length;++c){const t=o[c];s[c]=t>=0?i[c]:i[c]*(t+1)}return n.makeTensorInfo(r.shape,"float32",s)}},nI=Kv(((t,e)=>t===e?1:0)),aI=dw(ge,nI,null,"bool"),rI={kernelName:ge,backendName:"cpu",kernelFunc:aI},sI=Au,oI=Du,iI=Fu,cI=Ou,lI=Mu,uI=Lu,hI=Pv(me,(t=>{const e=Math.sign(t),n=Math.abs(t),a=1/(1+sI*n);return e*(1-((((uI*a+lI)*a+cI)*a+iI)*a+oI)*a*Math.exp(-n*n))})),dI={kernelName:me,backendName:"cpu",kernelFunc:hI},pI=zv((t=>Math.exp(t))),fI=Bv(ye,pI,"float32"),mI={kernelName:ye,backendName:"cpu",kernelFunc:fI};function gI(t){const{inputs:e,backend:n,attrs:a}=t,{input:r}=e,{dim:s}=a,o=r.shape.length,i=r.shape.slice();let c=s;return s<0&&(A(-(o+1)<=s,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+s+1),i.splice(c,0,1),bw({inputs:{x:r},backend:n,attrs:{shape:i}})}const yI={kernelName:be,backendName:"cpu",kernelFunc:gI},bI=zv((t=>Math.expm1(t))),xI=Bv(xe,bI),vI={kernelName:xe,backendName:"cpu",kernelFunc:xI},wI=Kv(((t,e)=>t/e)),kI=dw(he,wI),II={kernelName:he,backendName:"cpu",kernelFunc:kI},SI=Kv(((t,e)=>t-e)),NI=pw(((t,e,n,a)=>({real:t-n,imag:e-a}))),TI=dw(ua,SI,NI),EI={kernelName:ua,backendName:"cpu",kernelFunc:TI};function CI(t,e,n){const a=t.shape,r=a[0],s=a[1],o=n.data.get(t.dataId),i=o.complexTensorInfos.real,c=o.complexTensorInfos.imag,l=[r,s],u=O(l),h=G("float32",u),d=G("float32",u);for(let g=0;g<r;g++){const t=ak({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=ak({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=rw({inputs:{real:t,imag:a},backend:n}),{real:o,imag:l}=RI(r,e,n),u=zu(o,l);for(let e=0;e<s;e++){const t=Uu(u,e);h[g*s+e]=t.real,d[g*s+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=rw({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function RI(t,e,n){const a=O(t.shape),r=n.data.get(t.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((i=a)&i-1)){const r=_I(s,o,a,e,n),i=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(i,"float32",r.real),e=n.makeTensorInfo(i,"float32",r.imag),s=n.makeTensorInfo([],"float32",Ja(a,"float32")),o=Vv({inputs:{x:s},backend:n}),c=II.kernelFunc({inputs:{a:t,b:s},backend:n}),l=II.kernelFunc({inputs:{a:e,b:o},backend:n}),u=n.data.get(c.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:u,imag:h}}return r}{const t=function(t,e,n){const a=new Float32Array(2*e);for(let r=0;r<e;r++){let s=0,o=0;for(let a=0;a<e;a++){const i=Hu(r*a,e,n),c=Uu(t,a);s+=c.real*i.real-c.imag*i.imag,o+=c.real*i.imag+c.imag*i.real}n&&(s/=e,o/=e),Vu(a,s,o,r)}return a}(zu(s,o),a,e);return Pu(t)}var i}function _I(t,e,n,a,r){if(1===n)return{real:t,imag:e};const s=zu(t,e),o=n/2,i=Bu(s),c=i.real,l=i.imag,u=[c.length],h=r.makeTensorInfo(u,"float32",c),d=r.makeTensorInfo(u,"float32",l),p=rw({inputs:{real:h,imag:d},backend:r}),f=Wu(s),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),v=rw({inputs:{real:b,imag:x},backend:r}),w=_I(c,l,o,a,r),k=w.real,I=w.imag,S=[k.length],N=r.makeTensorInfo(S,"float32",k),T=r.makeTensorInfo(S,"float32",I),E=rw({inputs:{real:N,imag:T},backend:r}),C=_I(m,g,o,a,r),R=C.real,_=C.imag,A=[R.length],D=r.makeTensorInfo(A,"float32",R),F=r.makeTensorInfo(A,"float32",_),O=rw({inputs:{real:D,imag:F},backend:r}),M=Gu(n,a),L=[M.real.length],z=r.makeTensorInfo(L,"float32",M.real),P=r.makeTensorInfo(L,"float32",M.imag),B=rw({inputs:{real:z,imag:P},backend:r}),W=Qk({inputs:{a:B,b:O},backend:r}),U=gw({inputs:{a:E,b:W},backend:r}),V=TI({inputs:{a:E,b:W},backend:r}),G=iw({inputs:{input:U},backend:r}),H=iw({inputs:{input:V},backend:r}),j=xk({inputs:{input:U},backend:r}),K=xk({inputs:{input:V},backend:r}),q=wk({inputs:[G,H],backend:r,attrs:{axis:0}}),X=wk({inputs:[j,K],backend:r,attrs:{axis:0}}),Y=r.data.get(q.dataId).values,Q=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(X),{real:Y,imag:Q}}const AI={kernelName:ve,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e,r=O(a.shape),s=a.shape[a.shape.length-1],o=bw({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=CI(o,!1,n),c=bw({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}};function DI(t){const{backend:e,attrs:n}=t,{shape:a,value:r,dtype:s}=n,o=s||Y(r),i=H(o,O(a));return function(t,e,n){t.fill(e)}(i,r),e.makeTensorInfo(a,o,i)}const FI={kernelName:we,backendName:"cpu",kernelFunc:DI};const OI={kernelName:ke,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{image:r}=e,s=a,o=G(r.dtype,O(r.shape)),[i,c,l,u]=r.shape,h=s.data.get(r.dataId).values;for(let d=0;d<i;d++){const t=d*l*c*u;for(let e=0;e<c;e++){const n=e*(l*u);for(let e=0;e<l;e++){const a=e*u;for(let r=0;r<u;r++){const s=Math.round(l-e-1),i=t+n+a+r;let c=h[i];if(s>=0&&s<l){c=h[t+n+s*u+r]}o[i]=c}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},MI=zv((t=>Math.floor(t))),LI=Bv(Ie,MI),zI={kernelName:Ie,backendName:"cpu",kernelFunc:LI},PI=Kv(((t,e)=>Math.floor(t/e))),BI=dw(Se,PI,null,"int32"),WI={kernelName:Se,backendName:"cpu",kernelFunc:BI};const UI={kernelName:Sa,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s,bias:o,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=Ik({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const t=m;if("NCHW"===u&&1===o.shape.length&&1!==o.shape[0]){const t=bw({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=gw({inputs:{a:m,b:t},backend:n}),n.disposeIntermediateTensorInfo(t)}else m=gw({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(t)}if(p){const t=m;if("NCHW"===u&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const t=bw({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=aw(n,m,p,t,f),n.disposeIntermediateTensorInfo(t)}else m=aw(n,m,p,i,f);n.disposeIntermediateTensorInfo(t)}return m}};const VI={kernelName:Na,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s,bias:o,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=Bk({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const t=m;m=gw({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=aw(n,m,p,i,f),n.disposeIntermediateTensorInfo(t)}return m}};function GI(t,e,n,a,r,s,o,i,c){const l=Ks([a,s],n);for(let u=0;u<a;u++){const n=[];let a=0;for(let e=0;e<r;e++){const s=t[u*r+e];a+=s*o[e],n.push(s)}if(a<0||a>=c/s)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(i));for(let t=0;t<s;t++)l.values[u*s+t]=e.get(...e.indexToLoc(a*s+t))}return l}const HI={kernelName:Ee,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:a,indices:r}=e,s=O(a.shape),o=r.shape,i=o[o.length-1],[c,l,u,h]=Nu(a,r);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const d=GI(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,l,i,u,h,a.shape,s);return n.makeTensorInfo(c,a.dtype,d.values)}};function jI(t,e,n){const a=Ks(n,t.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=e.locToIndex([s,o]);n[2]=e.values[i];const c=t.locToIndex(n);0<=c&&c<t.values.length&&(a.values[r]=t.values[c])}return a}const KI={kernelName:Te,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,indices:s}=e,{axis:o,batchDims:i}=a;Ov([r,s],"gatherV2");const c=U(o,r.shape)[0],l=n.data.get(s.dataId).values,u=r.shape[c];for(let x=0;x<l.length;++x){const t=l[x];A(t<=u-1&&t>=0,(()=>"GatherV2: the index value ".concat(t," is not in [0, ").concat(u-1,"]")))}let h=i;null==i&&(h=0);const d=O(s.shape),p=gh(r,s,c,h),f=bw({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=bw({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=jI(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},qI=Kv(((t,e)=>t>e?1:0)),XI=dw(Ce,qI,null,"bool"),YI={kernelName:Ce,backendName:"cpu",kernelFunc:XI},QI=Kv(((t,e)=>t>=e?1:0)),JI=dw(Re,QI,null,"bool"),ZI={kernelName:Re,backendName:"cpu",kernelFunc:JI};const $I={kernelName:Ae,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e,r=O(a.shape),s=a.shape[a.shape.length-1],o=bw({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=CI(o,!0,n),c=bw({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}},tS=Pv(Fe,(t=>Number.isFinite(t)?1:0),"bool"),eS={kernelName:Fe,backendName:"cpu",kernelFunc:tS},nS=Pv(Oe,(t=>Math.abs(t)===1/0?1:0),"bool"),aS={kernelName:Oe,backendName:"cpu",kernelFunc:nS},rS=Pv(Me,(t=>Number.isNaN(t)?1:0),"bool"),sS={kernelName:Me,backendName:"cpu",kernelFunc:rS},oS=Kv(((t,e)=>t<e?1:0)),iS=dw(ze,oS,null,"bool"),cS={kernelName:ze,backendName:"cpu",kernelFunc:iS},lS=Kv(((t,e)=>t<=e?1:0)),uS=dw(Pe,lS,null,"bool"),hS={kernelName:Pe,backendName:"cpu",kernelFunc:uS};function dS(t,e,n){const a=(e-t)/(n-1),r=nt(n,"float32");r[0]=t;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}const pS={kernelName:Be,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:r,num:s}=n,o=dS(a,r,s);return e.makeTensorInfo([o.length],"float32",o)}},fS=zv((t=>Math.log(t))),mS=Bv(We,fS),gS={kernelName:We,backendName:"cpu",kernelFunc:mS},yS=Pv(Ue,(t=>Math.log1p(t))),bS={kernelName:Ue,backendName:"cpu",kernelFunc:yS},xS=Kv(((t,e)=>t&&e)),vS=dw(Ve,xS,null,"bool"),wS={kernelName:Ve,backendName:"cpu",kernelFunc:vS},kS=Pv(Ge,(t=>t?0:1),"bool"),IS={kernelName:Ge,backendName:"cpu",kernelFunc:kS},SS=Kv(((t,e)=>t||e)),NS=dw(He,SS,null,"bool"),TS={kernelName:He,backendName:"cpu",kernelFunc:NS};const ES={kernelName:je,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{depthRadius:s,bias:o,alpha:i,beta:c}=a;Ov(r,"LRN");const l=r.shape[3],u=l-1,h=n.data.get(r.dataId).values,d=O(r.shape),p=new Float32Array(d);function f(t){const e=t%l;let n=t-e+Math.max(0,e-s);const a=t-e+Math.min(e+s,u);let r=0;for(;n<=a;n++){const t=h[n];r+=t*t}return r}for(let m=0;m<d;m++){const t=f(m),e=h[m]*Math.pow(o+i*t,-c);p[m]=e}return n.makeTensorInfo(r.shape,r.dtype,p)}};const CS={kernelName:Ke,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,y:s,dy:o}=e,{depthRadius:i,bias:c,alpha:l,beta:u}=a;Ov(o,"LRNGrad");const h=O(o.shape),d=o.shape[3],p=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const t=b%d,e=b-t+Math.max(0,t-i),n=b-t+Math.min(d,t+i+1);let a=0;for(let r=e;r<n;r++)a+=Math.pow(f[r],2);a=l*a+c;for(let r=e;r<n;r++){let t=-2*l*u*f[r]*m[b]/a;b===r&&(t+=Math.pow(a,-u)),t*=p[b],g[r]+=t}}return n.makeTensorInfo(o.shape,r.dtype,g)}};function RS(t,e,n,a){const r=G(a,O(n));for(let s=0;s<r.length;++s){const n=s*e;let a=t[n];for(let r=0;r<e;++r){const e=t[n+r];(Number.isNaN(e)||e>a)&&(a=e)}r[s]=a}return r}function _S(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{reductionIndices:s,keepDims:o}=a,i=n;let c=r.shape;const l=c.length,u=U(s,c);let h=u;const d=lc(h,l);let p=i.data.get(r.dataId).values;if(null!=d){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=c[d[e]];p=_w(p,c,r.dtype,d,t),h=hc(h.length,l),c=t}Ov(r,"max"),cc("max",h,l);const[f,m]=oc(c,h),g=RS(p,O(m),f,r.dtype),y=i.write(g,f,r.dtype);let b=f;if(o){b=ic(f,u)}return{dataId:y,shape:b,dtype:r.dtype}}const AS={kernelName:qe,backendName:"cpu",kernelFunc:_S},DS=Kv(((t,e)=>Math.max(t,e))),FS=dw(Xe,DS),OS={kernelName:Xe,backendName:"cpu",kernelFunc:FS};const MS={kernelName:Ye,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;Ov(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;A(mi(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=si(r.shape,s,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&M(l.inShape,l.outShape))u=Vv({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=Z(r.shape),a=Xw(t,r.shape,r.dtype,e,l,"max");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const LS={kernelName:Je,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a;Ov(r,"maxPool3d");const u=oi(r.shape,s,o,1,i,c,l),h=Qw(n.data.get(r.dataId).values,r.shape,r.dtype,Z(r.shape),u,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const zS={kernelName:Ze,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;Ov([r,s],"maxPool3DGrad");const u=oi(s.shape,o,i,1,c,l),h=function(t,e){const n=Ks(e.outShape,"int32"),a=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*a-d;let x=b;for(;x<0;)x+=o;const v=Math.min(e.inDepth,l+b);for(let a=0;a<e.outHeight;++a){const l=a*r-p;let d=l;for(;d<0;)d+=i;const w=Math.min(e.inHeight,u+l);for(let r=0;r<e.outWidth;++r){const p=r*s-f;let k=p;for(;k<0;)k+=c;const I=Math.min(e.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,N=-1;for(let e=x;e<v;e+=o){const n=e-b;for(let a=d;a<w;a+=i){const r=a-l;for(let s=k;s<I;s+=c){const o=s-p,i=t.get(m,e,a,s,g);i>=S&&(S=i,N=n*u*h+r*u+o)}}}n.set(N,m,y,a,r,g)}}}return n}(n.bufferSync(s),u),d=u.strideDepth,p=u.strideHeight,f=u.strideWidth,m=u.dilationDepth,g=u.dilationHeight,y=u.dilationWidth,b=u.effectiveFilterDepth,x=u.effectiveFilterHeight,v=u.effectiveFilterWidth,w=b-1-u.padInfo.front,k=v-1-u.padInfo.left,I=x-1-u.padInfo.top,S=Ks(s.shape,"float32"),N=n.bufferSync(r);for(let T=0;T<u.batchSize;++T)for(let t=0;t<u.inChannels;++t)for(let e=0;e<u.inDepth;++e)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=e-w,s=n-I,o=a-k;let i=0;for(let e=0;e<b;e+=m){const n=(r+e)/d;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let a=0;a<x;a+=g){const r=(s+a)/p;if(!(r<0||r>=u.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=y){const c=(o+s)/f;if(c<0||c>=u.outWidth||Math.floor(c)!==c)continue;const l=b*x*v-1-h.get(T,n,r,c,t)===e*x*v+a*v+s?1:0;if(0===l)continue;i+=N.get(T,n,r,c,t)*l}}}S.set(i,T,e,n,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const PS={kernelName:Qe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s,output:o}=e,i=s;Ov([s,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=si(i.shape,c,l,1,u,h),p=n.data.get(i.dataId).values,f=Ks(d.outShape,i.dtype,Yw(p,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Ks(i.shape,"float32"),S=n.data.get(r.dataId).values,N=Ks(r.shape,"float32",S);for(let T=0;T<d.batchSize;++T)for(let t=0;t<d.inChannels;++t)for(let e=0;e<d.inHeight;++e)for(let n=0;n<d.inWidth;++n){const a=e-k,r=n-w;let s=0;for(let e=0;e<x;e+=y){const n=(a+e)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let a=0;a<v;a+=b){const o=(r+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const i=x*v-1-f.get(T,n,o,t)===e*v+a?1:0;if(0===i)continue;s+=N.get(T,n,o,t)*i}}I.set(s,T,e,n,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const BS={kernelName:$e,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{x:r}=e,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=n,l=a;Ov(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,h=si(r.shape,s,o,[1,1],i),[d,p]=function(t,e,n,a,r){const s=Xw(t,0,n,Z(e),r,"max"),o=Yw(t,e,n,r,!0,a);return[s.values,o.values]}(u,r.shape,r.dtype,c,h),f=l.write(d,h.outShape,r.dtype),m=l.write(p,h.outShape,r.dtype);return[{dataId:f,shape:h.outShape,dtype:r.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};const WS={kernelName:tn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a,i=U(s,r.shape),c=O(oc(r.shape,i)[1]),l=[],u=n.makeTensorInfo([],"float32",new Float32Array([c]));l.push(u);const h=uw({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=kI({inputs:{a:h,b:u},backend:n});l.push(d);const p=Zk({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:o}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}};const US={kernelName:en,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a;Ov(r,"min");const i=U(s,r.shape);let c=i;const l=lc(c,r.shape.length);let u=r;null!=l&&(u=Aw({inputs:{x:r},backend:n,attrs:{perm:l}}),c=hc(c.length,r.shape.length)),cc("min",c,u.shape.length);const[h,d]=oc(u.shape,c),p=O(d),f=nt(O(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const t=y*p;let e=m[t];for(let n=0;n<p;++n){const a=m[t+n];(Number.isNaN(a)||a<e)&&(e=a)}f[y]=e}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(o){const t=bw({inputs:{x:g},backend:n,attrs:{shape:ic(h,i)}});return n.disposeIntermediateTensorInfo(g),t}return g}},VS=Kv(((t,e)=>Math.min(t,e))),GS=dw(nn,VS),HS={kernelName:nn,backendName:"cpu",kernelFunc:GS};const jS={kernelName:an,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{paddings:s,mode:o}=a;Ov(r,"mirrorPad");const i=s.map(((t,e)=>t[0]+r.shape[e]+t[1])),c=s.map((t=>t[0])),l=s.map(((t,e)=>t[0]+r.shape[e])),u="reflect"===o?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=Z(r.shape),f=O(i),m=i.length,g=Z(i),y=G(r.dtype,f);for(let b=0;b<f;b++){let t=ot(b,m,g);for(let n=0;n<m;n++)t[n]<c[n]?t[n]=2*c[n]-t[n]-u:t[n]>=l[n]&&(t[n]=2*(l[n]-1)-t[n]+u);t=t.map(((t,e)=>t-c[e]));const e=st(t,d,p);y[b]=h[e]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}},KS=Kv(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),qS=dw(rn,KS),XS={kernelName:rn,backendName:"cpu",kernelFunc:qS};function YS(t){const{inputs:e,backend:n,attrs:a}=t,{logits:r}=e,{dim:s}=a,o=r.shape.length;let i=s;if(-1===i&&(i=o-1),i!==o-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(o," and dim was ").concat(i));const c=U([i],r.shape),l=_S({inputs:{x:r},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),u=ic(l.shape,c),h=bw({inputs:{x:l},backend:n,attrs:{shape:u}}),d=TI({inputs:{a:r,b:h},backend:n}),p=fI({inputs:{x:d},backend:n}),f=Zk({inputs:{x:p},backend:n,attrs:{axis:c,keepDims:!1}}),m=bw({inputs:{x:f},backend:n,attrs:{shape:u}}),g=kI({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const QS={kernelName:Jn,backendName:"cpu",kernelFunc:YS};const JS={kernelName:sn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{logits:r}=e,{numSamples:s,seed:o,normalized:i}=a;Ov(r,"multinomial");const c=i?r:YS({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=c.shape[0],u=c.shape[1],h=n.data.get(c.dataId).values,d=[l,s],p=nt(O(d),"int32");for(let f=0;f<l;++f){const t=f*u,e=new Float32Array(u-1);e[0]=h[t];for(let r=1;r<e.length;++r)e[r]=e[r-1]+h[t+r];const n=Rc.alea(o.toString()),a=f*s;for(let r=0;r<s;++r){const t=n();p[a+r]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){p[a+r]=n;break}}}return i||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(d,"int32",p)}};function ZS(t,e,n){const a=Ja(-1,n);return Xk([],e,a,t,n)}const $S={kernelName:cn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;Ov(a,"neg");const r=n.data.get(a.dataId).values,[s,o]=ZS(r,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,s)}},tN=Al;const eN={kernelName:un,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a;Ov(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,{selectedIndices:h}=tN(l,u,o,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},nN=Dl;const aN={kernelName:hn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;Ov(r,"NonMaxSuppressionPadded");const u=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=nN(u,h,o,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},rN=Fl;const sN={kernelName:dn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;Ov(r,"NonMaxSuppressionWithScore");const u=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,d=o,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=rN(u,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},oN=Kv(((t,e)=>t!==e?1:0)),iN=dw(ln,oN,null,"bool"),cN={kernelName:ln,backendName:"cpu",kernelFunc:iN};const lN={kernelName:fn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:r}=e,{dtype:s,depth:o,onValue:i,offValue:c}=a;Ov(r,"oneHot");const l=O(r.shape),u=new Float32Array(l*o);u.fill(c);const h=n.data.get(r.dataId).values;for(let d=0;d<l;++d)h[d]>=0&&h[d]<o&&(u[d*o+h[d]]=i);return n.makeTensorInfo([...r.shape,o],s,u)}};function uN(t){const{inputs:e,backend:n}=t,{x:a}=e;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const t=iw({inputs:{input:a},backend:n}),e=uN({inputs:{x:t},backend:n}),r=xk({inputs:{input:a},backend:n}),s=uN({inputs:{x:r},backend:n}),o=rw({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return DI({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const hN={kernelName:va,backendName:"cpu",kernelFunc:uN};const dN={kernelName:pn,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:a}=e,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const e=iw({inputs:{input:r},backend:a}),n=t({inputs:{x:e},backend:a}),s=xk({inputs:{input:r},backend:a}),o=uN({inputs:{x:s},backend:a}),i=rw({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return DI({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function pN(t){const{inputs:e,backend:n,attrs:a}=t,{axis:r}=a;if(1===e.length)return gI({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const s=e[0].shape,o=e[0].dtype;e.forEach((t=>{D(s,t.shape,"All tensors passed to stack must have matching shapes"),A(o===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=wk({inputs:e.map((t=>{const e=gI({inputs:{input:t},backend:n,attrs:{dim:r}});return i.push(e),e})),backend:n,attrs:{axis:r}});return i.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}const fN={kernelName:mn,backendName:"cpu",kernelFunc:pN};const mN={kernelName:gn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{paddings:s,constantValue:o}=a;Ov(r,"pad");const i=s.map(((t,e)=>t[0]+r.shape[e]+t[1])),c=s.map((t=>t[0])),l=n.data.get(r.dataId).values,u=O(r.shape),h=r.shape.length,d=Z(r.shape),p=O(i),f=i.length,m=Z(i),g=G(r.dtype,p);0!==o&&g.fill(o);for(let y=0;y<u;y++){g[st(ot(y,h,d).map(((t,e)=>t+c[e])),f,m)]=l[y]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}},gN=Kv(((t,e)=>Math.pow(t,e))),yN=dw(yn,gN),bN={kernelName:yn,backendName:"cpu",kernelFunc:yN};function xN(t,e,n,a){const[r,s]=oc(t,a),o=Cr(e,"int32"),i=nt(O(r),o),c=O(s);for(let l=0;l<i.length;++l){const t=l*c;let e=1;for(let a=0;a<c;++a)e*=n[t+a];i[l]=e}return{outVals:i,outShape:r,outDtype:o}}const vN={kernelName:xn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a;Ov(r,"prod");const i=r.shape.length,c=U(s,r.shape),l=lc(c,i);let u=c,h=r;const d=[];null!=l&&(h=Aw({inputs:{x:r},backend:n,attrs:{perm:l}}),d.push(h),u=hc(u.length,i));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=xN(h.shape,h.dtype,p,u);let y=m;return o&&(y=ic(m,c)),d.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(y,g,f)}};function wN(t,e,n,a){const r=[];let s=0;const o=e.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(t,e){for(let n=0;n<t.length;++n){const a=t[n],r=n===t.length-1?e:t[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let t=1;t<a.length;++t)if(a[t-1]>a[t])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<e.length-1;++l){c*=e[l];const t=e[l+1];for(let e=1;e<c+1;++e)i[l].push(e*t)}for(let l=0;l<t.length;++l){let a=t[l],o=t[l]+1;for(let t=0;t<n.length;++t){const r=n[t],s=t+e.length-1;if(s>=0){const t=i[s],e=t[t.length-1]-r[a];for(let n=a;n<o;++n)i[s].push(r[n+1]+e)}a=r[a],o=r[o]}o!==a&&(r.push([a,o]),s+=o-a)}return{outSplits:i,valueSlices:r,numValues:s}}function kN(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let a=e;a<t.length;a++)n[e-1]*=t[a];return n}function IN(t,e,n,a,r){const s=e.slice();s[0]=r;const o=H(n,O(s)),i=t.length;return function(t,e,n,a,r,s){const o=kN(e,2)[1],i=kN(s,2)[1];let c=0;for(const l of n)for(let e=l[0];e<l[1];++e){for(let n=0;n<a;++n)r[c*i+n]=t[e*o+n];++c}}(t,e,a,0===i?0:i/e[0],o,s),[o,s]}function SN(t,e,n,a,r,s,o,i){if(0===t.length)throw new Error("paramsNestedSplits must be non empty");if(0===e[0].length)throw new Error("Split tensors must not be scalars");if(function(t,e,n){t.forEach(((t,a)=>{if(t<0||t>=n){const r=ot(a,e.length,Z(e)).join(",");throw new Error("indices[".concat(r,"] = ").concat(t," is not in [0, ").concat(n,")"))}}))}(s,o,e[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const c=a[0],{outSplits:l,valueSlices:u,numValues:h}=wN(s,o,t,c),d=function(t){const e=[];for(let n=0;n<t.length;++n){const a=H("int32",t[n].length);e.push(a),t[n].forEach(((t,e)=>a[e]=t))}return e}(l),p=IN(n,a,r,u,h);return[d,p[0],p[1]]}const NN={kernelName:vn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=e,{outputRaggedRank:i}=a,c=r.map((t=>n.data.get(t.dataId).values)),l=r.map((t=>t.shape)),u=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,[d,p,f]=SN(c,l,u,s.shape,s.dtype,h,o.shape),m=d.map((t=>n.makeTensorInfo([t.length],"int32",t))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},TN=2147483647;function EN(t,e,n,a,r,s,o){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===e.length,c=0===r.length,l=0===o.length,u=[];i||u.push(e[0]),c||u.push(r[0]),l||u.push(o[0]);for(let m=1;m<u.length;++m)if(u[m]!==u[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===u.length?1:u[0],d=H("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const e=i?t[0]:t[m],n=c?a[0]:a[m],r=l?s[0]:s[m];if(0===r)throw new Error("Requires delta != 0");let o;if(r>0&&n<e||r<0&&n>e)o=0;else if(o=Math.ceil(Math.abs((n-e)/r)),o>TN)throw new Error("Requires ((limit - start) / delta) <= ".concat(TN));d[m+1]=d[m]+o}const p=H(n,d[h]);let f=0;for(let m=0;m<h;++m){const e=d[m+1]-d[m];let n=i?t[0]:t[m];const a=l?s[0]:s[m];for(let t=0;t<e;++t)p[f++]=n,n+=a}return[d,p]}const CN={kernelName:wn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{starts:a,limits:r,deltas:s}=e,o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=EN(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};var RN=du;class _N{constructor(t,e,n,a,r,s,o,i,c,l){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=fu(l),this.raggedRank=mu(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===RN.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===RN.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case RN.VALUE_ROWIDS:return _N.getMaxWidthValueRowID(e);case RN.ROW_SPLITS:return _N.getMaxWidthRowSplit(e);default:throw new Error("Cannot handle partition type ".concat(RN[this.getRowPartitionTypeByDimension(t-1)]))}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let n=0;for(let a=0;a<e-1;++a){const e=t[a+1]-t[a];e>n&&(n=e)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let n=0,a=t[0],r=0;for(let s=1;s<e;++s){const e=t[s];e!==a&&(a=e,r=Math.max(s-n,r),n=s)}return Math.max(e-n,r)}tensorShapeFromTensor(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return DN(t,n)}calculateOutputSize(t){const e=this.valuesShape;gu(this.defaultValueShape,e);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=pu(this.raggedRank,n,e);a[0]<0&&(a[0]=t);for(let r=1;r<=this.raggedRank;++r)a[r]<0&&(a[r]=this.getMaxWidth(r));return a}calculateFirstParentOutputIndex(t,e,n){const a=Math.min(t,n),r=[];let s=0;for(let o=0;o<a;++o,s+=e)r.push(s);for(let o=a;o<t;++o)r.push(-1);return A(r.length===t,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(t,e,n,a){const r=t.length,s=[];for(let o=0;o<r-1;++o){const r=t[o+1]-t[o];let i=Math.min(a,r),c=e[o];-1===c&&(i=0);for(let t=0;t<i;++t)s.push(c),c+=n;for(let t=0;t<r-i;++t)s.push(-1)}if(r>0&&s.length!==t[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(t,e,n,a){const r=t.length,s=[];if(0===r)return[];let o=0,i=t[0];if(i>=e.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(e.length));let c=e[i];s.push(c);for(let l=1;l<r;++l){const r=t[l];if(r===i)c>=0&&(++o,o<a?c+=n:c=-1);else{if(o=0,i=r,r>=e.length)throw new Error("Got nextValueRowId=".concat(r," which is not less than ").concat(e.length));c=e[r]}s.push(c)}if(s.length!==t.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(t,e,n,a){const r=this.getRowPartitionTensor(t),s=this.getRowPartitionTypeByDimension(t);switch(s){case RN.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,e,n,a);case RN.ROW_SPLITS:if(r.length-1>e.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(e.length));return this.calculateOutputIndexRowSplit(r,e,n,a);default:throw new Error("Unsupported partition type: ".concat(RN[s]))}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case RN.FIRST_DIM_SIZE:return t[0];case RN.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case RN.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(RN[e]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),e=this.calculateOutputSize(t),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*e[s+1];const a=DN(e,!1),r=H(this.valuesDType,O(a));if(n[0]*e[0]>0){let s=this.calculateFirstParentOutputIndex(t,n[0],e[0]);for(let t=1;t<=this.raggedRank;++t){s=this.calculateOutputIndex(t-1,s,n[t],e[t])}this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(t,e,n,a){if(0===n.length)return;const r=this.values,s=n;let o=a.slice();o=o.slice(t+1);const i=O(o),c=e.length;let l=this.defaultValue;if(l.length!==i&&1!==l.length){const t=this.defaultValueShape;rs((()=>{const e=xi(l,t),n=Ti(e,o);l=n.dataSync()}))}let u=0,h=0,d=0;for(let p=0;p<=c;++p){let t=p<c?e[p]:-1;if(t!==d){if(h<d){const t=r.subarray(u*i);AN(s.subarray(h*i),t,(d-h)*i)}if(p>=c){const e=n.length;t=Math.floor(e/i)}if(t>d)if(1===this.defaultValue.length)s.subarray(d*i,t*i).fill(this.defaultValue[0]),d=t;else for(;t>d;){AN(s.slice(d*i),l,i),++d}t<0?(u=p+1,h=d):(u=p,h=d,d=h+1)}else++d}}}function AN(t,e,n){for(let a=0;a<n;a++)t[a]=e[a]}function DN(t,e){const n=[];for(let a of t){if(a<0){if(!e)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function FN(t,e,n,a,r,s,o,i,c,l){return new _N(t,e,n,a,r,s,o,i,c,l).compute()}const ON={kernelName:kn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=e,{rowPartitionTypes:c}=a,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=i.map((t=>n.data.get(t.dataId).values)),p=i.map((t=>t.shape)),[f,m]=FN(l,r.shape,u,s.shape,s.dtype,h,o.shape,d,p,c);return n.makeTensorInfo(f,s.dtype,m)}};function MN(t,e,n,a){if(t===e||t<e&&n<0||e<t&&n>1)return nt(0,a);const r=nt(Math.abs(Math.ceil((e-t)/n)),a);e<t&&1===n&&(n=-1),r[0]=t;for(let s=1;s<r.length;s++)r[s]=r[s-1]+n;return r}const LN={kernelName:In,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:r,dtype:s,step:o}=n,i=MN(a,r,o,s);return e.makeTensorInfo([i.length],s,i)}},zN=Pv(Nn,(t=>1/t)),PN={kernelName:Nn,backendName:"cpu",kernelFunc:zN};const BN={kernelName:_n,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:s,halfPixelCenters:o,size:i}=a;Ov(r,"resizeBilinear");const c=Z(r.shape),[l,u]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(O([h,l,u,f])),y=[s&&l>1?d-1:d,s&&u>1?p-1:p],b=[s&&l>1?l-1:l,s&&u>1?u-1:u];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let k=0;k<h;k++)for(let t=0;t<l;t++){let e;e=o?v*(t+.5)-.5:v*t;const n=Math.max(0,Math.floor(e)),a=e-n,r=Math.min(d-1,Math.ceil(e)),s=k*c[0]+n*c[1],i=k*c[0]+r*c[1];for(let t=0;t<u;t++){let e;e=o?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),r=e-n,l=Math.min(p-1,Math.ceil(e)),u=s+n*c[2],h=i+n*c[2],d=s+l*c[2],y=i+l*c[2];for(let t=0;t<f;t++){const e=m[u+t],n=m[h+t],s=e+(m[d+t]-e)*r,o=s+(n+(m[y+t]-n)*r-s)*a;g[x++]=o}}}return n.makeTensorInfo([h,l,u,f],"float32",g)}};const WN={kernelName:An,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r,dy:s}=e,{alignCorners:o}=a;Ov([s,r],"resizeBilinearGrad");const i=Z(r.shape),[c,l,u,h]=r.shape,[,d,p]=s.shape,f=new Float32Array(c*l*u*h),m=[o&&d>1?l-1:l,o&&p>1?u-1:u],g=[o&&d>1?d-1:d,o&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let v=0;for(let w=0;w<c;w++){const t=w*i[0];for(let e=0;e<d;e++){const n=e*y,a=Math.floor(n),r=Math.min(Math.ceil(n),l-1),s=t+a*i[1],o=t+r*i[1],c=n-a,d=1-c;for(let t=0;t<p;t++){const e=t*b,n=Math.floor(e),a=Math.min(Math.ceil(e),u-1),r=e-n,l=1-r,p=s+n*i[2],m=s+a*i[2],g=o+n*i[2],y=o+a*i[2],w=d*l,k=d*r,I=c*l,S=c*r;for(let t=0;t<h;t++){const e=x[v++];f[p+t]+=e*w,f[m+t]+=e*k,f[g+t]+=e*I,f[y+t]+=e*S}}}}return n.makeTensorInfo([c,u,l,h],"float32",f)}};const UN={kernelName:Cn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:s,halfPixelCenters:o,size:i}=a;Ov(r,"resizeNearestNeighbor");const c=Z(r.shape),[l,u]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*l*u*f),y=[s&&l>1?d-1:d,s&&u>1?p-1:p],b=[s&&l>1?l-1:l,s&&u>1?u-1:u],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let k=0;k<h;k++){const t=k*c[0];for(let e=0;e<l;e++){const n=o?x*(e+.5):x*e;let a=Math.min(d-1,s?Math.round(n):Math.floor(n));o&&(a=Math.max(0,a));const r=t+a*c[1];for(let t=0;t<u;t++){const e=o?v*(t+.5):v*t;let n=Math.min(p-1,s?Math.round(e):Math.floor(e));o&&(n=Math.max(0,n));const a=r+n*c[2];for(let t=0;t<f;t++){const e=m[a+t];g[w++]=e}}}}return n.makeTensorInfo([h,l,u,f],r.dtype,g)}};const VN={kernelName:Rn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r,dy:s}=e,{alignCorners:o}=a;Ov([s,r],"resizeNearestNeighborGrad");const i=Z(r.shape),c=Z(s.shape),[l,u,h,d]=r.shape,[,p,f]=s.shape,m=new Float32Array(l*u*h*d),g=n.data.get(s.dataId).values,y=[o&&p>1?u-1:u,o&&f>1?h-1:h],b=[o&&p>1?p-1:p,o&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let N=0;N<l;N++){const t=N*i[0];for(let e=0;e<u;e++){const n=t+e*i[1],a=Math.floor(e*w),r=Math.floor(a-I/2);for(let s=0;s<h;s++){const a=n+s*i[2],l=Math.floor(s*k),y=Math.floor(l-S/2);for(let n=0;n<d;n++){let i=0;for(let a=0;a<I;a++){const l=a+r;if(l<0||l>=p)continue;const d=t+l*c[1],m=l*x;if(e===Math.min(u-1,o?Math.round(m):Math.floor(m)))for(let t=0;t<S;t++){const e=t+y;if(e<0||e>=f)continue;const a=d+e*c[2],r=e*v;s===Math.min(h-1,o?Math.round(r):Math.floor(r))&&(i+=g[a+n])}}m[a+n]=i}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};const GN={kernelName:Fn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{dims:s}=a;Ov(r,"reverse");const o=r.shape.length,i=U(s,r.shape);if(0===o)return Vv({inputs:{x:r},backend:n});const c=new mr(r.shape,r.dtype),l=n.bufferSync(r);for(let u=0;u<c.size;u++){const t=c.indexToLoc(u),e=t.slice();i.forEach((t=>e[t]=r.shape[t]-1-e[t])),c.set(l.get(...e),...t)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},HN={kernelName:ka,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{image:r}=e,{radians:s,fillValue:o,center:i}=n,c=a,l=G(r.dtype,O(r.shape)),[u,h,d,p]=r.shape,[f,m]=xu(i,h,d),g=Math.sin(s),y=Math.cos(s),b=c.data.get(r.dataId).values;for(let x=0;x<u;x++){const t=x*d*h*p;for(let e=0;e<h;e++){const n=e*(d*p);for(let a=0;a<d;a++){const r=a*p;for(let s=0;s<p;s++){const i=[u,e,a,s],c=i[2],x=i[1];let v=(c-f)*y-(x-m)*g,w=(c-f)*g+(x-m)*y;v=Math.round(v+f),w=Math.round(w+m);let k=o;if("number"!==typeof o&&(k=3===s?255:o[s]),v>=0&&v<d&&w>=0&&w<h){k=b[t+w*(d*p)+v*p+s]}l[t+n+r+s]=k}}}}return{dataId:c.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},jN=Pv(On,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1})),KN={kernelName:On,backendName:"cpu",kernelFunc:jN},qN=zv((t=>1/Math.sqrt(t))),XN=Bv(Mn,qN),YN={kernelName:Mn,backendName:"cpu",kernelFunc:XN};function QN(t,e,n,a,r,s,o,i,c,l){const u=[a/r,r],h=t.values,d=e.values;if(0===a)return Ks(n,e.dtype);const p=c instanceof mr?c:Ks(u,e.dtype);"string"===typeof c||"number"===typeof c?p.values.fill(c):"boolean"===typeof c&&p.values.fill(+c);for(let f=0;f<s;f++){const t=[];let s=0;for(let e=0;e<o;e++){const n=h[f*o+e];t.push(n),s+=n*i[e]}if(s<0||s>=a/r)throw new Error("Invalid indices: ".concat(t," does not index into ").concat(n));for(let n=0;n<r;n++)l?p.values[s*r+n]+=d[f*r+n]:p.values[s*r+n]=0===e.rank?d[0]:d[f*r+n]}return p}const JN={kernelName:Ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:r,updates:s}=e,{shape:o}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Cu(0,r,o),d=QN(n.bufferSync(r),n.bufferSync(s),o,h,l,c,i,u,0,!0);return n.makeTensorInfo(o,d.dtype,d.values)}};function ZN(t,e){let n=0,a=t.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),t[r]<e?n=r+1:a=r;return a}function $N(t,e){let n=0,a=t.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),t[r]<=e?n=r+1:a=r;return a}const tT={kernelName:Pn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sortedSequence:r,values:s}=e,{side:o}=a,i=function(t,e,n,a,r,s){const o=H("int32",n*r);for(let i=0;i<n;++i){const n=t.slice(i*a,(i+1)*a),c=i*r;for(let t=0;t<r;++t)o[c+t]="left"===s?ZN(n,e[t+c]):$N(n,e[t+c])}return o}(n.data.get(r.dataId).values,n.data.get(s.dataId).values,r.shape[0],r.shape[1],s.shape[1],o);return n.makeTensorInfo(s.shape,"int32",i)}};const eT={kernelName:Bn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:a,t:r,e:s}=e;Ov([a,r,s],"select");const o=a.shape.length,i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=Cr(r.dtype,s.dtype),h=nt(O(r.shape),u);let d=0;const p=0===o||o>1||1===r.shape.length?1:O(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let t=0;t<p;t++)1===i[f]?h[d++]=c[f]:h[d++]=l[f];return n.makeTensorInfo(r.shape,u,h)}},nT=Ru,aT=_u,rT=Pv(Wn,(t=>t>=0?aT*t:nT*(Math.exp(t)-1))),sT={kernelName:Wn,backendName:"cpu",kernelFunc:rT},oT=Pv(Hn,(t=>t<0?-1:t>0?1:0)),iT={kernelName:Hn,backendName:"cpu",kernelFunc:oT},cT=Pv(Vn,(t=>Math.sin(t))),lT={kernelName:Vn,backendName:"cpu",kernelFunc:cT},uT=Pv(Gn,(t=>Math.sinh(t))),hT={kernelName:Gn,backendName:"cpu",kernelFunc:uT},dT=Math.log(1.1920928955078125e-7)+2,pT=Pv(Kn,(t=>{const e=t>-dT,n=t<dT,a=Math.exp(t);let r;return r=n?a:e?t:Math.log(1+a),r})),fT={kernelName:Kn,backendName:"cpu",kernelFunc:pT};const mT={kernelName:Yn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockShape:s,paddings:o}=a;Ov([r],"spaceToBatchND");const i=O(s),c=[[0,0]];c.push(...o);for(let g=1+s.length;g<r.shape.length;++g)c.push([0,0]);const l=mN.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),u=vu(l.shape,s,i,!1),h=wu(u.length,s.length,!1),d=ku(l.shape,s,i,!1),p=bw({inputs:{x:l},backend:n,attrs:{shape:u}}),f=Aw({inputs:{x:p},backend:n,attrs:{perm:h}}),m=bw({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function gT(t,e,n,a,r,s,o){const i=e[0],c=s[0],l=new Array(c),u=new Array(i),h=e[1];if(0===c){if(0!==i)throw new Error(nh(i));return[H(n,0),[0,h],H(r,0),l,u]}let d=!0,p=0;const f=new Array(c).fill(0);for(let g=0;g<i;++g){const e=t[g*h];if(e<0)throw new Error(ah(g,e));if(e>=c)throw new Error(rh(g,e,c));++f[e],d=d&&e>=p,p=e}let m=!0;for(let g=0;g<c;++g){const t=0===f[g];l[g]=t,m=m&&!t,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const e=t,n=a;for(let t=0;t<i;++t)u[t]=t;return[e,[i,h],n,l,u]}{const e=f[c-1],s=H(n,e*h),d=H(r,e),p=new Array(c).fill(0);for(let n=0;n<i;++n){const e=t[n*h],r=p[e],o=(0===e?0:f[e-1])+r;p[e]++;for(let a=0;a<h;++a)s[o*h+a]=t[n*h+a];d[o]=a[n],u[n]=o}for(let t=0;t<c;++t){if(0===p[t]){const e=0===t?0:f[t-1];s[e*h+0]=t;for(let t=1;t<h;++t)s[e*h+t]=0;d[e]=o}}return[s,[e,h],d,l,u]}}const yT={kernelName:Zn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:a,values:r,denseShape:s,defaultValue:o}=e;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values[0],[h,d,p,f,m]=gT(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function bT(t,e,n,a,r){const s=O(a),o=e[0],i=r.length,c=[];let l=1,u=-1;for(let m=0;m<i;++m){const t=r[m];if(-1===t){if(-1!==u)throw new Error(sh(u,m));u=m,c.push(1)}else{if(t<0)throw new Error(oh(m,t));l*=t,c.push(t)}}if(-1!==u){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const t=Math.trunc(s/l);if(l*t!==s)throw new Error(ch(a,c));c[u]=t}if(O(c)!==s)throw new Error(lh(a,c));const h=a.length,d=[];if(h>0){d[h-1]=1;for(let t=h-2;t>=0;--t)d[t]=d[t+1]*a[t+1]}const p=[];if(i>0){p[i-1]=1;for(let t=i-2;t>=0;--t)p[t]=p[t+1]*c[t+1]}const f=H(n,o*i);for(let m=0;m<o;++m){let e=0;for(let n=0;n<h;++n)e+=t[m*h+n]*d[n];for(let t=0;t<i;++t)f[m*i+t]=Math.trunc(e/p[t]),e%=p[t]}return[f,[o,i],c]}const xT={kernelName:$n,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:a,inputShape:r,newShape:s}=e;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.data.get(r.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(s.dataId).values),[l,u,h]=bT(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function vT(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const i=a.length,c=[e[0],t.length/e[0]],l=c[1],u=i>0?r[i-1]+1:0;if(u<0)throw new Error("segment ids must be >= 0");const h=e.slice();h[0]=u;const d=H(n,h.reduce(((t,e)=>t*e),1));if(0===i)return u>0&&d.fill(o),[d,h];if(u<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=r[p];for(;;){let e=0;if(f<i){if(e=r[f],g===e){++f;continue}if(g>=e)throw new Error("segment ids are not increasing")}if(g<0||g>=u)throw new Error(dh(g,u));g>m&&d.fill(o,m*l,g*l);for(let n=p;n<f;++n){const e=a[n];if(e<0||e>=c[0])throw new Error(ph(n,a[n],c[0]));for(let n=0;n<l;n++)d[g*l+n]+=t[e*l+n]}if(s)for(let t=0;t<l;t++)d[g*l+t]/=f-p;if(p=f,++f,m=g+1,g=e,f>i)break}return m<u&&d.fill(o,m*l,u*l),[d,h]}const wT={kernelName:ta,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:r,segmentIds:s}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=vT(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const kT={kernelName:ea,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:r,segmentIds:s}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=vT(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const IT={kernelName:na,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sparseIndices:r,sparseValues:s,defaultValue:o}=e,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=Cu(0,r,i),p=!1,f=n.bufferSync(r);let m;switch(s.dtype){case"bool":m=QN(f,n.bufferSync(s),i,d,u,l,c,h,Boolean(n.data.get(o.dataId).values[0]),p);break;case"float32":m=QN(f,n.bufferSync(s),i,d,u,l,c,h,n.data.get(o.dataId).values[0],p);break;case"int32":m=QN(f,n.bufferSync(s),i,d,u,l,c,h,n.data.get(o.dataId).values[0],p);break;case"string":m=QN(f,n.bufferSync(s),i,d,u,l,c,h,er(n.data.get(o.dataId).values[0]),p);break;default:throw new Error("Unsupported type ".concat(s.dtype))}return n.makeTensorInfo(i,m.dtype,m.values)}};const ST={kernelName:Qn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{numOrSizeSplits:s,axis:o}=a,i=U(o,r.shape)[0],c=eh(r,s,i),l=new Array(r.shape.length).fill(0),u=r.shape.slice();return c.map((t=>{const e=[...u];e[i]=t;const a=ak({inputs:{x:r},backend:n,attrs:{begin:l,size:e}});return l[i]+=t,a}))}},NT=zv((t=>Math.sqrt(t))),TT=Pv(qn,(t=>Math.sqrt(t))),ET={kernelName:qn,backendName:"cpu",kernelFunc:TT},CT={kernelName:ra,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n}=t;const{x:a}=e,r=n;Ov(a,"square");const s=r.data.get(a.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const t=s[i];o[i]=t*t}return{dataId:r.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},RT=Kv(((t,e)=>{const n=t-e;return n*n})),_T=dw(aa,RT),AT={kernelName:aa,backendName:"cpu",kernelFunc:_T},DT=zv(((t,e)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=e;return t.replace(new RegExp(n,a?"g":""),r)})),FT=Bv(sa,DT),OT={kernelName:sa,backendName:"cpu",kernelFunc:FT},MT=Pv(wa,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),LT={kernelName:wa,backendName:"cpu",kernelFunc:MT};function zT(t,e,n,a){const r=Ks(t,e.dtype);for(let s=0;s<r.size;s++){const t=r.indexToLoc(s),o=new Array(t.length);for(let e=0;e<o.length;e++)o[e]=t[e]*n[e]+a[e];r.set(e.get(...o),...t)}return r}const PT={kernelName:oa,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{begin:s,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a;Ov(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=$o(r.shape,s,o,i,c,l,u,h,d);let w;if(m)w=bw({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){A(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const t=Wo(b,x,v),e=ak({inputs:{x:r},backend:n,attrs:{begin:b,size:t}});w=bw({inputs:{x:e},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(e)}else{const t=zT(p,n.bufferSync(r),v,b);w=n.makeTensorInfo(f,t.dtype,t.values)}return w}};class BT{constructor(t,e,n,a,r,s){this.separator=tr(t),this.nGramWidths=e,this.leftPad=tr(n),this.rightPad=tr(a),this.padWidth=r,this.preserveShort=s}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,a,r,s){for(let o=0;o<r;++o){const i=this.getPadWidth(s),c=Math.max(0,i-o),l=Math.max(0,i-(r-(o+1))),u=s-(c+l),h=e+(c>0?0:o-i);let d=0;d+=c*this.leftPad.length;for(let e=0;e<u;++e)d+=t[h+e].length;d+=l*this.rightPad.length;d+=(c+l+u-1)*this.separator.length,n[a+o]=new Uint8Array(d);const p=n[a+o];let f=0;const m=t=>t.forEach((t=>p[f++]=t));for(let t=0;t<c;++t)m(this.leftPad),m(this.separator);for(let e=0;e<u-1;++e)m(t[h+e]),m(this.separator);if(u>0){m(t[h+u-1]);for(let t=0;t<l;++t)m(this.separator),m(this.rightPad)}else{for(let t=0;t<l-1;++t)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(t,e){const n=t.length,a=e.length;if(a>0){let t=e[0];if(0!==t)throw new Error("First split value must be 0, got ".concat(t));for(let r=1;r<a;++r){let a=e[r]>=t;if(a=a&&e[r]<=n,!a)throw new Error("Invalid split value ".concat(e[r],", must be in [").concat(t,", ").concat(n,"]"));t=e[r]}if(t!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(t))}const r=a-1,s=H("int32",a);if(0===n||0===a){const t=new Array(n);for(let e=0;e<=r;++e)s[e]=0;return[t,s]}s[0]=0;for(let i=1;i<=r;++i){const t=e[i]-e[i-1];let n=0;this.nGramWidths.forEach((e=>{n+=this.getNumNGrams(t,e)})),this.preserveShort&&t>0&&0===n&&(n=1),s[i]=s[i-1]+n}const o=new Array(s[r]);for(let i=0;i<r;++i){const n=e[i];let a=s[i];if(this.nGramWidths.forEach((r=>{const s=e[i+1]-e[i],c=this.getNumNGrams(s,r);this.createNGrams(t,n,o,a,c,r),a+=c})),this.preserveShort&&a===s[i]){const r=e[i+1]-e[i];if(0===r)continue;const s=r+2*this.padWidth,c=1;this.createNGrams(t,n,o,a,c,s)}}return[o,s]}}function WT(t,e,n,a,r,s,o,i){return new BT(n,a,r,s,o,i).compute(t,e)}const UT={kernelName:ia,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=e,d=n.data.get(u.dataId).values,p=n.data.get(h.dataId).values,[f,m]=WT(d,p,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function VT(t,e,n,a){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)a.push(t.subarray(e,e+1));return}if(1===e.length){const r=e[0];let s=t.indexOf(r);for(;-1!==s;){const e=t.subarray(0,s);n&&0===e.length||a.push(e),s=(t=t.subarray(s+1)).indexOf(r)}return void(n&&0===t.length||a.push(t))}let r=0;for(let s=0;s<t.length+1;s++)if(s===t.length||-1!==e.indexOf(t[s])){const e=t.subarray(r,s);n&&0===e.length||a.push(e),r=s+1}}function GT(t,e,n){const a=t.length,r=[];let s=0,o=0;const i=new Array(a);for(let d=0;d<a;++d){const a=r.length;VT(t[d],e,n,r);const c=r.length-a;i[d]=c,s+=c,o=Math.max(o,c)}const c=H("int32",2*s),l=new Array(s),u=[a,o];let h=0;for(let d=0;d<a;++d)for(let t=0;t<i[d];++t)c[2*h]=d,c[2*h+1]=t,l[h]=r[h],++h;return[c,l,u]}const HT={kernelName:ca,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{skipEmpty:r}=a,{input:s,delimiter:o}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values[0],[l,u,h]=GT(i,c,r),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function jT(t,e){const n=H("int32",t.length);for(let a=0;a<t.length;++a)n[a]=Qa(t[a]).modulo(e).getLowBitsUnsigned();return n}const KT={kernelName:la,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{numBuckets:r}=a,{input:s}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=jT(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",o)}},qT=Pv(ha,(t=>Math.tan(t))),XT={kernelName:ha,backendName:"cpu",kernelFunc:qT},YT=Pv(da,(t=>Math.tanh(t)));const QT={kernelName:zn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{tensor:a,indices:r,updates:s}=e,{sliceRank:o,numUpdates:i,sliceSize:c,strides:l,outputSize:u}=Cu(0,r,a.shape),h=n.bufferSync(r),d=n.bufferSync(s),p=n.bufferSync(a),f=QN(h,d,a.shape,u,c,i,o,l,p,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}};function JT(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const a=Ks(n,t.dtype);for(let r=0;r<a.values.length;++r){const e=a.indexToLoc(r),n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=e[a]%t.shape[a];const s=t.locToIndex(n);a.values[r]=t.values[s]}return a}const ZT={kernelName:pa,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{reps:s}=a;Ov(r,"tile");const o=JT(n.bufferSync(r),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},$T=(t,e)=>{const n=e.value-t.value;return 0===n?t.index-e.index:n};function tE(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:t.length-1;for(;a>n;){if(a-n>600){const r=a-n+1,s=e-n+1,o=Math.log(r),i=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*i*(r-i)/r)*Math.sign(s-r/2);tE(t,e,Math.max(n,Math.floor(e-s*i/r+c)),Math.min(a,Math.floor(e+(r-s)*i/r+c)))}const r=t[e];let s=n,o=a;for(_(t,n,e),$T(t[a],r)>0&&_(t,n,a);s<o;){for(_(t,s,o),s++,o--;$T(t[s],r)<0;)s+=1;for(;$T(t[o],r)>0;)o-=1}0===$T(t[n],r)?_(t,n,o):(o+=1,_(t,o,a)),o<=e&&(n=o+1),e<=o&&(a=o-1)}}function eE(t,e,n,a,r){const s=e[e.length-1],[o,i]=[t.length/s,s],c=G(n,o*a),l=G("int32",o*a);for(let h=0;h<o;h++){const e=h*i,n=t.subarray(e,e+i);let s=new Array(n.length);n.forEach(((t,e)=>s[e]={value:t,index:e})),a<s.length&&(tE(s,a),s=s.slice(0,a)),r&&s.sort($T);const o=h*a,u=c.subarray(o,o+a),d=l.subarray(o,o+a);for(let t=0;t<a;t++)u[t]=s[t].value,d[t]=s[t].index}const u=e.slice();return u[u.length-1]=a,[Ks(u,n,c),Ks(u,"int32",l)]}const nE={kernelName:fa,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{k:s,sorted:o}=a;Ov(r,"topk");const i=n.data.get(r.dataId).values,[c,l]=eE(i,r.shape,r.dtype,s,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const aE={kernelName:ma,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{image:r,transforms:s}=e,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=n,[u,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=[u,f,m,p],y=Z(r.shape),b=y[0],x=y[1],v=y[2],w=Z(g),k=w[0],I=w[1],S=w[2],N=G(r.dtype,O(g));N.fill(c);const T=a.data.get(r.dataId).values,E=a.data.get(s.dataId).values;for(let C=0;C<u;++C){const t=1===s.shape[0]?E:E.subarray(8*C,8*C+8);for(let e=0;e<f;++e)for(let n=0;n<m;++n)for(let a=0;a<p;++a){let r;const s=t[6]*n+t[7]*e+1;if(0===s)continue;const l=(t[0]*n+t[1]*e+t[2])/s,u=(t[3]*n+t[4]*e+t[5])/s,p=rE(l,d,i),f=rE(u,h,i);switch(o){case"nearest":r=oE(T,h,d,b,x,v,C,f,p,a,c);break;case"bilinear":r=iE(T,h,d,b,x,v,C,f,p,a,c);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(o))}N[C*k+e*I+n*S+a]=r}return a.makeTensorInfo(g,r.dtype,N)}return{dataId:a.write(N,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function rE(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return C(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return C(0,n,e-1)}(t,e);case"nearest":return function(t,e){return C(0,t,e-1)}(t,e);default:return function(t,e){return t}(t)}}function sE(t,e,n,a,r,s,o,i,c,l,u){return 0<=i&&i<e&&0<=c&&c<n?t[o*a+i*r+c*s+l]:u}function oE(t,e,n,a,r,s,o,i,c,l,u){return sE(t,e,n,a,r,s,o,Math.round(i),Math.round(c),l,u)}function iE(t,e,n,a,r,s,o,i,c,l,u){const h=Math.floor(i),d=Math.floor(c),p=h+1,f=d+1;return(p-i)*((f-c)*sE(t,e,n,a,r,s,o,h,d,l,u)+(c-d)*sE(t,e,n,a,r,s,o,h,f,l,u))+(i-h)*((f-c)*sE(t,e,n,a,r,s,o,p,d,l,u)+(c-d)*sE(t,e,n,a,r,s,o,p,f,l,u))}function cE(t,e,n,a){const r=U(e,n)[0],s=[1,n[0],1];for(let f=0;f<r;f++)s[0]*=n[f];s[1]=n[r];for(let f=r+1;f<n.length;f++)s[2]*=n[f];const o=new Map,i=new Int32Array(n[r]),c=new mr(s,a,t),l=[],u=1===s[0]&&1===s[2];for(let f=0;f<n[r];f++){let e;if(u)e=t[f].toString();else{const t=[];for(let e=0;e<s[0];e++)for(let n=0;n<s[2];n++)t.push(c.get(e,f,n));e=t.join(",")}const n=o.get(e);if(null!=n)i[f]=n;else{const t=o.size;o.set(e,t),i[f]=t,l.push(f)}}const h=s.slice();h[1]=o.size;const d=new mr(h,a);l.forEach(((t,e)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)d.set(c.get(n,t,a),n,e,a)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:i}}const lE={kernelName:ya,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{axis:r}=n,{x:s}=e;Ov(s,"unique");const o=a.data.get(s.dataId).values,{outputValues:i,outputShape:c,indices:l}=cE(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const uE={kernelName:ba,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{value:r}=e;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r.shape.length,i=r.shape[s],c=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==s&&(c[l++]=r.shape[p]);const u=new Array(o).fill(0),h=r.shape.slice();h[s]=1;const d=new Array(i);for(let p=0;p<d.length;p++){u[s]=p;const t=ak({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});d[p]=bw({inputs:{x:t},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(t)}return d}};const hE={kernelName:xa,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,segmentIds:s}=e,{numSegments:o}=a;Ov(r,"unsortedSegmentSum");const i=[],c=[],l=r.shape.length-s.shape.length;let u=s;for(let d=0;d<l;++d){const t=gI({inputs:{input:u},backend:n,attrs:{dim:d+1}});u=t,c.push(t)}for(let d=0;d<o;++d){const t=Ja(d,"int32"),e=n.makeTensorInfo([],"int32",t),a=aI({inputs:{a:e,b:u},backend:n}),s=uw({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),o=Qk({inputs:{a:s,b:r},backend:n}),l=Zk({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});i.push(l),c.push(e),c.push(a),c.push(s),c.push(o),c.push(l)}const h=pN({inputs:i,backend:n,attrs:{axis:0}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},dE=[kw,Sw,Tw,Cw,yw,Rw,Fw,Ow,Mw,Lw,Pw,Ww,Vw,jw,qw,Jw,Zw,$w,tk,ww,ek,sk,ck,uk,hk,hw,fk,gk,sw,yk,kk,Sk,Nk,Tk,Ek,Ck,Rk,Ak,Fk,Ok,Mk,Lk,zk,Pk,Wk,Uk,Vk,Gk,Hk,jk,Kk,qk,tI,Uv,eI,rI,dI,mI,yI,vI,AI,FI,OI,zI,WI,UI,VI,HI,KI,YI,ZI,Gv,$I,vk,eS,aS,sS,jv,cS,hS,pS,gS,bS,wS,IS,TS,ES,CS,AS,OS,MS,LS,zS,PS,BS,WS,US,HS,jS,XS,JS,Jk,$S,eN,aN,sN,cN,lN,dN,fN,mN,bN,Yv,vN,NN,CN,ON,LN,cw,II,PN,Jv,$v,xw,BN,WN,UN,VN,GN,HN,KN,YN,JN,tT,eT,sT,nw,iT,lT,hT,rk,QS,fT,mT,yT,xT,wT,kT,IT,ST,ET,CT,AT,OT,LT,PT,UT,HT,KT,EI,$k,XT,{kernelName:da,backendName:"cpu",kernelFunc:YT},QT,ZT,nE,aE,Dw,lE,uE,hE,hN];for(const n of dE)Fa(n);const pE={},fE={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function mE(t,e){if(!(t in pE)||null!=e){const n=function(t,e){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==e?function(t){if(ht().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==t){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(t):e;n.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete pE[t]}),!1),ht().getBool("SOFTWARE_WEBGL_ENABLED")&&(fE.failIfMajorPerformanceCaveat=!1);if(1===t)return n.getContext("webgl",fE)||n.getContext("experimental-webgl",fE);return n.getContext("webgl2",fE)}(t,e);if(null===n)return console.log("Could not get context for WebGL version",t),null;pE[t]=n}const n=pE[t];return null==n||n.isContextLost()?(delete pE[t],mE(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),pE[t])}var gE,yE,bE;function xE(t,e){return[e,t]}function vE(t){const e=O(t);return z(Math.ceil(e/4))}function wE(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function kE(t,e){const n=t;let a,r,s,o,i,c,l,u,h,d;return 2===ht().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,u=1,h=n.HALF_FLOAT,d=n.FLOAT,c=n.RGBA8):(a=t.RGBA,r=t.RGBA,s=t.RGBA,o=n.RGBA,i=t.RGBA,l=4,u=4,h=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT,c=t.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}function IE(t,e){const n=e();return ht().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(e)}}(t,e))}(t),n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(gE||(gE={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(yE||(yE={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(bE||(bE={}));function SE(t){return!!(ht().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function NE(t,e){return OE(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}const TE=/ERROR: [0-9]+:([0-9]+):/g;function EE(t,e){const n=TE.exec(e);if(null==n)return console.log("Couldn't parse line number in error: ".concat(e)),void console.log(t);const a=+n[1],r=t.split("\n"),s=r.length.toString().length+2,o=r.map(((t,e)=>P((e+1).toString(),s)+t));let i=0;for(let h=0;h<o.length;h++)i=Math.max(o[h].length,i);const c=o.slice(0,a-1),l=o.slice(a-1,a),u=o.slice(a);console.log(c.join("\n")),console.log(e.split("\n")[0]),console.log("%c ".concat(P(l[0],i)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join("\n"))}function CE(t,e){if(IE(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function RE(t,e,n,a,r,s,o){const i=t.getAttribLocation(e,n);return-1!==i&&(IE(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,a))),IE(t,(()=>t.vertexAttribPointer(i,r,t.FLOAT,!1,s,o))),IE(t,(()=>t.enableVertexAttribArray(i))),!0)}function _E(t,e,n,a){IE(t,(()=>function(t,e,n){ME(t,n),IE(t,(()=>t.activeTexture(t.TEXTURE0+n))),IE(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,a))),IE(t,(()=>t.uniform1i(n,a)))}function AE(t,e,n){IE(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),IE(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function DE(t,e){IE(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),IE(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function FE(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(e)}}(t,e))}function OE(t,e,n){const a=IE(t,(()=>e()));if(null==a)throw new Error(n);return a}function ME(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=e+t.TEXTURE0;if(a<t.TEXTURE0||a>n){const t="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(t,"."))}}function LE(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return O(t.slice(0,t.length-e))}function zE(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function PE(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[LE(t),...zE(t)]),e}function BE(t){return t%2===0}function WE(t,e){if(M(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t[t.length-1],a=e[e.length-1];if(n===a)return!0;if(BE(n)&&BE(a)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&BE(t[0])&&BE(e[0])}let UE,VE;function GE(t,e){return null!=t.getExtension(e)}function HE(t){try{if(null!=mE(t))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function jE(t){if(0===t)return!1;const e=mE(t);if(1!==t){if(GE(e,"EXT_color_buffer_float"))return KE(e);const t="EXT_color_buffer_half_float";if(GE(e,t)){const n=e.getExtension(t);return function(t,e){const n=kE(t,e),a=t.createTexture();t.bindTexture(t.TEXTURE_2D,a);const r=1,s=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,a,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(a),t.deleteFramebuffer(o),i}(e,n)}return!1}if(!GE(e,"OES_texture_float"))return!1;if(!GE(e,"WEBGL_color_buffer_float"))return!1;return KE(e)}function KE(t){const e=kE(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const r=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(a),r}function qE(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&A("complex64"!==t.dtype,(()=>"".concat(e," does not support complex64 tensors ")+"in the WebGL backend."))}))}const XE=ht();function YE(){let t,e,n,a,r,s,o,i,c,l;return 2===ht().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",a="in",r="texture",s="outputColor",o="out vec4 outputColor;",i=ht().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:c,defineRound:l}}function QE(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=Z(e);return a.map(((e,r)=>{const s="int ".concat(t[r]," = ").concat(n," / ").concat(e),o=r===a.length-1?"int ".concat(t[r+1]," = ").concat(n," - ").concat(t[r]," * ").concat(e):"index -= ".concat(t[r]," * ").concat(e);return"".concat(s,"; ").concat(o,";")})).join("")}function JE(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=Z(e);return a.map(((e,r)=>{const s="int ".concat(t[r]," = ").concat(n," / outShapeStrides[").concat(r,"]"),o=r===a.length-1?"int ".concat(t[r+1]," = ").concat(n," - ").concat(t[r]," * outShapeStrides[").concat(r,"]"):"index -= ".concat(t[r]," * outShapeStrides[").concat(r,"]");return"".concat(s,"; ").concat(o,";")})).join("")}function ZE(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(t,e){const n=t.length,a=t.map((t=>"".concat(e,"[").concat(t,"]"))),r=new Array(n-1);r[n-2]=a[n-1];for(let s=n-3;s>=0;--s)r[s]="(".concat(r[s+1]," * ").concat(a[s+1],")");return r}(t.map(((t,e)=>e)),e);return a.map(((e,r)=>{const s="int ".concat(t[r]," = ").concat(n," / ").concat(a[r]),o=r===a.length-1?"int ".concat(t[r+1]," = ").concat(n," - ").concat(t[r]," * ").concat(a[r]):"index -= ".concat(t[r]," * ").concat(a[r]);return"".concat(s,"; ").concat(o,";")})).join("")}function $E(t){const e=Z(t).map((t=>t.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(e[0]," + coords.y * ").concat(e[1]," + coords.z;\n  }\n")}XE.registerFlag("HAS_WEBGL",(()=>XE.getNumber("WEBGL_VERSION")>0)),XE.registerFlag("WEBGL_VERSION",(()=>HE(2)?2:HE(1)?1:0)),XE.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),XE.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===XE.get("WEBGL_VERSION"))),XE.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),XE.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),XE.registerFlag("WEBGL_PACK",(()=>XE.getBool("HAS_WEBGL"))),XE.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>XE.getBool("WEBGL_PACK"))),XE.registerFlag("WEBGL_PACK_CLIP",(()=>XE.getBool("WEBGL_PACK"))),XE.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>XE.getBool("WEBGL_PACK"))),XE.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>XE.getBool("WEBGL_PACK"))),XE.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>XE.getBool("WEBGL_PACK"))),XE.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>XE.getBool("WEBGL_PACK"))),XE.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>XE.getBool("WEBGL_PACK"))),XE.registerFlag("WEBGL_PACK_REDUCE",(()=>XE.getBool("WEBGL_PACK"))),XE.registerFlag("WEBGL_LAZILY_UNPACK",(()=>XE.getBool("WEBGL_PACK"))),XE.registerFlag("WEBGL_CONV_IM2COL",(()=>XE.getBool("WEBGL_PACK"))),XE.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>XE.getBool("WEBGL_PACK"))),XE.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==UE){const e=mE(t);UE=e.getParameter(e.MAX_TEXTURE_SIZE)}return UE}(XE.getNumber("WEBGL_VERSION")))),XE.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==VE){const e=mE(t);VE=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,VE)}(XE.getNumber("WEBGL_VERSION")))),XE.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=XE.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=mE(t);return e=GE(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:GE(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),XE.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>XE.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Gr())),XE.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=mE(t);if(1===t){if(!GE(e,"OES_texture_float"))return!1}else if(!GE(e,"EXT_color_buffer_float"))return!1;return KE(e)}(XE.getNumber("WEBGL_VERSION")))),XE.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!XE.getBool("WEBGL_FORCE_F16_TEXTURES")&&XE.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),XE.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>jE(XE.getNumber("WEBGL_VERSION")))),XE.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=XE.getNumber("WEBGL_VERSION"))&&null!=mE(t).fenceSync;var t})),XE.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>XE.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),XE.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if("number"!==typeof t)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(t,"."));if(t<0&&-1!==t)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(t,"."))})),XE.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Gr()?1:-1),(t=>{if("number"!==typeof t)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(t,"."));if(t<0&&-1!==t)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(t,"."))})),XE.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),XE.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),XE.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),XE.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),XE.registerFlag("WEBGL_EXP_CONV",(()=>!1)),XE.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>XE.getBool("IS_TEST"))),XE.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),XE.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),XE.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),XE.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const tC="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:eC}=a;function nC(t,e,n){const a=[];if(t.forEach((t=>{const e=O(t.shapeInfo.logicalShape);if(t.shapeInfo.isUniform?a.push("uniform float ".concat(t.name).concat(e>1?"[".concat(e,"]"):"",";")):(a.push("uniform sampler2D ".concat(t.name,";")),a.push("uniform int offset".concat(t.name,";"))),n.enableShapeUniforms){const{uniformShape:e}=dC(n.packedInputs,t.shapeInfo.logicalShape,t.shapeInfo.texShape);switch(e.length){case 1:a.push("uniform int ".concat(t.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(t.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(t.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(t.name,"Shape;"))}a.push("uniform ivec2 ".concat(t.name,"TexShape;"))}})),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((t=>{a.push("uniform ".concat(t.type," ").concat(t.name).concat(t.arrayIndex?"[".concat(t.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),s=t.map((t=>function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?rC(t,a):aC(t,a);const s=t.shapeInfo.logicalShape,o=e.logicalShape;s.length<=o.length&&(r+=n?function(t,e){const n=t.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.shapeInfo.logicalShape.length,o=e.logicalShape.length,i=eC(t.shapeInfo.logicalShape,e.logicalShape),c=hC(o),l=o-s;let u;const h=["x","y","z","w","u","v"];u=0===s?"":o<2&&i.length>=1?"coords = 0;":i.map((t=>"coords.".concat(h[t+l]," = 0;"))).join("\n");let d="";d=o<2&&s>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords.".concat(h[e+l]))).join(", ");let p="return outputValue;";const f=1===O(t.shapeInfo.logicalShape),m=O(e.logicalShape),g=1===m;if(1!==s||f||g){if(f&&!g)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const t=s-2,e=s-1;i.indexOf(t)>-1&&i.indexOf(e)>-1?p="return vec4(outputValue.x);":i.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(c," coords = getOutputCoords();\n      ").concat(u,"\n      vec4 outputValue = get").concat(a,"(").concat(d,");\n      ").concat(p,"\n    }\n  ")}(t,e):function(t,e){const n=t.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.texShape,o=t.shapeInfo.texShape,i=t.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!t.shapeInfo.isUniform&&i===c&&null==t.shapeInfo.flatOffset&&M(o,s))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const l=hC(c),u=eC(t.shapeInfo.logicalShape,e.logicalShape),h=c-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":c<2&&u.length>=1?"coords = 0;":u.map((t=>"coords.".concat(p[t+h]," = 0;"))).join("\n");let f="";f=c<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords.".concat(p[e+h]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(d,"\n      return get").concat(a,"(").concat(f,");\n    }\n  ")}(t,e));return r}(t,e,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=e.texShape,i=YE(),c=function(t){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(t.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(i);let l,u,h=function(t){const e="".concat(t.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(t.varyingFs," vec2 resultUV;\n    ").concat(t.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(t.defineSpecialNaN,"\n    ").concat(t.defineSpecialInf,"\n    ").concat(t.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(sC,"\n    ").concat(oC,"\n    ").concat(iC,"\n  ");return e}(i);e.isPacked?(l=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,e,n);case 2:return function(t,e,n){const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(M(t,e))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(t[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(t,e,n);case 3:return function(t,e,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(t,e,n);default:return function(t,e,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let o=s,i="",c="b, r, c";for(let l=2;l<t.length-1;l++)o*=t[t.length-l-1],i="\n      int b".concat(l," = index / ").concat(o,";\n      index -= b").concat(l," * ").concat(o,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(t.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(t.length,"(").concat(c,");\n    }\n  ")}(t,e,n)}}(e.logicalShape,o,n.enableShapeUniforms),u=function(t){return"\n    void setOutput(vec4 val) {\n      ".concat(t.output," = val;\n    }\n  ")}(i)):(l=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){if(1===e[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(e[1],".0);\n      }\n    ");if(1===e[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(e[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      return resTexRC.x * ").concat(e[1]," + resTexRC.y;\n    }\n  ")}(0,e,n);case 2:return function(t,e,n){if(M(t,e))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(e[0],", ").concat(e[1],"));\n      }\n    ");if(1===t[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===t[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      int r = index / ").concat(t[1],";\n      int c = index - r * ").concat(t[1],";\n      return ivec2(r, c);\n    }\n  ")}(t,e,n);case 3:return function(t,e,n){if(n){const e=JE(["r","c","d"],t);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(e,"\n    return ivec3(r, c, d);\n  }\n")}const a=QE(["r","c","d"],t);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,e,n);case 4:return function(t,e,n){if(n){const e=JE(["r","c","d","d2"],t);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(e,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=QE(["r","c","d","d2"],t);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(t,e,n);case 5:return function(t,e){const n=QE(["r","c","d","d2","d3"],t);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(e[0],",\n                             ").concat(e[1],"));\n\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(t,e);case 6:return function(t,e){const n=QE(["r","c","d","d2","d3","d4"],t);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(t,e);default:throw new Error("".concat(t.length,"-D output sampling is not yet supported"))}}(e.logicalShape,o,n.enableShapeUniforms),u=function(t){return"\n    void setOutput(float val) {\n      ".concat(t.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(i)),n.packedInputs&&(h+=cC);return[h,c,u,r,l,s,n.userCode].join("\n")}function aC(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=lC(n);if(e)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=t.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t,e);case 1:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(uC(t),"\n      }\n    ");const r=t.shapeInfo.texShape,s=r[0],o=r[1];if(1===o&&1===s)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=lC(n);if(1===o)return e?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(s,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===s)return e?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(e)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(s,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=t.shapeInfo.texShape;if(null!=s&&M(n,s)){if(e)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const t=s[0],n=s[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(t,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:o,keptDims:i}=V(n),c=o;if(c.length<n.length){const n=pC(t,c),a=["row","col"];return"\n      ".concat(aC(n,e),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(fC(a,i),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(uC(t),"\n      }\n    ");const l=s[0],u=s[1],h=lC(a);if(1===u)return e?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(l,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===l)return e?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(u,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(e)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(h,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(h,";\n    vec2 uv = uvFromFlat(").concat(l,", ").concat(u,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],o=n[2],{newShape:i,keptDims:c}=V(n),l=i;if(l.length<n.length){const n=pC(t,l),a=["row","col","depth"];return"\n        ".concat(aC(n,e),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(fC(a,c),");\n        }\n      ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(s,", ").concat(o,", 1)));\n        ").concat(uC(t),"\n      }\n    ");const u=t.shapeInfo.texShape,h=u[0],d=u[1],p=t.shapeInfo.flatOffset;if(d===s&&null==p)return e?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(o,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(d,".0, ").concat(h,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(d===o&&null==p)return e?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(d,".0, ").concat(h,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const f=lC(a);if(e)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(s," + col * ").concat(o," + depth + ").concat(f,";\n        vec2 uv = uvFromFlat(").concat(h,", ").concat(d,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(t,e);case 4:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],o=n[2]*s,i=n[1]*o,{newShape:c,keptDims:l}=V(n);if(c.length<n.length){const n=pC(t,c),a=["row","col","depth","depth2"];return"\n      ".concat(aC(n,e),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(fC(a,l),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(o,", ").concat(s,", 1)));\n        ").concat(uC(t),"\n      }\n    ");const u=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1],f="int stride2 = ".concat(a,"Shape[3];"),m="int stride1 = ".concat(a,"Shape[2] * stride2;"),g="int stride0 = ".concat(a,"Shape[1] * stride1;");if(p===i&&null==u)return e?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(f,"\n        ").concat(m,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(o,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(p===s&&null==u)return e?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const y=lC(a);if(e)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(f,"\n      ").concat(m,"\n      ").concat(g,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," +\n          depth * ").concat(s," + depth2;\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(t,e);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[4],s=e[3]*r,o=e[2]*s,i=e[1]*o,{newShape:c,keptDims:l}=V(e);if(c.length<e.length){const e=pC(t,c),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(aC(e),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(fC(n,l),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(i,", ").concat(o,", ").concat(s,", ").concat(r,")) +\n          depth3;\n        ").concat(uC(t),"\n      }\n    ");const u=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(o,", ").concat(s,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(p===r&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3],",\n               ").concat(e[2]*e[3],", ").concat(e[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const f=lC(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," + depth * ").concat(s," +\n          depth2 * ").concat(r," + depth3 + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=V(e);if(r.length<e.length){const e=pC(t,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(aC(e),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(fC(n,s),");\n      }\n    ")}const o=e[5],i=e[4]*o,c=e[3]*i,l=e[2]*c,u=e[1]*l;if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(o,", 1)));\n        ").concat(uC(t),"\n      }\n    ");const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(c,", ").concat(i,", ").concat(o,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===o&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3]*e[4],",\n               ").concat(e[2]*e[3]*e[4],",\n               ").concat(e[3]*e[4],",\n               ").concat(e[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=lC(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(u," + col * ").concat(l," + depth * ").concat(c," +\n          depth2 * ").concat(i," + depth3 * ").concat(o," + depth4 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function rC(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),a=YE();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(e,", halfCR);\n    }\n  ")}(t);case 1:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,s=YE();if(e)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=t.shapeInfo.texShape,o=s[0],i=s[1],c=YE();if(null!=s&&M(n,s))return e?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(o,".0);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    ");if(e)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ");const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],u=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(u,", ").concat(l[0],", ").concat(l[1],", row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ")}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=t.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=pC(t,n.slice(1)),o=["b","row","col"];return"\n        ".concat(rC(s,e),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(fC(o,a),");\n        }\n      ")}const i=YE();if(e)return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=o[0],l=o[1],u=Math.ceil(n[2]/2),h=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(h,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(t,e);default:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=YE();if(e)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=t.shapeInfo.logicalShape,o=s.length,i=t.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],h=Math.ceil(s[o-1]/2);let d=h*Math.ceil(s[o-2]/2),p="int b, int row, int col",f="b * ".concat(d," + (row / 2) * ").concat(h," + (col / 2)");for(let m=2;m<o-1;m++)p="int b".concat(m,", ")+p,d*=s[o-m-1],f="b".concat(m," * ").concat(d," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t,e)}}const sC="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",oC="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",iC="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",cC="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function lC(t){return"offset".concat(t)}function uC(t){const e=t.name,n=O(t.shapeInfo.logicalShape);return n<2?"return ".concat(e,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(e,"[i];\n      }\n    }\n  ")}function hC(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error("GPU for rank ".concat(t," is not yet supported"))}function dC(t,e,n){const{newShape:a,keptDims:r}=V(e),s=e.length,o=t&&3===s&&1===e[0],i=o?e.slice(1):a,c=!t&&s>1&&!M(e,n)&&a.length<s||o;return{useSqueezeShape:c,uniformShape:c?i:e,keptDims:r}}function pC(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function fC(t,e){return e.map((e=>t[e])).join(", ")}function mC(t,e,n,a){const r=n.map(((t,n)=>{const a={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(a.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:a}})),s=r.map((t=>t.shapeInfo)),o={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},i=nC(r,o,e),c=function(t,e){const n=OE(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(IE(t,(()=>t.shaderSource(n,e))),IE(t,(()=>t.compileShader(n))),ht().get("ENGINE_COMPILE_ONLY"))return n;if(!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw EE(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t.gl,i),l=t.createProgram(c);return ht().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(t.buildVao(l),Object.assign({program:e,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:o},gC(t,e,l)))}function gC(t,e,n){const a=[],r=[];let s,o,i,c=null,l=null;l=t.getUniformLocation(n,"NAN",!1),1===ht().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(n,"INFINITY",!1));const u=!1;for(const h of e.variableNames){const r={name:h,uniform:t.getUniformLocation(n,h,u),offset:t.getUniformLocation(n,"offset".concat(h),u)};e.enableShapeUniforms&&(r.shape=t.getUniformLocation(n,"".concat(h,"Shape"),u),r.texShape=t.getUniformLocation(n,"".concat(h,"TexShape"),u)),a.push(r)}if(e.enableShapeUniforms&&(s=t.getUniformLocation(n,"outShape",u),i=t.getUniformLocation(n,"outShapeStrides",u),o=t.getUniformLocation(n,"outTexShape",u)),e.customUniforms)for(const h of e.customUniforms)r.push(t.getUniformLocation(n,h.name,u));return{variablesLocations:a,customUniformLocations:r,infLoc:c,nanLoc:l,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}}function yC(t,e){if(t.length!==e.length)throw Error("Binary was compiled with ".concat(t.length," inputs, but ")+"was executed with ".concat(e.length," inputs"));t.forEach(((t,n)=>{const a=t.logicalShape,r=e[n],s=r.shape;if(!M(a,s))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(s," must match"));if(t.isUniform&&r.isUniform)return;const o=t.texShape,i=r.isUniform?null:r.texData.texShape;if(!M(o,i))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(o," and ").concat(i," must match"))}))}function bC(t){return ht().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}class xC{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=gE.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=YE();this.outputShape=t,this.enableShapeUniforms=bC(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?JE(["r","c","d"],t):QE(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}class vC{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=gE.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=YE();this.outputShape=t,this.enableShapeUniforms=bC(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?JE(["r","c","d"],t):QE(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}class wC{constructor(t){this.variableNames=["A"],this.outTexUsage=yE.DOWNLOAD;const e=YE();this.outputShape=t,this.userCode="\n      ".concat(tC,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}class kC{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=yE.DOWNLOAD;const e=YE();this.outputShape=t,this.userCode="\n      ".concat(tC,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}const IC={R:0,G:1,B:2,A:3};class SC{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=YE();this.outputShape=t,this.enableShapeUniforms=bC(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)");let s="";for(let o=0;o<n.length;o++){const t=n[o];s+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(IC[t],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":$E(t),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(s,"\n        }\n        ").concat(a.output," = vec4(").concat(r,", 0., 0., 0.);\n      }\n    ")}}class NC{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=YE();this.outputShape=t,this.enableShapeUniforms=bC(this.outputShape.length);let a="",r="result";e&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let e=0;e<=1;e++){const r=2*s+e;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(e," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(t[2]),") {\n          localCoords[2] += ").concat(e,";\n          if (localCoords[1] + ").concat(s," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(t[1]),") {\n            localCoords[1] += ").concat(s,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(r,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(r,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(r,"] = values[2];\n            } else {\n              result[").concat(r,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":$E(t),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(r,";\n        }\n    ")}}function TC(t){const e=YE();return function(t,e){const n=OE(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(IE(t,(()=>t.shaderSource(n,e))),IE(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,"".concat(e.version,"\n    precision highp float;\n    ").concat(e.attribute," vec3 clipSpacePos;\n    ").concat(e.attribute," vec2 uv;\n    ").concat(e.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function EC(t){return function(t,e){const n=OE(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return IE(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),IE(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function CC(t){return function(t,e){const n=OE(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return IE(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),IE(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}function RC(t,e,n,a,r,s){!function(t,e){const n=ht().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const n="[".concat(t,"x").concat(e,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(t>n||e>n){const a="[".concat(t,"x").concat(e,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(e,n);const o=function(t){return OE(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),i=t.TEXTURE_2D;return IE(t,(()=>t.bindTexture(i,o))),IE(t,(()=>t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),IE(t,(()=>t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),IE(t,(()=>t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST))),IE(t,(()=>t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST))),1===ht().getNumber("WEBGL_VERSION")?IE(t,(()=>t.texImage2D(i,0,a,e,n,0,r,s,null))):IE(t,(()=>t.texStorage2D(i,1,a,e,n))),IE(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),{texture:o,texShape:[n,e]}}function _C(t){return t.internalFormatFloat}function AC(t){return t.internalFormatHalfFloat}function DC(t){return t.downloadTextureFormat}function FC(t){return t.internalFormatPackedFloat}function OC(t){return t.internalFormatPackedHalfFloat}function MC(t,e,n,a,r,s,o,i){const c=t,l=new Float32Array(function(t,e){const[n,a]=wE(t,e);return n*a*4}(s,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class LC{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=ht().getNumber("WEBGL_VERSION");if(null!=t?(this.gl=t,function(t,e){pE[t]=e}(e,t)):this.gl=mE(e),t=this.gl,2===ht().getNumber("WEBGL_VERSION")){const e=t;this.createVertexArray=()=>IE(e,(()=>e.createVertexArray())),this.bindVertexArray=t=>IE(e,(()=>e.bindVertexArray(t))),this.deleteVertexArray=t=>IE(e,(()=>e.deleteVertexArray(t))),this.getVertexArray=()=>IE(e,(()=>e.getParameter(e.VERTEX_ARRAY_BINDING)))}else if(null!=t){const e=t.getExtension("OES_vertex_array_object");if(null==e)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>IE(t,(()=>e.createVertexArrayOES())),this.bindVertexArray=n=>IE(t,(()=>e.bindVertexArrayOES(n))),this.deleteVertexArray=n=>IE(t,(()=>e.deleteVertexArrayOES(n))),this.getVertexArray=()=>IE(t,(()=>t.getParameter(e.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===ht().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=NE(this.gl,t),GE(this.gl,e))this.textureHalfFloatExtension=NE(this.gl,e);else if(ht().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),GE(this.gl,a))this.colorBufferHalfFloatExtension=NE(this.gl,a);else if(ht().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",GE(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!GE(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=EC(this.gl),this.indexBuffer=CC(this.gl),this.framebuffer=function(t){return OE(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=kE(this.gl,this.textureHalfFloatExtension)}get debug(){return ht().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;IE(t,(()=>t.finish())),IE(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),IE(t,(()=>t.deleteFramebuffer(this.framebuffer))),IE(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),IE(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),IE(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=xE(e,n);return RC(t,r,s,_C(a),a.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=xE(e,n);return RC(t,r,s,AC(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=xE(e,n);return RC(t,r,s,DC(a),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){IE(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?2===ht().getNumber("WEBGL_VERSION")?IE(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data))):IE(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):2===ht().getNumber("WEBGL_VERSION")?IE(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n))):IE(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),IE(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,a){this.throwIfDisposed(),function(t,e,n,a,r,s){let o,i,c;IE(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),r instanceof Uint8Array?(o=new Uint8Array(n*a*4),i=t.UNSIGNED_BYTE,c=t.RGBA):(o=new Float32Array(n*a*4),i=t.FLOAT,c=s.internalFormatPackedFloat),o.set(r),2===ht().getNumber("WEBGL_VERSION")?IE(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,a,t.RGBA,i,o))):IE(t,(()=>t.texImage2D(t.TEXTURE_2D,0,c,n,a,0,t.RGBA,i,o))),IE(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=wE(e,n);return RC(t,r,s,OC(a),t.RGBA,a.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=wE(e,n);return RC(t,r,s,FC(a),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(DE(this.gl,this.framebuffer),this.outputTexture=null),IE(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,a){const[r,s]=xE(e,n),o=new Uint8Array(e*n*4);return IE(t,(()=>t.readPixels(0,0,r,s,a.downloadTextureFormat,t.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,a,r,s){return MC(this.gl,t,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const a=t,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,e),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const a=function(t,e,n,a){const r=t.createBuffer();IE(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r)));const s=16*e*n;return IE(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,s,t.STREAM_READ))),IE(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),IE(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),r}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(ht().getBool("WEBGL_FENCE_API_ENABLED")){const a=t,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=a.clientWaitSync(r,0,0);return t===a.ALREADY_SIGNALED||t===a.CONDITION_SATISFIED},e=r}else ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const a=new Float32Array(e*n*4);return IE(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,a))),a}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=TC(e));const n=function(t){return OE(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);IE(e,(()=>e.attachShader(n,this.vertexShader))),IE(e,(()=>e.attachShader(n,t))),function(t,e){if(IE(t,(()=>t.linkProgram(e))),!ht().get("ENGINE_COMPILE_ONLY")&&!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&CE(e,a),a}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;IE(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(t,e,n){IE(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),RE(t,e,"clipSpacePos",n,3,20,0)&&RE(t,e,"uv",n,2,20,12)}(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&(IE(this.gl,(()=>this.gl.deleteProgram(t))),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&CE(this.gl,this.program),IE(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(t,e,n){return OE(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),IE(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),_E(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[a,r]=wE(e,n);this.setOutputMatrixTextureDriver(t,a,r)}setOutputMatrixWriteRegion(t,e,n,a){this.setOutputMatrixWriteRegionDriver(n,t,a,e)}setOutputPackedMatrixWriteRegion(t,e,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&CE(this.gl,this.program),FE(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}IE(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),IE(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=NE(this.gl,2===ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await B((()=>this.disposed||this.isQueryAvailable(t,ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in ht().platform&&(n=ht().platform.setTimeoutCustom.bind(ht().platform)),B((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),AE(this.gl,t,this.framebuffer),this.debug&&FE(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(AE(this.gl,this.outputTexture,this.framebuffer),this.debug&&FE(this.gl)):DE(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const a=this.gl;AE(a,t,this.framebuffer),this.debug&&FE(a),this.outputTexture=t,IE(a,(()=>a.viewport(0,0,e,n))),IE(a,(()=>a.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,a){this.throwIfDisposed(),IE(this.gl,(()=>this.gl.scissor(t,e,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:zC,bincountImpl:PC,bincountReduceImpl:BC,bitwiseAndImpl:WC,castImpl:UC,ceilImpl:VC,concatImpl:GC,equalImpl:HC,expImpl:jC,expm1Impl:KC,floorImpl:qC,gatherNdImpl:XC,gatherV2Impl:YC,greaterImpl:QC,greaterEqualImpl:JC,lessImpl:ZC,lessEqualImpl:$C,linSpaceImpl:tR,logImpl:eR,maxImpl:nR,maximumImpl:aR,minimumImpl:rR,multiplyImpl:sR,negImpl:oR,notEqualImpl:iR,prodImpl:cR,raggedGatherImpl:lR,raggedRangeImpl:uR,raggedTensorToTensorImpl:hR,rangeImpl:dR,rsqrtImpl:pR,scatterImpl:fR,sigmoidImpl:mR,simpleAbsImpl:gR,sliceImpl:yR,sparseFillEmptyRowsImpl:bR,sparseReshapeImpl:xR,sparseSegmentReductionImpl:vR,sqrtImpl:wR,staticRegexReplaceImpl:kR,stridedSliceImpl:IR,stringNGramsImpl:SR,stringSplitImpl:NR,stringToHashBucketFastImpl:TR,subImpl:ER,tileImpl:CR,topKImpl:RR,transposeImpl:_R,uniqueImpl:AR}=r;function DR(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>"".concat(t,".").concat(e)))}function FR(t,e){return 1===e?[t]:DR(t,e)}class OR{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=bC(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const t=FR("rc",this.rank),e=hC(this.rank),n=this.getOutOfBoundsCondition(t),a=this.getSetup(t),r=this.getOutput(t);this.userCode="\n        void main() {\n          ".concat(e," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(r,"));\n          }\n        }\n      ")}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let e=2;e<this.rank;e++)r="".concat(t[t.length-1-e],",")+r;e.push(r)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let e="";for(let n=this.rank-2;n<this.rank;n++)e+="".concat(t[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(e[0],";\n      int c = ").concat(e[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(t){const e=this.getSourceCoordsArr(t);if(1===this.rank){const t=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(t," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(e[0],"),\n            cEdge ? 0. : getA(").concat(e[1],"),\n            rEdge ? 0. : getA(").concat(e[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(e[3],")")}}class MR{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=bC(this.outputShape.length);let n="";for(let a=0;a<4;a++){let t="thisRC = rc;";a%2===1&&(t+="thisRC.z += 1;"),a>1&&(t+="thisRC.y += 1;"),n+="\n        ".concat(t,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(t,e){const n=e?ZE(["r","c","d"],"inputShape"):QE(["r","c","d"],t);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":$E(t),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":t[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":t[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class LR{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,n){const a=PR(e,n),r=BR(t,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=zR(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const t=this.freeTextures[r].pop();return this.usedTextures[r].push(t),t}let o;return a===bE.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):a===bE.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):a===bE.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):a===bE.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):a===bE.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(t,e,n,a){if(null==this.freeTextures)return;const r=PR(n,a),s=BR(e,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const o=zR(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),i=ht().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=o):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const c=this.usedTextures[s],l=c&&c.indexOf(t);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(t,")"));const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*e),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function zR(t,e,n,a,r){const s=function(t,e){switch(t){case bE.PACKED_2X2_FLOAT32:return FC(e);case bE.PACKED_2X2_FLOAT16:return OC(e);case bE.UNPACKED_FLOAT32:return _C(e);case bE.UNPACKED_FLOAT16:return AC(e);case bE.PACKED_4X1_UNSIGNED_BYTE:return DC(e);default:throw new Error("Unknown physical texture type ".concat(t))}}(e,a);let o;if(r){const[e,n]=wE(t[0],t[1]);o=e*n}else{const[e,n]=xE(t[0],t[1]);o=e*n}const i=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(e))}(n,s);return o*i}function PR(t,e){if(t===yE.UPLOAD)return bE.PACKED_2X2_FLOAT32;if(t===yE.RENDER||null==t)return function(t){return ht().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?bE.PACKED_2X2_FLOAT32:bE.UNPACKED_FLOAT32:t?bE.PACKED_2X2_FLOAT16:bE.UNPACKED_FLOAT16}(e);if(t===yE.DOWNLOAD||t===yE.PIXELS)return bE.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(t))}function BR(t,e,n){return"".concat(t[0],"_").concat(t[1],"_").concat(e,"_").concat(n)}class WR{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=bC(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const UR="if (isnan(x)) return x;",VR="return x;",GR="return abs(x);";const HR="return (x >= 0.0) ? x : (exp(x) - 1.0);",jR=UR+"\n  return (x < 0.0) ? 0.0 : x;\n",KR=UR+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",qR="return x;",XR="return 1.0 / (1.0 + exp(-1.0 * x));",YR="return x;",QR="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",JR="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",ZR="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",$R="return 1.0 / (1.0 + exp(-1.0 * x));";class t_{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=bC(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class e_{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=bC(this.outputShape.length);const e=t.length,n=FR("rc",e),a=hC(e),r=function(t,e){if(1===t)return"rc";let n="";for(let a=0;a<t;a++)n+=e[a],a<t-1&&(n+=",");return n}(e,n),s=n.slice(-2),o=e<=1?"rc":"vec2(".concat(s.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const n_=xh,a_={};const r_=ht().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class s_ extends N{nextDataId(){return s_.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ht().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(null!=t){if(t instanceof LC)e=t;else{const n=mE(ht().getNumber("WEBGL_VERSION"),t);e=new LC(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const t=mE(ht().getNumber("WEBGL_VERSION"));e=new LC(t),this.binaryCache=((n=ht().getNumber("WEBGL_VERSION"))in a_||(a_[n]={}),a_[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new LR(this.gpgpu),this.numMBBeforeWarning=null==ht().global.screen?1024:ht().global.screen.height*ht().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new S(this,ns())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,n,a,r,s){const o=this.makeTensorInfo(e,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:t,texShape:[a,r]},i.texShape=[a,r];const c=PE(e),l=new SC(c,!1,s),u=this.runWebGLProgram(l,[o],n,[[a,r]]);return u.shape=e,i.texture=null,this.disposeIntermediateTensorInfo(o),u.dataId}write(t,e,n){if((ht().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ht().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:e,dtype:n,values:t,usage:yE.UPLOAD,refCount:1}),a}refCount(t){if(this.texData.has(t)){return this.texData.get(t).refCount}return 0}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}move(t,e,n,a,r){if(ht().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:a,values:e,usage:yE.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:o,isPacked:i}=e;if(null!=s){let e;e=i?new t_(o,qR):new WR(o,qR);const n=this.runWebGLProgram(e,[{dataId:t,shape:o,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===a)return n;const c=null!=this.activeTimers;let l,u;if(c&&(l=$a()),"complex64"===a){u=zu(this.readSync(r.real.dataId),this.readSync(r.imag.dataId))}else u=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=$a()-l),this.convertAndCacheOnCPU(t,u)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:o,isPacked:i}=e;if(null!=r){let e;e=i?new t_(a,qR):new WR(a,qR);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if(ht().getBool("DEBUG")&&!ht().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ht().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,u=null;if("complex64"!==s&&ht().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(t);const e=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(e.texture.texture,...vE(a))}if(this.pendingRead.set(t,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const t=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);l=zu(t[0],t[1])}else if(null==u)l=this.getValuesFromTexture(t);else{const t=O(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,t)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=u){const t=this.gpgpu.gl;IE(t,(()=>t.deleteBuffer(u)))}const h=this.convertAndCacheOnCPU(t,l),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&ns().removeDataId(t,this),this.pendingDeletes--),h}readToGPU(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(t),{values:a,shape:r,slice:s,dtype:o,isPacked:i,texture:c}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=i?new t_(r,qR):new WR(r,qR);const a=this.runWebGLProgram(n,[{dataId:t,shape:r,dtype:o}],o),s=this.readToGPU(a,e);return this.disposeIntermediateTensorInfo(a),s}if(null==c)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(t,e.customTexShape),u=ns().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:u},h.texture)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>er(t)));return Ks(t.shape,t.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ks(t.shape,t.dtype,e)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!SE(n)){if(ht().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:a}=this.texData.get(t),r=O(e);if(ht().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...vE(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const s=ht().getBool("WEBGL_PACK")&&!0===a,o=s?PE(e):e,i=s?new kC(o):new wC(o),c=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:t}],"float32"),l=this.texData.get(c.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),u}timerAvailable(){return ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=ar(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),s=ar(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(r);o.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),o.getExtraProfileInfo=()=>t.map(((t,e)=>({name:s[e],ms:t}))).map((t=>"".concat(t.name,": ").concat(t.ms))).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:$a(),endMs:null}}endTimer(t){return ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=$a(),t)}async getQueryTime(t){if(ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:a,usage:r,isPacked:s,slice:o}=this.texData.get(t),i=o&&o.origDataId||t,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=e&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(e,a,r,s)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r_;return ht().getBool("WEBGL_CPU_FORWARD")&&t.every((t=>null==this.texData.get(t.dataId).texture&&O(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){Ta("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return n_(t.shape,e)}packedUnaryOp(t,e,n){const a=new t_(t.shape,e),r=this.compileAndRun(a,[t],n);return ns().makeTensorFromTensorInfo(r)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=gR(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(ht().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,GR,t.dtype);const e=new WR(t.shape,GR),n=this.compileAndRun(e,[t]);return ns().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let a;if("string"===e&&null!=n&&n.length>0&&q(n[0])){const r=n.map((t=>tr(t)));a=this.write(r,t,e)}else a=this.write(n,t,e);return this.texData.get(a).usage=null,{dataId:a,shape:t,dtype:e}}makeOutput(t,e,n){return ns().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new e_(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new OR(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[LE(t.shape),...zE(t.shape)],a={dtype:t.dtype,shape:n,dataId:t.dataId},r=[LE(e),...zE(e)],s=new MR(r,n),o=[n],i=this.runWebGLProgram(s,[a],t.dtype,o,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:a,shape:r,dtype:s}=n;if(null!=e){A(O(r)<=e[0]*e[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=PE(r);let i;i=a?new vC(o):new xC(o);const c=[null!=e?e:vE(o)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:t}],s,c,!0,e).dataId}}runWebGLProgram(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;const o=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(o.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===gE.DENSE){const e=null!=s?s:vE(t.outputShape);i.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===O(o.shape))return i.values=G(o.dtype,0),o;const c=[],l=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&O(e.shape)<=ht().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!n.isPacked!==!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),c.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!WE(n.shape,e.shape)){const t=e,a=e.shape;e.shape=n.shape,e=this.packedReshape(e,a),c.push(e),n=this.texData.get(e.dataId),t.shape=a}return{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const u={shape:o.shape,texData:i,isUniform:!1},h=function(t,e,n){let a="";e.concat(n).forEach((e=>{const r=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!e.isUniform){const s=e.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:c}=dC(t.packedInputs,e.shape,s);let l="",u="",h="";if(1===i.length&&t.packedInputs){const t=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l="".concat(t[0]>1,"_").concat(t[1]>1)}else if(2!==i.length||t.packedInputs){if(i.length>2&&!t.packedInputs){const t=Z(i);h="".concat(t[0]===s[1],"_").concat(t[t.length-1]===s[1])}}else u="".concat(i[0]>1,"_").concat(i[1]>1);const d=e.shape.length,p=2===i.length&&M(e.shape,s),f=1===O(e.shape),m=xo(e.shape,n.shape),g=!t.packedInputs&&d===n.shape.length&&M(s,n.texData.texShape),y=t.packedInputs||i.length>2?"":"".concat(s[0]>1,"_").concat(s[1]>1);a+="".concat(d,"_").concat(g,"_").concat(o?c:"","_").concat(i.length,"_").concat(f,"_").concat(m,"_").concat(p,"_").concat(l,"_").concat(u,"_").concat(h,"_").concat(y,"_").concat(r)}else{const t=e.isUniform?"uniform":e.texData.texShape;a+="".concat(e.shape,"_").concat(t,"_").concat(r)}}));const r=t.userCode;let s=t.constructor.name;return s+="_"+a+"_"+r+"".concat(ht().getNumber("WEBGL_VERSION")),s}(t,l,u),d=this.getAndSaveBinary(h,(()=>mC(this.gpgpu,t,l,u))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),ht().get("ENGINE_COMPILE_ONLY")||function(t,e,n,a,r){e.program.enableShapeUniforms||(yC(e.inShapeInfos,n),yC([e.outShapeInfo],[a]));const s=a.texData.texture,o=a.texData.texShape;a.texData.isPacked?t.setOutputPackedMatrixTexture(s.texture,o[0],o[1]):t.setOutputMatrixTexture(s.texture,o[0],o[1]),t.setProgram(e.webGLProgram),t.bindVertexArray(e.webGLProgram.vao),1===ht().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN);for(let c=0;c<n.length;++c){const a=n[c],{uniform:r,offset:s,shape:o,texShape:i}=e.variablesLocations[c];if(o){const{uniformShape:n}=dC(e.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:t.gl.uniform1iv(o,new Int32Array(n));break;case 2:t.gl.uniform2iv(o,new Int32Array(n));break;case 3:t.gl.uniform3iv(o,new Int32Array(n));break;case 4:t.gl.uniform4iv(o,new Int32Array(n))}}if(i&&t.gl.uniform2i(i,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(O(a.shape)<2)t.gl.uniform1f(r,a.uniformValues[0]);else{let e=a.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(r,e)}else null!=a.texData.slice&&null!=s&&t.gl.uniform1i(s,a.texData.slice.flatOffset),t.setInputMatrixTexture(a.texData.texture.texture,r,c)}const i=e.outShapeLocation;if(i)switch(a.shape.length){case 1:t.gl.uniform1iv(i,new Int32Array(a.shape));break;case 2:t.gl.uniform2iv(i,new Int32Array(a.shape));break;case 3:t.gl.uniform3iv(i,new Int32Array(a.shape));break;case 4:t.gl.uniform4iv(i,new Int32Array(a.shape))}if(e.outShapeStridesLocation){const n=Z(a.shape);switch(a.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(n));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(n));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(n))}}if(e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),e.program.customUniforms&&r)for(let c=0;c<e.program.customUniforms.length;++c){const n=e.program.customUniforms[c],a=e.customUniformLocations[c],s=r[c];if("float"===n.type)t.gl.uniform1fv(a,s);else if("vec2"===n.type)t.gl.uniform2fv(a,s);else if("vec3"===n.type)t.gl.uniform3fv(a,s);else if("vec4"===n.type)t.gl.uniform4fv(a,s);else if("int"===n.type)t.gl.uniform1iv(a,s);else if("ivec2"===n.type)t.gl.uniform2iv(a,s);else if("ivec3"===n.type)t.gl.uniform3iv(a,s);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));t.gl.uniform4iv(a,s)}}t.executeProgram()}(this.gpgpu,d,l,u,a),c.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)}));const m=ht().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const t=$a();t-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!ht().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const t=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),t}return o}compileAndRun(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||e[0].dtype;return this.runWebGLProgram(t,e,n,a,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!ht().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=rs((()=>{if(!ht().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=ht().getBool("DEBUG");ht().set("DEBUG",!1);const e=this.abs(ro(1e-8)).dataSync()[0];if(ht().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:a,values:r,texture:s,usage:o,isPacked:i}=e;if(null!=s)return;const c=null!=this.activeTimers;let l;c&&(l=$a());let u=e.texShape;if(null==u&&(u=function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=ht().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=ht().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&ht().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),e&&(n*=2,a*=2,1===(t=t.map(((e,n)=>n>=t.length-2?R(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=V(t);t=e.newShape}let r=O(t),s=null;t.length<=1&&r<=n?s=[1,r]:2===t.length&&t[0]<=n&&t[1]<=n?s=t:3===t.length&&t[0]*t[1]<=n&&t[2]<=n?s=[t[0]*t[1],t[2]]:3===t.length&&t[0]<=n&&t[1]*t[2]<=n?s=[t[0],t[1]*t[2]]:4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n?s=[t[0]*t[1]*t[2],t[3]]:4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(s=[t[0],t[1]*t[2]*t[3]]);const o=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(e?2:1)&&Math.min(...s)>0;if(null==s||o)if(e){const e=LE(t);let n=2,a=2;t.length&&([n,a]=zE(t)),r=e*(n/2)*(a/2),s=z(r).map((t=>2*t))}else s=z(r);return s}(n,i),e.texShape=u),null!=r){const t=PE(n);let s,o=u[1],h=u[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!i&&d||([o,h]=wE(u[0],u[1])),s=i?new NC(t,d):new SC(t,d);const p=d?[h,o]:u,f=this.makeTensorInfo(p,a),m=this.texData.get(f.dataId);m.usage=d?yE.PIXELS:yE.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,h,r);const g=[[h,o]],y=!0,b=this.runWebGLProgram(s,[f],a,g,y),x=this.texData.get(b.dataId);e.texShape=x.texShape,e.isPacked=x.isPacked,e.usage=x.usage,ht().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(e.texture=x.texture,e.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),c&&(this.uploadWaitMs+=$a()-l)}else{const t=this.acquireTexture(u,o,a,i);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:a}=n;return null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype ".concat(e))}(e,a)),n.values}acquireTexture(t,e,n,a){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(t," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(t,e,a)}computeBytes(t,e){return t[0]*t[1]*K(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise((t=>{try{this.checkCompletion_(e),t(!0)}catch(n){throw n}}));t.push(n)}return Promise.all(t)}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await lu(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(!1===this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw EE(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);const{variablesLocations:e,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=gC(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=n,t.infLoc=a,t.nanLoc=r,t.outShapeLocation=s,t.outShapeStridesLocation=o,t.outTexShapeLocation=i}}createTensorFromGPUData(t,e,n){t.channels=t.channels||"RGBA";const{texture:a,height:r,width:s,channels:o}=t,i=ns().backend;if(!i.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=i.writeTexture(a,e,n,r,s,o);return ns().makeTensorFromDataId(c,e,n,i)}}s_.nextDataId=0;Hr()&&is("webgl",(()=>new s_),2);const o_="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class i_{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=wo(e,n),this.enableShapeUniforms=bC(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const c_="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class l_{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=wo(e,n);const r=this.outputShape.length;this.enableShapeUniforms=bC(r);let s="";if(a)if(0===r||1===O(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const t=hC(r);if(s="\n          ".concat(t," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const t=FR("coords",r);this.enableShapeUniforms?s+="\n            bool nextRowOutOfBounds =\n              (".concat(t[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(t[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):s+="\n            bool nextRowOutOfBounds =\n              (".concat(t[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(t[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(s,"\n\n        setOutput(result);\n      }\n    ")}}function u_(t){const{inputs:e,backend:n}=t,{x:a}=e;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const h_={kernelName:_e,backendName:"webgl",kernelFunc:u_};function d_(t){const{inputs:e,backend:n}=t,{real:a,imag:r}=e,s=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(s.dataId),i=u_({inputs:{x:a},backend:n}),c=u_({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:c},s}const p_={kernelName:Vt,backendName:"webgl",kernelFunc:d_},f_="return (a < 0.) ? b * a : a;",m_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const g_={kernelName:Le,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{alpha:s}=a,o=n.makeTensorInfo([],"float32",Ja(s,"float32")),i=ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new l_(m_,r.shape,o.shape):new i_(f_,r.shape,o.shape),c=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),c}},y_="return (a < 0.) ? b * a : a;",b_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const x_={kernelName:bn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a,alpha:r}=e,s=ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new l_(b_,a.shape,r.shape):new i_(y_,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}},v_="if (isnan(x)) return x;";function w_(t){let{opSnippet:e,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=t;return t=>{let{inputs:s,backend:o}=t;const{x:i}=s,c=o,l=r||i.dtype;if(c.shouldExecuteOnCPU([i])&&null!=a){const t=c.texData.get(i.dataId),e=a(t.values,l);return c.makeTensorInfo(i.shape,l,e)}let u;return u=ht().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new t_(i.shape,n):new WR(i.shape,e),c.runWebGLProgram(u,[i],l)}}function k_(t){let{opSnippet:e,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}=t;return t=>{let{inputs:i,backend:c}=t;const{a:l,b:u}=i,h=c;if(r&&"complex64"===l.dtype){const t=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[a,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:a.dataId,dtype:a.dtype,shape:u.shape},o=new i_(e,l.shape,u.shape);return h.runWebGLProgram(o,[r,s],Cr(n.dtype,a.dtype))})),s=d_({inputs:{real:a,imag:r},backend:h});return h.disposeIntermediateTensorInfo(a),h.disposeIntermediateTensorInfo(r),s}const d=o||Cr(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||h.shouldExecuteOnCPU([l,u]))&&null!=s){const t=h.texData.get(l.dataId).values,e=h.texData.get(u.dataId).values,n="string"===l.dtype?yh(t):t,a="string"===l.dtype?yh(e):e,[r,o]=s(l.shape,u.shape,n,a,d),i=h.makeTensorInfo(o,d);return h.texData.get(i.dataId).values=r,i}let p;return p=ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new l_(n,l.shape,u.shape,a):new i_(e,l.shape,u.shape),h.runWebGLProgram(p,[l,u],d)}}function I_(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===t)return e?YR:VR;if("relu"===t)return e?JR:jR;if("elu"===t)return e?QR:HR;if("relu6"===t)return e?ZR:KR;if("prelu"===t)return e?b_:y_;if("leakyrelu"===t)return e?m_:f_;if("sigmoid"===t)return e?$R:XR;throw new Error("Activation ".concat(t," has not been implemented for the WebGL backend."))}class S_{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=bC(this.outputShape.length);const l=a?t[1]:t[2],u=Math.ceil(l/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";t[0]<e[0]?b="imod(rc.x, ".concat(t[0],")"):e[0]<t[0]&&(x="imod(rc.x, ".concat(e[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(b,";\n        int batchB = ").concat(x,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(h,");\n          vec4 b = getMatrixB(batchB, ").concat(d,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const N_={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class T_{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=wo(e,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const E_="return a * b;";function C_(t){const{inputs:e,backend:n}=t,{a:a,b:r}=e,s=Cr(a.dtype,r.dtype);if("complex64"===a.dtype){const t=n.texData.get(a.dataId),e=n.texData.get(r.dataId),s=new T_(N_.REAL,a.shape,r.shape),o=new T_(N_.IMAG,a.shape,r.shape),i=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(s,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),u=d_({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,r])){const t=n.texData.get(a.dataId),e=n.texData.get(r.dataId),[o,i]=sR(a.shape,r.shape,t.values,e.values,s),c=n.makeTensorInfo(i,s);return n.texData.get(c.dataId).values=o,c}let o;return o=ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new l_(E_,a.shape,r.shape):new i_(E_,a.shape,r.shape),n.runWebGLProgram(o,[a,r],s)}const R_={kernelName:on,backendName:"webgl",kernelFunc:C_};function __(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{shape:s}=a,o=n,i=O(r.shape),c=W(s,i),l=O(c);A(i===l,(()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(r.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."));const u=o.texData.get(r.dataId);return!u.isPacked||WE(r.shape,c)||null!==u.texture&&WE(u.shape,c)?(o.incRef(r.dataId),{dataId:r.dataId,shape:c,dtype:r.dtype}):function(t,e,n){const a=[LE(t.shape),...zE(t.shape)],r={dtype:t.dtype,shape:a,dataId:t.dataId},s=[LE(e),...zE(e)],o=new MR(s,a),i=[a],c=n.runWebGLProgram(o,[r],t.dtype,i,!0);return{dataId:c.dataId,shape:e,dtype:c.dtype}}(r,c,o)}const A_={kernelName:En,backendName:"webgl",kernelFunc:__};class D_{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=t;this.outputShape=[a,s];const o=4*Math.floor(n/4),i=n%4;let c="sumValue += dot(values, ones);";if(null!=e){const t=1/e;c="sumValue += dot(values * ".concat(L(t)?t.toPrecision(2):t,", ones);")}let l="";r%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(o,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(o,";\n        if (").concat(1===i,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(2===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(3===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(c,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class F_{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=t;this.outputShape=[a,s];let o="0.0",i="";"prod"===e?o="1.0":"min"===e?(o="1.0 / 1e-20",i="min"):"max"===e&&(o="-1.0 / 1e-20",i="max");let c="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===e?c="sumValue":"prod"===e?c="prodValue":"all"===e?c="allValue":"any"===e&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let h="\n      if (".concat("sum"===e,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===e,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===e," || ").concat("max"===e,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),d="vec4";"all"===e?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(h,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(2===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(3===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(h,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function O_(t,e,n,a){const r=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],a=bu(n);e.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return e}(t.shape);let s=t;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:c,outSize:l}=r[o];let u,h;u="mean"===n?0===o?new D_({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l},i):new D_({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l}):new F_({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l},n),h=s,s=a.runWebGLProgram(u,[s],e),h.dataId!==t.dataId&&a.disposeIntermediateTensorInfo(h)}return s}class M_{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const a=hC(this.rank),r=function(t){const e=t.length;if(e>6)throw Error("Transpose for rank ".concat(e," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(e);for(let r=0;r<t.length;r++)a[t[r]]=n[r];return a.join()}(e);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class L_{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let l=0;l<n.length;l++)n[l]=t[e[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=hC(this.rank),r=DR("rc",this.rank),s=new Array(this.rank);for(let l=0;l<e.length;l++)s[e[l]]=r[l];const o="vec2(".concat(s.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(s.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function z_(t,e,n){const a=ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new L_(t.shape,e):new M_(t.shape,e);return n.runWebGLProgram(a,[t],t.dtype)}function P_(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a;return function(t,e,n,a){const r=e,s=t.shape.length,o=U(r,t.shape);let i=o;const c=lc(i,s),l=null!=c;let u=t;l&&(u=z_(t,c,a),i=hc(i.length,s)),cc("sum",i,s);const[h,d]=oc(u.shape,i);let p=h;n&&(p=ic(h,o));const f=O(d),m=__({inputs:{x:u},attrs:{shape:[O(t.shape)/f,f]},backend:a}),g=O_(m,Rr(t.dtype),"sum",a),y=__({inputs:{x:g},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),l&&a.disposeIntermediateTensorInfo(u),y}(r,s,o,n)}const B_={kernelName:Xn,backendName:"webgl",kernelFunc:P_};function W_(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{perm:s}=a,o=n,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[s[u]];let l;if(o.shouldExecuteOnCPU([r])){const t=o.texData.get(r.dataId).values,e=_R(t,r.shape,r.dtype,s,c);l=o.makeTensorInfo(c,r.dtype);o.texData.get(l.dataId).values=e}else l=z_(r,s,o);return l}const U_={kernelName:ga,backendName:"webgl",kernelFunc:W_},V_=1e3;function G_(t){let{a:e,b:n,transposeA:a,transposeB:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=t;const u=e.shape.length,h=n.shape.length,d=a?e.shape[u-2]:e.shape[u-1],p=r?n.shape[h-1]:n.shape[h-2],f=a?e.shape[u-1]:e.shape[u-2],m=r?n.shape[h-2]:n.shape[h-1],g=e.shape.slice(0,-2),y=n.shape.slice(0,-2),b=O(g),x=O(y),v=wo(e.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);A(d===p,(()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(p,") of Tensors with shapes ").concat(e.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const w=a?[b,d,f]:[b,f,d],k=r?[x,m,p]:[x,p,m],I=__({inputs:{x:e},backend:s,attrs:{shape:w}}),S=__({inputs:{x:n},backend:s,attrs:{shape:k}}),N=[I,S],T=Math.max(b,x),E=a?I.shape[1]:I.shape[2],C=null!=o,R=null!=i,_="leakyrelu"===l,D=null!=l?I_(l,!0):null;let F;if((1===f||1===m)&&E>V_&&!1===(C||R||_||null!=D)){let t=I,e=S;a&&(t=W_({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),N.push(t)),r&&(e=W_({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),N.push(e));const n=1===m;let o=t;1!==m&&(o=__({inputs:{x:t},backend:s,attrs:{shape:[T,E,1]}}),N.push(o));const i=1===m?2:1;let c=e;n&&(c=__({inputs:{x:e},backend:s,attrs:{shape:[T,1,E]}}),N.push(c));const l=C_({inputs:{a:o,b:c},backend:s});F=P_({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),N.push(l)}else{const t=Cr(e.dtype,n.dtype),l=new S_(w,k,[T,f,m],a,r,C,D,R,_),u=[I,S];if(null!=o&&u.push(o),R&&u.push(i),_){const t=s.makeTensorInfo([],"float32",Ja(c,"float32"));u.push(t),N.push(t)}F=s.runWebGLProgram(l,u,t)}const M=__({inputs:{x:F},backend:s,attrs:{shape:v}});N.push(F);for(const A of N)s.disposeIntermediateTensorInfo(A);return M}const H_={kernelName:Ia,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:r,b:s,bias:o,preluActivationWeights:i}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;return G_({a:r,b:s,transposeA:c,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:u})}},j_="return abs(x);";const K_={kernelName:gt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const t=n.texData.get(a.dataId),e=gR(t.values);return n.makeTensorInfo(a.shape,a.dtype,e)}let r;return r=ht().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new t_(a.shape,j_):new WR(a.shape,j_),n.runWebGLProgram(r,[a],a.dtype)}},q_=w_({opSnippet:UR+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),X_={kernelName:yt,backendName:"webgl",kernelFunc:q_},Y_=w_({opSnippet:UR+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Q_={kernelName:bt,backendName:"webgl",kernelFunc:Y_},J_="return a + b;",Z_=k_({opSnippet:J_,packedOpSnippet:J_,supportsComplex:!0,cpuKernelImpl:zC}),$_={kernelName:xt,backendName:"webgl",kernelFunc:Z_};class tA{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>"T".concat(e)));const n=[];this.variableNames.forEach((t=>{n.push("float v".concat(t," = get").concat(t,"AtOutCoords();"))}));const a=this.variableNames.map((t=>"v".concat(t))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class eA{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>"T".concat(e)));const n=[];this.variableNames.forEach((t=>{n.push("vec4 v".concat(t," = get").concat(t,"AtOutCoords();"))}));const a=this.variableNames.map((t=>"v".concat(t))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const nA={kernelName:vt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a}=e,r=n;if(1===r.length)return u_({inputs:{x:r[0]},backend:a});if(r.length>ht().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),n=t({inputs:r.slice(0,e),backend:a}),s=t({inputs:r.slice(e),backend:a});return t({inputs:[n,s],backend:a})}const s=r.map((t=>t.dtype)).reduce(((t,e)=>Cr(t,e))),o=r.map((t=>t.shape)),i=ht().getBool("WEBGL_PACK")?new eA(r[0].shape,o):new tA(r[0].shape,o);return a.runWebGLProgram(i,r,s)}};const aA={kernelName:wt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a,i=r.shape.length,c=U(s,r.shape);let l=c;const u=lc(l,i);let h=r;null!=u&&(h=W_({inputs:{x:r},backend:n,attrs:{perm:u}}),l=hc(l.length,i)),cc("all",l,i);const[d,p]=oc(h.shape,l),f=__({inputs:{x:h},backend:n,attrs:{shape:[-1,O(p)]}}),m=O_(f,f.dtype,"all",n);let g;if(o){g=__({inputs:{x:m},backend:n,attrs:{shape:ic(d,c)}})}else g=__({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}};const rA={kernelName:kt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a,i=r.shape.length,c=U(s,r.shape);let l=c;const u=lc(l,i);let h=r;null!=u&&(h=W_({inputs:{x:r},backend:n,attrs:{perm:u}}),l=hc(l.length,i)),cc("any",l,i);const[d,p]=oc(h.shape,l),f=__({inputs:{x:h},backend:n,attrs:{shape:[-1,O(p)]}}),m=O_(f,f.dtype,"any",n);let g;if(o){g=__({inputs:{x:m},backend:n,attrs:{shape:ic(d,c)}})}else g=__({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}};class sA{constructor(t,e,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const o="max"===e?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class oA{constructor(t,e,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,A(t.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=t[t.length-1],s=Math.ceil(r/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,c=hC(i),l=FR("coords",i);let u,h;if(1===s){h=i+1;const t=hC(h);u="\n        ".concat(t," sourceLocR = ").concat(t,"(").concat(l.join(),", 0);\n        ++").concat(l[i-1],";\n        ").concat(t," sourceLocG = ").concat(t,"(").concat(l.join(),", 0);\n        ++").concat(l[i-2],";\n        ").concat(t," sourceLocA = ").concat(t,"(").concat(l.join(),", 0);\n        --").concat(l[i-1],";\n        ").concat(t," sourceLocB = ").concat(t,"(").concat(l.join(),", 0);\n        --").concat(l[i-2],";")}else h=i,u="\n        ".concat(c," sourceLocR = coords;\n        ++").concat(l[i-1],";\n        ").concat(c," sourceLocG = coords;\n        ++").concat(l[i-2],";\n        ").concat(c," sourceLocA = coords;\n        --").concat(l[i-1],";\n        ").concat(c," sourceLocB = coords;\n        --").concat(l[i-2],";");const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((t=>"int "+t)),m=FR("sourceLocR",h-1).concat("inIdx.r"),g=FR("sourceLocG",h-1).concat("inIdx.g"),y=FR("sourceLocB",h-1).concat("inIdx.b"),b=FR("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(m.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),")));"),w="vec4(\n            getAChannel(".concat(m.join(),"),\n            hasNextCol ? getAChannel(").concat(g.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(b.join(),") : 0.)"),k=a?"":"\n      float getBestIndicesAChannel(".concat(f.join(),") {\n        return getChannel(getBestIndicesA(").concat(d.join(),"),\n                                          vec2(").concat(d.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(f.join(),") {\n        return getChannel(getA(").concat(d.join(),"),\n                               vec2(").concat(d.slice(-2).join(),"));\n      }\n      ").concat(k,"\n      void main() {\n        ").concat(c," coords = getOutputCoords();\n        bool hasNextCol = ").concat(l[i-1]," < ").concat(o[i-1]-1,";\n        bool hasNextRow = ").concat(l[i-2]," < ").concat(o[i-2]-1,";\n        ").concat(u,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(p,", sourceLocG").concat(p,",\n          sourceLocB").concat(p,", sourceLocA").concat(p,") * ").concat(e,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(w,";\n\n        for (int i = 0; i < ").concat(e,"; i++) {\n          inIdx = srcIdx;\n          ").concat(v,"\n          vec4 candidate = ").concat(w,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(x,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function iA(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=e.shape[0],s=e.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const o=bu(s),i={windowSize:o,inSize:s,batchSize:r,outSize:Math.ceil(s/o)},c=new sA(i,n,null==a),l=[e];null!=a&&l.push(a);const u=t.runWebGLProgram(c,l,"int32");if(1===u.shape[1])return u;const h=iA(t,e,n,u);return t.disposeIntermediateTensorInfo(u),h}function cA(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:e.shape,s=bu(r[r.length-1]),o=new oA(r,s,n,null==a),i=null==a?[e]:[e,a],c=t.runWebGLProgram(o,i,"int32");if(c.shape.length===e.shape.length){const a=cA(t,e,n,c);return t.disposeIntermediateTensorInfo(c),a}return c}function lA(t,e,n,a){const r=[n];if(cc("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,e.shape.length),!ht().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],s=t.texData.get(e.dataId);let o=e;null!==s&&s.isPacked&&(o=t.unpackTensor(e),n.push(o));const[i,c]=oc(o.shape,r),l=O(c),u=__({inputs:{x:o},backend:t,attrs:{shape:[-1,l]}});n.push(u);const h=iA(t,u,a);n.push(h);const d=__({inputs:{x:h},backend:t,attrs:{shape:i}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),d}return cA(t,e,a)}const uA={kernelName:It,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s}=a;let o=U(s,r.shape);const i=lc(o,r.shape.length);let c=r;const l=[];null!=i&&(c=W_({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=hc(o.length,c.shape.length)),cc("argMax",[o[0]],c.shape.length);const u=lA(n,c,o[0],"max");return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}};const hA={kernelName:St,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s}=a;let o=U(s,r.shape);const i=lc(o,r.shape.length);let c=r;const l=[];null!=i&&(c=W_({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=hc(o.length,c.shape.length)),cc("argMin",[o[0]],c.shape.length);const u=lA(n,c,o[0],"min");return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}},dA=w_({opSnippet:UR+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),pA={kernelName:Nt,backendName:"webgl",kernelFunc:dA},fA=w_({opSnippet:UR+"return log(x + sqrt(x * x + 1.0));"}),mA={kernelName:Tt,backendName:"webgl",kernelFunc:fA},gA=w_({opSnippet:UR+"\n  return atan(x);\n"}),yA={kernelName:Et,backendName:"webgl",kernelFunc:gA},bA=k_({opSnippet:o_+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+c_+"\n  return result;\n"}),xA={kernelName:Rt,backendName:"webgl",kernelFunc:bA},vA=w_({opSnippet:UR+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),wA={kernelName:Ct,backendName:"webgl",kernelFunc:vA};class kA{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,o=t.strideHeight,i=t.strideWidth,c=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m="((batch  * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + d"),g="(xR * ".concat(t.inWidth," + xC) * ").concat(t.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(e," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:g:"wR * ".concat(h," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(s/4),v=s%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(x,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(x,";\n          if (").concat(1===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class IA{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,o=t.strideDepth,i=t.strideHeight,c=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(d,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(h,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(e," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(t.inDepth," + xD) * ").concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"((xD * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let v="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),k=s%4,I="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(x,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(x,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(d,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(h,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(h,", ch)\n              );\n\n              ").concat(I,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(I,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(I,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                initializationValue\n              );\n\n              ").concat(I,"\n            }\n          }\n        }\n        setOutput(").concat(v,");\n      }\n    ")}}const SA={kernelName:_t,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;qE(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;A(mi(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=si(r.shape,s,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&M(l.inShape,l.outShape))return u_({inputs:{x:r},backend:n});const u=new kA(l,"avg",!1);return n.runWebGLProgram(u,[r],"float32")}};const NA={kernelName:Dt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a,u=oi(r.shape,s,o,[1,1,1],i,c,l),h=new IA(u,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class TA{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,r=t.strideWidth,s=t.dilationHeight,o=t.dilationWidth,i=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=i-1-t.padInfo.top,u=c-1-t.padInfo.left,h=1/(e*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(h,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class EA{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,a=t.filterWidth,r=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=u-1-t.padInfo.front,f=h-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(h,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const CA={kernelName:Ft,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s}=e,o=s,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=oi(o.shape,i,c,[1,1,1],l,u),d=new EA(h);return n.runWebGLProgram(d,[r],o.dtype)}};const RA={kernelName:At,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s}=e,o=s;qE([r,s],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=si(o.shape,i,c,1,l),h=new TA(u);return n.runWebGLProgram(h,[r],o.dtype)}};const _A={kernelName:Ot,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:r,b:s}=e,{transposeA:o,transposeB:i}=a;return G_({a:r,b:s,transposeA:o,transposeB:i,backend:n})}};class AA{constructor(t,e,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],wo(t,e),wo(t,n);let o="0.0";null!=a&&(wo(t,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=r&&(wo(t,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(o,";\n        float scale = ").concat(i,";\n        float inv = scale * inversesqrt(variance + float(").concat(s,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class DA{constructor(t,e,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],wo(t,e),wo(t,n);let o="vec4(0.0)";null!=a&&(wo(t,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=r&&(wo(t,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        vec4 offset = ".concat(o,";\n        vec4 scale = ").concat(i,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(s,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const FA={kernelName:Ne,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r,mean:s,variance:o,offset:i,scale:c}=e;A(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),A(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),A(null==c||s.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=[r,s,o];let h=null;null!=i&&(h=i.shape,u.push(i));let d=null;null!=c&&(d=c.shape,u.push(c));const p=ht().getBool("WEBGL_PACK_NORMALIZATION")?new DA(r.shape,s.shape,o.shape,h,d,l):new AA(r.shape,s.shape,o.shape,h,d,l);return n.runWebGLProgram(p,u,u[0].dtype)}};class OA{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=hC(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(t){if(1===t)return"sourceLoc";if(t<=6)return MA.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error("Slicing for rank ".concat(t," is not yet supported"))}(this.rank);let a;const r=t.map(((t,e)=>"sourceLoc.".concat(MA[e]," = start[").concat(e,"] + coords.").concat(MA[e],";")));a="\n        ".concat(e," sourceLoc;\n        ").concat(e," coords = getOutputCoords();\n        ").concat(r.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const MA=["x","y","z","w","u","v"];class LA{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=hC(this.rank),n=FR("coords",this.rank),a=FR("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),s="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),o="\n      result.x = ".concat(s,";\n      if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(s,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(t[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(s,";\n        if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(s,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(e,"(").concat(t.map(((t,e)=>"start[".concat(e,"]"))).join(),");"):t.map(((t,e)=>"".concat(a[e]," = ").concat(n[e]," + start[").concat(e,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(e," coords = getOutputCoords();\n        ").concat(e," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function zA(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{begin:s,size:o}=a,[i,c]=Zo(r,s,o);if(Po(r,i,c),0===O(c))return n.makeTensorInfo(c,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const t=n.texData.get(r.dataId),e=yR(t.values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,e)}const{isPacked:l}=n.texData.get(r.dataId),u=Qo(r.shape,i,c);if(l||!u){const t=ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new LA(c):new OA(c),e=[i];return n.runWebGLProgram(t,[r],r.dtype,e)}return n.uploadToGPU(r.dataId),function(t,e,n,a){const r=a.texData.get(t.dataId),s=a.makeTensorInfo(n,t.dtype),o=a.texData.get(s.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=t.dtype;let i=Jo(e,Z(t.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||t.dataId};const c=a.dataRefCount.get(o.slice.origDataId)||1;return a.dataRefCount.set(o.slice.origDataId,c+1),s}(r,i,c,n)}const PA={kernelName:Un,backendName:"webgl",kernelFunc:zA},BA={kernelName:Mt,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockShape:s,crops:o}=a;A(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((t,e)=>t*e)),c=vu(r.shape,s,i),l=wu(c.length,s.length),u=ku(r.shape,s,i),h=Iu(o,s.length),d=Su(u,o,s.length),p=[],f=__({inputs:{x:r},backend:n,attrs:{shape:c}}),m=W_({inputs:{x:f},backend:n,attrs:{perm:l}}),g=__({inputs:{x:m},backend:n,attrs:{shape:u}}),y=zA({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}};const WA={kernelName:Lt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,weights:s}=e,{size:o}=a,i=n.readSync(r.dataId),c=n.readSync(s.dataId),l=PC(i,c,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,l)}};const UA={kernelName:zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:a,b:r}=e,s=ht().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=ht().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===o){const t=n.texData.get(a.dataId).values,e=n.texData.get(r.dataId).values,[s,o]=WC(a.shape,r.shape,t,e,a.dtype),i=n.makeTensorInfo(o,a.dtype);return n.texData.get(i.dataId).values=s,i}let i;return i=s?new l_("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new i_("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(i,[a,r],a.dtype)}};const VA={kernelName:Pt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:a,s1:r}=e,s=n.readSync(a.dataId),o=n.readSync(r.dataId),i=wo(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},GA=k_({opSnippet:"return float(a != b);",cpuKernelImpl:iR,dtype:"bool"}),HA={kernelName:ln,backendName:"webgl",kernelFunc:GA};function jA(t){const{inputs:e,backend:n}=t,{input:a}=e;return u_({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const KA={kernelName:Sn,backendName:"webgl",kernelFunc:jA},qA="return float(int(x));";const XA={kernelName:Bt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return u_({inputs:{x:s},backend:a});const e=Sc(s.shape),n=t({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=d_({inputs:{real:n,imag:e},backend:a});return e.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const e=jA({inputs:{input:s},backend:a}),n=t({inputs:{x:e},backend:a,attrs:{dtype:o}});return a.disposeIntermediateTensorInfo(e),n}if(!j(s.dtype,o)){const t=u_({inputs:{x:s},backend:a});return{dataId:t.dataId,shape:t.shape,dtype:o}}if(a.shouldExecuteOnCPU([s])){const t=a.texData.get(s.dataId).values,[e,n,r]=UC(t,s.shape,s.dtype,o);return a.makeTensorInfo(e,n,r)}if("int32"===o)return function(t,e){const n=new WR(t.shape,qA),a=e.runWebGLProgram(n,[t],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===o){const t=a.makeTensorInfo([],"bool",G("bool",1)),e=GA({inputs:{a:s,b:t},backend:a});return a.disposeIntermediateTensorInfo(t),e}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(o))}},YA="return ceil(x);",QA=w_({opSnippet:YA,packedOpSnippet:YA,cpuKernelImpl:VC}),JA={kernelName:Wt,backendName:"webgl",kernelFunc:QA};class ZA{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class $A{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const tD={kernelName:Ut,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{clipValueMin:s,clipValueMax:o}=a;let i;i=ht().getBool("WEBGL_PACK_CLIP")?new $A(r.shape):new ZA(r.shape);const c=[[s],[o]];return n.runWebGLProgram(i,[r],r.dtype,c)}};class eD{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function nD(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const aD={kernelName:Gt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,r=n.texData.get(a.dataId),s=new eD(a.shape),o=[nD(a,r.complexTensorInfos.real),nD(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class rD{constructor(t){this.outputShape=[],this.outputShape=hu(t,1),this.variableNames=t.map(((t,e)=>"T".concat(e)));const e=new Array(t.length-1);e[0]=t[0][1];for(let s=1;s<e.length;s++)e[s]=e[s-1]+t[s][1];const n=["if (yC < ".concat(e[0],") setOutput(getT0(yR, yC));")];for(let s=1;s<e.length;s++){const t=e[s-1];n.push("else if (yC < ".concat(e[s],") ")+"setOutput(getT".concat(s,"(yR, yC-").concat(t,"));"))}const a=e.length,r=e[e.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class sD{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=hu(t,e);const n=this.outputShape,a=n.length,r=hC(a),s=FR("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=t.map(((t,e)=>"T".concat(e)));const i=new Array(t.length-1);i[0]=t[0][e];for(let f=1;f<i.length;f++)i[f]=i[f-1]+t[f][e];const c=o[e],l=o.slice(-2),u=o.join();let h="if (".concat(c," < ").concat(i[0],") {\n        return getChannel(\n            getT0(").concat(u,"), vec2(").concat(l.join(),"));\n        }");for(let f=1;f<i.length;f++){const t=i[f-1];h+="\n        if (".concat(c," < ").concat(i[f],"  && ").concat(c," >= ").concat(i[f-1],") {\n          return getChannel(\n            getT").concat(f,"(").concat(oD(o,c,t),"),\n            vec2(").concat(oD(l,c,t),"));\n        }")}const d=i.length,p=i[i.length-1];h+="\n        return getChannel(\n          getT".concat(d,"(").concat(oD(o,c,p),"),\n          vec2(").concat(oD(l,c,p),"));"),this.userCode="\n      float getValue(".concat(o.map((t=>"int "+t)),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(s,"), 0., 0., 0.);\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," + 1;\n        if (").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-2]," = ").concat(s[a-2]," + 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," - 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2]," &&\n            ").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(s,");\n        }\n        setOutput(result);\n      }\n    ")}}function oD(t,e,n){const a=t.indexOf(e);return t.map(((t,e)=>e===a?"".concat(t," - ").concat(n):t)).join()}function iD(t){const{inputs:e,backend:n}=t,{input:a}=e;return u_({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const cD={kernelName:De,backendName:"webgl",kernelFunc:iD};function lD(t,e,n){const a=t[0].dtype;if("complex64"===a){const a=t.map((t=>jA({inputs:{input:t},backend:n}))),r=t.map((t=>iD({inputs:{input:t},backend:n}))),s=lD(a,e,n),o=lD(r,e,n),i=d_({inputs:{real:s,imag:o},backend:n});return a.forEach((t=>n.disposeIntermediateTensorInfo(t))),r.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let r=n.shouldExecuteOnCPU(t);if("string"===a&&(r=!0),r){const r=t.map((t=>{const a=O(t.shape.slice(e));return __({inputs:{x:t},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),o=hu(r.map((t=>t.shape)),1),i=1===r[0].shape[0],c=GC(s,o,a,i),l=hu(t.map((t=>t.shape)),e),u=n.makeTensorInfo(l,a,c);return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}const s=t.filter((t=>O(t.shape)>0)),o=ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const e=o?new WR(t[0].shape,qR):new t_(t[0].shape,qR);return n.runWebGLProgram(e,t,a)}const i=ht().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>i){const t=[];for(let r=0;r<s.length;r+=i){const a=s.slice(r,r+i);t.push(lD(a,e,n))}const a=lD(t,e,n);for(const e of t)n.disposeIntermediateTensorInfo(e);return a}if(o){const t=new sD(s.map((t=>t.shape)),e);return n.runWebGLProgram(t,s,a)}const{tensors2D:c,outShape:l}=function(t,e,n){const a=hu(t.map((t=>t.shape)),e),r=t.map((t=>__({inputs:{x:t},attrs:{shape:[-1,O(t.shape.slice(e))]},backend:n})));return{tensors2D:r,outShape:a}}(s,e,n),u=new rD(c.map((t=>t.shape))),h=n.runWebGLProgram(u,c,a);c.forEach((t=>n.disposeIntermediateTensorInfo(t)));const d=__({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function uD(t){const{inputs:e,backend:n,attrs:a}=t,{axis:r}=a,s=U(r,e[0].shape)[0];uu(e.map((t=>t.shape)),s);const o=hu(e.map((t=>t.shape)),s);if(0===O(o))return n.makeTensorInfo(o,e[0].dtype,[]);const i=e.filter((t=>O(t.shape)>0));return 1===i.length?u_({inputs:{x:i[0]},backend:n}):lD(i,s,n)}const hD={kernelName:Ht,backendName:"webgl",kernelFunc:uD};class dD{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,o=t.padInfo.left,i=t.strideHeight,c=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),v="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(x,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(h,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(d,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(t.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(v,"\n        setOutput(result);\n      }\n    ")}}class pD{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,a=t.padInfo.left,r=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,u=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(s,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(e,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class fD{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=bC(this.outputShape.length);const s=t.padInfo.left,o=t.strideWidth,i=t.dilationWidth,c=t.filterHeight,l=t.filterWidth,u=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<l;m++)h+="\n           vec4 xTexelC".concat(2*m,";\n           int xTexelC").concat(2*m,"Ready;\n           vec4 xTexelC").concat(2*m+1,";\n           int xTexelC").concat(2*m+1,"Ready;\n           vec4 xC").concat(m,";");h+="\n     for (int r = 0; r < ".concat(c,"; r++) {\n      for (int d1 = 0; d1 < ").concat(t.inChannels,"; d1 += 2) {\n       ");for(let m=0;m<l;m++)h+="\n           xTexelC".concat(2*m," = vec4(0.0);\n           xTexelC").concat(2*m,"Ready = 0;\n           xTexelC").concat(2*m+1," = vec4(0.0);\n           xTexelC").concat(2*m+1,"Ready = 0;\n           xC").concat(m," = vec4(0.0);");h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(u+1)/2;m++){const e=2*m;if(h+="\n           xC = xCCorner + ".concat(e*i,";\n           "),1===o){if(e<l&&(s%2===1?(h+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n               "),h+=1===i&&e>0?"\n                 xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                   } else {\n                     xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                   }\n                   ")):h+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n\n                 xC").concat(e," = xTexelC").concat(e,";\n                 "),e+1<l)){const t=s%2===0?R(i):i;i%2===0&&s%2===1||i%2!==0&&s%2!==1?(h+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                     xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(e+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(e+1,"Ready = 1;\n                   }\n                   "),h+=i>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                     } else {\n                      xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                     }\n                     "):"\n                     xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                     ")):h+=1===t?"\n                     xC".concat(e+1," = xTexelC").concat(e,";\n                     "):"\n                     xCOffset = xC + ".concat(t,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                       xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(e+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(e+1,"Ready = 1;\n                     }\n\n                     xC").concat(e+1," = xTexelC").concat(e+1,";\n                     ")}}else e<l&&(s%2===1?(h+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                   xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(e+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e+1,"Ready = 1;\n                 }\n\n                 xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n               "),e+1<l&&(h+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                 "))):(h+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                   xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(e+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(e+1,"Ready = 1;\n                 }\n\n                 xC").concat(e," = vec4(\n                   xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n               "),e+1<l&&(h+="\n                   xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                 "))));e<l&&(h+="\n             wTexel = getW(r, ".concat(e,", d1, d2);\n             dotProd += xC").concat(e,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(t.inChannels,") {\n               dotProd += xC").concat(e,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),e+1<l&&(h+="\n               wTexel = getW(r, ".concat(e+1,", d1, d2);\n               dotProd += xC").concat(e+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(t.inChannels,") {\n                 dotProd += xC").concat(e+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),p="result = activation(result);");const f=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(d,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(h,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(f,"\n         ").concat(p,"\n         setOutput(result);\n       }\n     ")}}class mD{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=bC(this.outputShape.length);const{dataFormat:n}=e,a=YE(),r="channelsLast"===n,s=r?1:2,o=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(t[2]," && pos < ").concat(t[1],") {");let c="";for(let l=0;l<=1;l++)for(let t=0;t<=1;t++)c+="\n          blockIndex = rc.z + ".concat(t,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(s,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(r,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+t,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+t,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function gD(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&1===n&&t[0]>1?[t[0],1]:null}function yD(t){let{x:e,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=t;const l=e.shape,u=r.texData.get(e.dataId),h=a.inChannels,d=l[0]*l[1]*l[2],p=a.outChannels,f="channelsLast"===a.dataFormat;let m;const g=[];if(null!=o){const t=gD(o.shape,f);null!=t&&(o=__({inputs:{x:o},backend:r,attrs:{shape:t}}),g.push(o))}if(null!=s){const t=gD(s.shape,f);null!=t&&(s=__({inputs:{x:s},backend:r,attrs:{shape:t}}),g.push(s))}if(!((1===d||1===p)&&h>V_)&&u.isPacked&&f&&null!=u.texture&&l[2]%2!==0&&M(u.shape.slice(-3),l.slice(-3))){const t=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,t,a.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,A(WE(u.shape,h.shape),(()=>"packed reshape ".concat(u.shape," to ").concat(h.shape," isn't free")));const p=__({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});g.push(p);const f=G_({a:h,b:p,backend:r,transposeA:false,transposeB:false,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i}),y=r.texData.get(f.dataId);A(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,y.shape=a.outShape,m=u_({inputs:{x:f},backend:r}),m.shape=a.outShape,g.push(f)}else{const t=a.outHeight*a.outWidth,l=__({inputs:{x:e},backend:r,attrs:{shape:f?[a.batchSize,t,a.inChannels]:[a.batchSize,a.inChannels,t]}}),u=__({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),h=G_({a:f?l:u,b:f?u:l,transposeA:!f,transposeB:false,backend:r,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i});m=__({inputs:{x:h},backend:r,attrs:{shape:a.outShape}}),g.push(l),g.push(u),g.push(h)}for(const y of g)r.disposeIntermediateTensorInfo(y);return m}function bD(t){let{x:e,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=t;const{filterWidth:l,filterHeight:u,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=a,m="channelsLast"===f,g=l*u*h,y=p*d,b=[a.batchSize,g,y],x=[];if(null!=o){const t=gD(o.shape,m);null!=t&&(o=__({inputs:{x:o},backend:r,attrs:{shape:t}}),x.push(o))}if(null!=s){const t=gD(s.shape,m);null!=t&&(s=__({inputs:{x:s},backend:r,attrs:{shape:t}}),x.push(s))}const v=__({inputs:{x:n},backend:r,attrs:{shape:[1,g,O(n.shape)/g]}});x.push(v);const w=new mD(b,a),k=[e.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],I=r.runWebGLProgram(w,[e],"float32",k),S=__({inputs:{x:I},backend:r,attrs:{shape:b}});x.push(I),x.push(S);const N=null!=s,T=null!=o,E="leakyrelu"===c,C=c?I_(c,!0):null,R=new S_(m?S.shape:v.shape,m?v.shape:S.shape,m?[a.batchSize,y,a.outChannels]:[a.batchSize,a.outChannels,y],!0,!1,N,C,T,E),_=m?[S,v]:[v,S];if(s&&_.push(s),T&&_.push(o),E){const t=r.makeTensorInfo([],"float32",Ja(i,"float32"));_.push(t),x.push(t)}const A=r.runWebGLProgram(R,_,"float32"),D=__({inputs:{x:A},backend:r,attrs:{shape:a.outShape}});x.push(A);for(const F of x)r.disposeIntermediateTensorInfo(F);return D}const xD={kernelName:jt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s}=e,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a,h=yi(c),d=ii(r.shape,s.shape,o,l,i,u,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&ht().getBool("WEBGL_EXP_CONV")){const t=new fD(d),e=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(t,[r,s],"float32",e)}else if(ht().getBool("WEBGL_CONV_IM2COL"))p=bD({x:r,filter:s,convInfo:d,backend:n});else{const t=new dD(d);p=n.runWebGLProgram(t,[r,s],"float32")}else p=yD({x:r,filter:s,convInfo:d,backend:n});const f=__({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class vD{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,a=t.padInfo.top,r=t.padInfo.left,s="channelsLast"===t.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              ").concat(s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class wD{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,r=t.strideWidth,s="channelsLast"===t.dataFormat,o=e-1-t.padInfo.top,i=n-1-t.padInfo.left,c=s?1:2,l=s?2:3,u=s?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n\n              if (").concat(s,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class kD{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,a=t.strideWidth,r=t.padInfo.front,s=t.padInfo.top,o=t.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(t.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(e," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(s,";\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class ID{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,a=t.filterWidth,r=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=e-1-t.padInfo.front,c=n-1-t.padInfo.top,l=a-1-t.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(e,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(t.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(e," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const SD={kernelName:Kt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:s}=e,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a,h=yi(c),d=ii(r.shape,u,o,1,i,l,!1,h),p=new vD(d);return n.runWebGLProgram(p,[r,s],"float32")}};class ND{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=bC(this.outputShape.length);const e=t.filterHeight,n=t.filterWidth,a=e-1-t.padInfo.top,r=n-1-t.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(t.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(t.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const TD={kernelName:qt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:s}=e,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,h=yi(l),d=ii(o,s.shape,i,1,c,u,!1,h);if(ht().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const t=[[d.strideHeight,d.strideWidth]],e=new ND(d);return n.runWebGLProgram(e,[r,s],"float32",t)}{const t=new wD(d);return n.runWebGLProgram(t,[r,s],"float32")}}};const ED={kernelName:Xt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s}=e,{strides:o,pad:i,dilations:c}=a,l=ci(r.shape,s.shape,o,c,i),u=new pD(l);return n.runWebGLProgram(u,[r,s],"float32")}};const CD={kernelName:Yt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:s}=e,{strides:o,pad:i,filterShape:c}=a,l=ci(r.shape,c,o,1,i),u=new kD(l);return n.runWebGLProgram(u,[r,s],"float32")}};const RD={kernelName:Qt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:s}=e,{pad:o,strides:i,inputShape:c}=a,l=ci(c,s.shape,i,1,o),u=new ID(l);return n.runWebGLProgram(u,[r,s],"float32")}},_D=w_({opSnippet:v_+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(c_,"\n  return result;\n")}),AD={kernelName:Jt,backendName:"webgl",kernelFunc:_D},DD=w_({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),FD={kernelName:Zt,backendName:"webgl",kernelFunc:DD};class OD{constructor(t,e,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,c]=t,[l]=e,[u,h]=n;this.outputShape=[l,u,h,c];const d="bilinear"===a?1:0,[p,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[m,g,y]=u>1?["".concat((o-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[b,x,v]=h>1?["".concat((i-1)/(h-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(x,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(v,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(d," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const MD={kernelName:ee,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{image:r,boxes:s,boxInd:o}=e,{cropSize:i,method:c,extrapolationValue:l}=a,u=new OD(r.shape,s.shape,i,c,l);return n.runWebGLProgram(u,[r,s,o],"float32")}};var LD;!function(t){t.Prod="*",t.Sum="+"}(LD||(LD={}));class zD{constructor(t,e,n,a){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,s=this.op===LD.Prod?"1.0":"0.0",o=n?s:"getX(".concat(PD(r,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(hC(r)," coords = getOutputCoords();\n        int end = ").concat(BD(r,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(BD(r,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(PD(r,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function PD(t,e,n){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".x, ").concat(e,".y");if(3===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z");if(4===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z, ").concat(e,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(t," is not yet supported"))}function BD(t,e,n){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".y");if(3===t)return"".concat(e,".z");if(4===t)return"".concat(e,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(t," is not yet supported"))}function WD(t,e,n,a,r,s){const o=e.shape.length,i=lc([a],o);let c=e;null!=i&&(c=W_({inputs:{x:e},backend:n,attrs:{perm:i}}));const l=hc(1,o)[0];if(l!==o-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(e.shape.length-1," ")+"but got axis=".concat(a));const u=c.shape[l];let h=u_({inputs:{x:c},backend:n});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const e=new zD(t,c.shape,!1,s),a=[[d]],r=h;h=n.runWebGLProgram(e,[h],h.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const e=new zD(t,c.shape,r,s),a=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=i){const t=W_({inputs:{x:h},backend:n,attrs:{perm:uc(i)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),t}return h}const UD={kernelName:$t,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,exclusive:o,reverse:i}=a;return WD(LD.Prod,r,n,s,o,i)}};const VD={kernelName:te,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,exclusive:o,reverse:i}=a;return WD(LD.Sum,r,n,s,o,i)}};const GD={kernelName:ne,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,weights:s}=e,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const t=n.readSync(r.dataId),e=n.readSync(s.dataId),a=PC(t,e,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,a)}if(2===r.shape.length){const t=n.bufferSync(r),e=n.bufferSync(s),a=BC(t,e,o,i);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class HD{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(e,";\n      int offset_h = imod(h, ").concat(e,");\n      int in_w = w / ").concat(e,";\n      int offset_w = imod(w, ").concat(e,");\n      int offset_d = (offset_h * ").concat(e," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const jD={kernelName:ae,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockSize:s,dataFormat:o}=a,i=r.shape[0],c=("NHWC"===o?r.shape[1]:r.shape[2])*s,l=("NHWC"===o?r.shape[2]:r.shape[3])*s,u=("NHWC"===o?r.shape[3]:r.shape[1])/(s*s),h=new HD("NHWC"===o?[i,c,l,u]:[i,u,c,l],s,o);return n.runWebGLProgram(h,[r],r.dtype)}};class KD{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=bC(this.outputShape.length);const s=t.filterHeight,o=t.filterWidth,i=t.outChannels/t.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(s,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class qD{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=bC(this.outputShape.length);const s=t.outChannels/t.inChannels,o=t.padInfo.left,i=t.strideWidth,c=t.dilationWidth,l=t.filterHeight,u=t.filterWidth,h=u;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<u;g++)d+="\n          vec4 xTexelC".concat(2*g,";\n          int xTexelC").concat(2*g,"Ready;\n          vec4 xTexelC").concat(2*g+1,";\n          int xTexelC").concat(2*g+1,"Ready;\n          vec4 xC").concat(g,";");d+="\n    for (int r = 0; r < ".concat(l,"; r++) {\n      ");for(let g=0;g<u;g++)d+="\n          xTexelC".concat(2*g," = vec4(0.0);\n          xTexelC").concat(2*g,"Ready = 0;\n          xTexelC").concat(2*g+1," = vec4(0.0);\n          xTexelC").concat(2*g+1,"Ready = 0;\n          xC").concat(g," = vec4(0.0);");d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){const t=2*g;if(d+="\n          xC = xCCorner + ".concat(t*c,";\n          "),1===i){if(t<u&&(o%2===1?(d+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n              "),d+=1===c&&t>0?"\n                xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                  } else {\n                    xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                  }\n                  ")):d+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n\n                xC").concat(t," = xTexelC").concat(t,";\n                "),t+1<u)){const e=o%2===0?R(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(d+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                    xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(t+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(t+1,"Ready = 1;\n                  }\n                  "),d+=c>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                    } else {\n                     xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                    }\n                    "):"\n                    xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                    ")):d+=1===e?"\n                    xC".concat(t+1," = xTexelC").concat(t,";\n                    "):"\n                    xCOffset = xC + ".concat(e,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                      xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(t+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(t+1,"Ready = 1;\n                    }\n\n                    xC").concat(t+1," = xTexelC").concat(t+1,";\n                    ")}}else t<u&&(o%2===1?(d+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                  xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(t+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t+1,"Ready = 1;\n                }\n\n                xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n              "),t+1<u&&(d+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                "))):(d+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                  xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(t+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(t+1,"Ready = 1;\n                }\n\n                xC").concat(t," = vec4(\n                  xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n              "),t+1<u&&(d+="\n                  xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                "))));t<u&&(d+="\n            wTexel = getW(r, ".concat(t,", d1, q);\n            dotProd += xC").concat(t," * vec4(wTexel.xz, wTexel.xz);\n          "),t+1<u&&(d+="\n              wTexel = getW(r, ".concat(t+1,", d1, q);\n              dotProd += xC").concat(t+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),f="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(p,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(s,";\n        int q = d2 - d1 * ").concat(s,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(d,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(m,"\n        ").concat(f,"\n        setOutput(result);\n      }\n    ")}}const XD={kernelName:re,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s}=e,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=a;let u=c;null==u&&(u=[1,1]),A(mi(o,u),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(u,"'")));const h=ii(r.shape,s.shape,o,u,i,l,!0);let d;d=ht().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new qD(h):new KD(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,s],"float32",p)}};class YD{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,a=t.padInfo.top,r=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(s," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class QD{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,r=t.strideWidth,s=e-1-t.padInfo.top,o=n-1-t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const JD={kernelName:se,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:s}=e,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a,h=ii(r.shape,u,o,i,c,l,!0),d=new YD(h);return n.runWebGLProgram(d,[r,s],"float32")}};const ZD={kernelName:oe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:s}=e,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a,h=ii(u,s.shape,o,i,c,l,!0),d=new QD(h);return n.runWebGLProgram(d,[r,s],"float32")}};class $D{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const tF={kernelName:ie,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,r=[...a.shape,...a.shape],s=O(a.shape),o=__({inputs:{x:a},backend:n,attrs:{shape:[s]}}),i=new $D(s),c=n.runWebGLProgram(i,[o],o.dtype),l=__({inputs:{x:c},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}};class eF{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:l}=t,{top:u,left:h}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(h,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(e,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const nF={kernelName:ce,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s}=e,{strides:o,pad:i,dilations:c}=a,l=ri(r.shape,s.shape,o,i,"NHWC",c);let u;const h=new eF(l);u=n.runWebGLProgram(h,[r,s],"float32");const d=__({inputs:{x:u},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(u),d}};const aF={kernelName:de,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{equation:r}=a,s=e,{allDims:o,summedDims:i,idDims:c}=Yu(r,s.length);Ju(o.length,c,s);const{path:l,steps:u}=Zu(i,c),h=u.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const t of u[m]){const{permutationIndices:e,expandDims:a}=Qu(p,c[t]);let r;$u(e)?r=s[t]:(r=W_({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(r));const o=r.shape.slice();for(let t=0;t<a.length;++t)o.splice(a[t],0,1);M(r.shape,o)||(r=__({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===d?d=r:(d=C_({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=P_({inputs:{x:d},backend:n,attrs:{axis:l[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},rF=w_({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),sF={kernelName:pe,backendName:"webgl",kernelFunc:rF},oF={kernelName:fe,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:a,y:r}=e,s=ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new l_("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new i_("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},iF=k_({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:HC}),cF={kernelName:ge,backendName:"webgl",kernelFunc:iF},lF=w_({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(Au,";\n  float a1 = ").concat(Du,";\n  float a2 = ").concat(Fu,";\n  float a3 = ").concat(Ou,";\n  float a4 = ").concat(Mu,";\n  float a5 = ").concat(Lu,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),uF={kernelName:me,backendName:"webgl",kernelFunc:lF},hF=w_({opSnippet:v_+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:jC,dtype:"float32"}),dF={kernelName:ye,backendName:"webgl",kernelFunc:hF};function pF(t){const{inputs:e,attrs:n,backend:a}=t,{dim:r}=n,{input:s}=e,o=s.shape.length,i=s.shape.slice();let c=r;return r<0&&(A(-(o+1)<=r,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+r+1),i.splice(c,0,1),__({inputs:{x:s},backend:a,attrs:{shape:i}})}const fF={kernelName:be,backendName:"webgl",kernelFunc:pF},mF="return exp(x) - 1.0;",gF=w_({opSnippet:mF,packedOpSnippet:mF,cpuKernelImpl:KC}),yF={kernelName:xe,backendName:"webgl",kernelFunc:gF};class bF{constructor(t,e,n){this.variableNames=["real","imag"];const a=e[1];this.outputShape=e;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),s=n?"".concat(a,".0"):"1.0";let o;if("real"===t)o="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error('FFT component must be either "real" or "imag", got '.concat(t,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function xF(t,e,n){const a=n.texData.get(t.dataId),r=O(t.shape),s=t.shape[t.shape.length-1],o=__({inputs:{x:t},backend:n,attrs:{shape:[r/s,s]}}),i=o.shape,c=new bF("real",i,e),l=new bF("imag",i,e),u=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:i},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:i}],h=n.runWebGLProgram(c,u,"float32"),d=n.runWebGLProgram(l,u,"float32"),p=d_({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=__({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),f}const vF={kernelName:ve,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e;return xF(a,!1,n)}};class wF{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function kF(t){const{backend:e,attrs:n}=t,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||Y(r),"string"===s){const t=H(s,O(a));return t.fill(r),e.makeTensorInfo(a,s,t)}{const t=new wF(a,r),n=[[r]];return e.runWebGLProgram(t,[],s,n)}}const IF={kernelName:we,backendName:"webgl",kernelFunc:kF};class SF{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(e," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(e,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const NF={kernelName:ke,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n}=t;const{image:a}=e,r=n,s=new SF(a.shape);return r.runWebGLProgram(s,[a],a.dtype)}},TF="return floor(x);",EF=w_({opSnippet:TF,packedOpSnippet:TF,cpuKernelImpl:qC}),CF={kernelName:Ie,backendName:"webgl",kernelFunc:EF},RF=k_({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),_F={kernelName:Se,backendName:"webgl",kernelFunc:RF};class AF{constructor(t){this.variableNames=["A"];const e=YE(),[n,a]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(e.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class DF{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=YE(),[n,a]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(e.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}const FF={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t;let{pixels:r}=e;const{numChannels:s}=a,o="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[c,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[l,c],h=[l,c,s];if(i||o){const t=ht().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=OF&&t===MF||(MF=t,OF=document.createElement("canvas").getContext("2d",{willReadFrequently:MF})),OF.canvas.width=c,OF.canvas.height=l,OF.drawImage(r,0,0,c,l),r=OF.canvas}const d=n.makeTensorInfo(u,"int32");n.texData.get(d.dataId).usage=yE.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=ht().getBool("WEBGL_PACK")?new DF(h):new AF(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let OF,MF=ht().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const LF={kernelName:Sa,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s,bias:o,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a,m=yi(u),g=ii(r.shape,s.shape,c,h,l,d,!1,m);let y;const b=[],x=null!=o,v=null!=i,w="leakyrelu"===p,k=()=>{const t=[r,s],e=(t,e)=>{if("NCHW"===e&&1===t.shape.length&&1!==t.shape[0]){const e=__({inputs:{x:t},backend:n,attrs:{shape:[t.shape[0],1,1]}});return b.push(e),e}return t};if(x&&t.push(e(o,u)),v&&t.push(e(i,u)),w){const e=n.makeTensorInfo([],"float32",Ja(f,"float32"));t.push(e),b.push(e)}return t};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&ht().getBool("WEBGL_EXP_CONV")){const t=p?I_(p,!0):null,e=new fD(g,x,t,v,w),a=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=k();y=n.runWebGLProgram(e,r,"float32",a)}else if(ht().getBool("WEBGL_CONV_IM2COL"))y=bD({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const t=p?I_(p,!1):null,e=new dD(g,x,t,v,w),a=k();y=n.runWebGLProgram(e,a,"float32")}else y=yD({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});const I=__({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((t=>n.disposeIntermediateTensorInfo(t))),I}};const zF={kernelName:Na,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s,bias:o,preluActivationWeights:i}=e,{strides:c,pad:l,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=a,f=[];let m=u;null==m&&(m=[1,1]),A(mi(c,m),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(c," and dilations '").concat(m,"'")));const g=ii(r.shape,s.shape,c,m,l,h,!0),y=ht().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?I_(d,y):null,x=[r,s],v=null!=o,w=null!=i,k="leakyrelu"===d;if(v&&x.push(o),w&&x.push(i),k){const t=n.makeTensorInfo([],"float32",Ja(p,"float32"));x.push(t),f.push(t)}let I;I=y?new qD(g,v,b,w,k):new KD(g,v,b,w,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(I,x,"float32",S);return f.forEach((t=>n.disposeIntermediateTensorInfo(t))),N}};class PF{constructor(t,e,n,a){this.sliceDim=t,this.strides=e,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=hC(n.length);let s="\n    int index;";for(let o=0;o<this.sliceDim;o++)s+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(s,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const BF={kernelName:Ee,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:a,indices:r}=e,s=r.shape,o=s[s.length-1],i=O(a.shape),[c,l,u,h]=Nu(a,r),d=__({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),p=__({inputs:{x:a},backend:n,attrs:{shape:[O(a.shape)/u,u]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const t=n.readSync(r.dataId),e=n.bufferSync(a),s=XC(t,e,a.dtype,l,o,u,h,a.shape,i);return n.makeTensorInfo(c,a.dtype,s.values)}const f=new PF(o,h,[l,u],a.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=__({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class WF{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=hC(this.rank),a=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<t.length;r++)2===r?a.push("index"):a.push("".concat(n[r]));return a.join()}(t);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(t[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function UF(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,indices:s}=e,{axis:o,batchDims:i}=a,c=U(o,r.shape)[0];if(ht().get("DEBUG")){const t=n.readSync(s.dataId),e=r.shape[c];for(let n=0;n<t.length;++n){const a=t[n];A(a<=e-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(e-1,"]")))}}const l=gh(r,s,c,i),u=O(s.shape),h=[],d=__({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=__({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const t=n.bufferSync(p),e=n.bufferSync(d),a=YC(e,t,f);return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(l.outputShape,a.dtype,a.values)}const m=new WF(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=__({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}const VF={kernelName:Te,backendName:"webgl",kernelFunc:UF},GF=k_({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:QC,dtype:"bool"}),HF={kernelName:Ce,backendName:"webgl",kernelFunc:GF},jF=k_({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:JC}),KF={kernelName:Re,backendName:"webgl",kernelFunc:jF};const qF={kernelName:Ae,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e;return xF(a,!0,n)}},XF=w_({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),YF={kernelName:Fe,backendName:"webgl",kernelFunc:XF},QF=w_({opSnippet:"return float(isinf(x));",dtype:"bool"}),JF={kernelName:Oe,backendName:"webgl",kernelFunc:QF},ZF=w_({opSnippet:"return float(isnan(x));",dtype:"bool"}),$F={kernelName:Me,backendName:"webgl",kernelFunc:ZF},tO=k_({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:ZC,dtype:"bool"}),eO={kernelName:ze,backendName:"webgl",kernelFunc:tO},nO=k_({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:$C,dtype:"bool"}),aO={kernelName:Pe,backendName:"webgl",kernelFunc:nO};const rO={kernelName:Be,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:r,num:s}=n,o=tR(a,r,s);return e.makeTensorInfo([o.length],"float32",o)}},sO=w_({opSnippet:v_+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:eR}),oO={kernelName:We,backendName:"webgl",kernelFunc:sO},iO=w_({opSnippet:v_+"\n  return log(1.0 + x);\n"}),cO={kernelName:Ue,backendName:"webgl",kernelFunc:iO},lO=k_({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),uO={kernelName:Ve,backendName:"webgl",kernelFunc:lO},hO=w_({opSnippet:"return float(!(x >= 1.0));"}),dO={kernelName:Ge,backendName:"webgl",kernelFunc:hO},pO=k_({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),fO={kernelName:He,backendName:"webgl",kernelFunc:pO};class mO{constructor(t,e,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=e,o=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s,"; j <= ").concat(s,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class gO{constructor(t,e,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=e,o=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s,"; j <= ").concat(s,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const yO={kernelName:je,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{depthRadius:s,bias:o,alpha:i,beta:c}=a,l=ht().getBool("WEBGL_PACK_NORMALIZATION")?new gO(r.shape,s,o,i,c):new mO(r.shape,s,o,i,c);return n.runWebGLProgram(l,[r],r.dtype)}};class bO{constructor(t,e,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(e,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(e," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const xO={kernelName:Ke,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r,y:s,dy:o}=e,{depthRadius:i,bias:c,alpha:l,beta:u}=a,h=new bO(r.shape,i,c,l,u);return n.runWebGLProgram(h,[r,s,o],r.dtype)}};function vO(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{reductionIndices:s,keepDims:o}=a,i=r.shape.length,c=U(s,r.shape);let l=c;const u=lc(l,i),h=null!=u,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const t=n.texData.get(p.dataId).values,e=new Array(i);for(let n=0;n<e.length;n++)e[n]=r.shape[u[n]];const a=_R(t,r.shape,r.dtype,u,e);p=n.makeTensorInfo(e,r.dtype);n.texData.get(p.dataId).values=a}else p=z_(r,u,n);l=hc(l.length,i)}cc("max",l,i);const[f,m]=oc(p.shape,l);let g,y=f;if(o&&(y=ic(f,c)),d){const t=n.texData.get(p.dataId).values,e=nR(t,O(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);n.texData.get(g.dataId).values=e}else g=function(t,e,n,a){const r=O(e),s=__({inputs:{x:t},attrs:{shape:[O(t.shape)/r,r]},backend:a}),o=O_(s,t.dtype,"max",a),i=__({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const wO={kernelName:qe,backendName:"webgl",kernelFunc:vO},kO=k_({opSnippet:o_+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+c_+"\n  return result;\n",cpuKernelImpl:aR}),IO={kernelName:Xe,backendName:"webgl",kernelFunc:kO};const SO={kernelName:Ye,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;qE(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;A(mi(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=si(r.shape,s,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&M(l.inShape,l.outShape))return u_({inputs:{x:r},backend:n});const u=new kA(l,"max",!1);return n.runWebGLProgram(u,[r],r.dtype)}};const NO={kernelName:Je,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{filterSize:s,strides:o,pad:i,dataFormat:c,dimRoundingMode:l}=a,u=oi(r.shape,s,o,[1,1,1],i,l,c),h=new IA(u,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class TO{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,a=t.dilationHeight,r=t.effectiveFilterHeight,s=t.effectiveFilterWidth,o=r-1-t.padInfo.top,i=s-1-t.padInfo.left,c=r*s-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(e,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(s," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class EO{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,a=t.strideWidth,r=t.dilationDepth,s=t.dilationHeight,o=t.dilationWidth,i=t.effectiveFilterDepth,c=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=i-1-t.padInfo.front,h=c-1-t.padInfo.top,d=l-1-t.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(h,", ").concat(d,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(e,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const CO={kernelName:Ze,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s}=e,o=s,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=oi(o.shape,i,c,[1,1,1],l,u),d=new IA(h,"max",!0),p=n.runWebGLProgram(d,[o],o.dtype),f=new EO(h),m=n.runWebGLProgram(f,[r,p],o.dtype);return n.disposeIntermediateTensorInfo(p),m}};const RO={kernelName:Qe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s,output:o}=e,i=s;qE([s,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=si(i.shape,c,l,1,u,h),p=new kA(d,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new TO(d),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const _O={kernelName:$e,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{x:r}=e,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=n,l=a;A(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const u=[1,1];A(mi(o,u),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(u,"'")));const h=si(r.shape,s,o,u,i),[d,p]=function(t,e,n,a){let r=new kA(n,"max",!1);const s=a.runWebGLProgram(r,[t],"float32");return r=new kA(n,"max",!0,!0,e),[s,a.runWebGLProgram(r,[t],"float32")]}(r,c,h,l);return[d,p]}};const AO={kernelName:tn,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{x:r}=e,{keepDims:s,axis:o}=n,i=a,c=r.shape.length,l=U(o,r.shape);let u=l;const h=lc(u,c),d=null!=h,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(d){if(p){const t=i.texData.get(m.dataId).values,e=new Array(c);for(let a=0;a<e.length;a++)e[a]=r.shape[h[a]];const n=_R(t,r.shape,r.dtype,h,e);m=i.makeTensorInfo(e,r.dtype);i.texData.get(m.dataId).values=n}else m=z_(r,h,i);f.push(m),u=hc(u.length,c)}cc("sum",u,c);const[g,y]=oc(m.shape,u);let b=g;s&&(b=ic(g,l));const x=function(t,e,n,a){const r=O(e),s=__({inputs:{x:t},attrs:{shape:[O(t.shape)/r,r]},backend:a}),o=O_(s,"float32","mean",a),i=__({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(m,y,b,i);for(const v of f)i.disposeIntermediateTensorInfo(v);return x}};const DO={kernelName:en,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a,i=r.shape.length,c=U(s,r.shape);let l=c;const u=lc(l,i);let h=r;null!=u&&(h=W_({inputs:{x:r},backend:n,attrs:{perm:u}}),l=hc(l.length,r.shape.length)),cc("min",l,i);const[d,p]=oc(h.shape,l),f=__({inputs:{x:h},backend:n,attrs:{shape:[-1,O(p)]}}),m=O_(f,f.dtype,"min",n);let g;if(o){g=__({inputs:{x:m},backend:n,attrs:{shape:ic(d,c)}})}else g=__({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}},FO=k_({opSnippet:o_+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+c_+"\n  return result;\n",cpuKernelImpl:rR}),OO={kernelName:nn,backendName:"webgl",kernelFunc:FO};class MO{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,r=hC(a),s=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class LO{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,r=hC(a),s=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=FR("rc",a),c=FR("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h="reflect"===n?0:1;let d="";if(1===a){const t="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(h,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(h,";\n        }\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const t="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(h,") +\n                gte * ((end - 1) * 2 - source + ").concat(h,");\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(t,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(t,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(d,"\n        setOutput(result);\n      }\n    ")}}const zO={kernelName:an,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r}=e,{paddings:s,mode:o}=a,i=ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new LO(r.shape,s,o):new MO(r.shape,s,o);return n.runWebGLProgram(i,[r],r.dtype)}},PO=k_({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+c_+"\n  return result;\n"}),BO={kernelName:rn,backendName:"webgl",kernelFunc:PO};class WO{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(e-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(e-1,"));\n      }\n    ")}}const UO=k_({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),VO={kernelName:he,backendName:"webgl",kernelFunc:UO},GO="return a - b;",HO=k_({opSnippet:GO,packedOpSnippet:GO,supportsComplex:!0,cpuKernelImpl:ER}),jO={kernelName:ua,backendName:"webgl",kernelFunc:HO};function KO(t){const{inputs:e,backend:n,attrs:a}=t,{logits:r}=e,{dim:s}=a,o=U([s],r.shape),i=vO({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),c=ic(i.shape,o),l=__({inputs:{x:i},backend:n,attrs:{shape:c}}),u=HO({inputs:{a:r,b:l},backend:n}),h=hF({inputs:{x:u},backend:n}),d=P_({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),p=__({inputs:{x:d},backend:n,attrs:{shape:c}}),f=UO({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const qO={kernelName:Jn,backendName:"webgl",kernelFunc:KO};const XO={kernelName:sn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{logits:r}=e,{numSamples:s,seed:o,normalized:i}=a,c=i?r:KO({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],h=new WO(l,u,s),d=[[o]],p=n.runWebGLProgram(h,[c],"int32",d);return i||n.disposeIntermediateTensorInfo(c),p}},YO=UR+"\n  return -x;\n";const QO={kernelName:cn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;if(n.shouldExecuteOnCPU([a])){const t=n.texData.get(a.dataId),[e,r]=oR(t.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,e)}let r;return r=ht().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new t_(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new WR(a.shape,YO),n.runWebGLProgram(r,[a],a.dtype)}},JO=Al;const ZO={kernelName:un,backendName:"webgl",kernelFunc:function(t){Ta("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),{selectedIndices:h}=JO(l,u,o,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},$O=Dl;const tM={kernelName:hn,backendName:"webgl",kernelFunc:function(t){Ta("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a,u=n.readSync(r.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=$O(u,h,o,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},eM=Fl;const nM={kernelName:dn,backendName:"webgl",kernelFunc:function(t){Ta("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a,u=n.readSync(r.dataId),h=n.readSync(s.dataId),d=o,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=eM(u,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class aM{constructor(t,e,n,a){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const rM={kernelName:fn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{indices:r}=e,{dtype:s,depth:o,onValue:i,offValue:c}=a,l=O(r.shape),u=new aM(l,o,i,c),h=__({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(u,[h],s);n.disposeIntermediateTensorInfo(h);const p=__({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,o]}});return n.disposeIntermediateTensorInfo(d),p}};function sM(t){const{inputs:e,backend:n}=t,{x:a}=e;if("complex64"===a.dtype){const t=jA({inputs:{input:a},backend:n}),e=sM({inputs:{x:t},backend:n}),r=iD({inputs:{input:a},backend:n}),s=sM({inputs:{x:r},backend:n}),o=d_({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return kF({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const oM={kernelName:va,backendName:"webgl",kernelFunc:sM};const iM={kernelName:pn,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a}=e,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const e=jA({inputs:{input:r},backend:a}),n=t({inputs:{x:e},backend:a}),s=iD({inputs:{input:r},backend:a}),o=sM({inputs:{x:s},backend:a}),i=d_({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return kF({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const cM={kernelName:mn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{axis:r}=a;if(1===e.length)return pF({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const s=e[0].shape,o=e[0].dtype;e.forEach((t=>{D(s,t.shape,"All tensors passed to stack must have matching shapes"),A(o===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=uD({inputs:e.map((t=>{const e=pF({inputs:{input:t},backend:n,attrs:{dim:r}});return i.push(e),e})),backend:n,attrs:{axis:r}});return i.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}};class lM{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,r=hC(a),s=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class uM{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,r=hC(a),s=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=FR("rc",a),c=FR("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===a?2:4;f<m;f++)p+="\n        ".concat(h[f],"\n        if (").concat(d,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const hM=t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{paddings:s,constantValue:o}=a;if(0===O(r.shape)){const t=s.map(((t,e)=>t[0]+r.shape[e]+t[1]));return kF({backend:n,attrs:{shape:t,value:o,dtype:r.dtype}})}const i=ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uM(r.shape,s,o):new lM(r.shape,s,o),c=[[o]];return n.runWebGLProgram(i,[r],r.dtype,c)},dM={kernelName:gn,backendName:"webgl",kernelFunc:hM},pM=k_({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+c_+"\n  return result;\n"}),fM={kernelName:yn,backendName:"webgl",kernelFunc:pM};const mM={kernelName:xn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a,i=r.shape.length,c=[],l=U(s,r.shape);let u=l;const h=lc(u,i);let d,p=r;if(null!=h&&(p=W_({inputs:{x:r},backend:n,attrs:{perm:h}}),u=hc(u.length,i),c.push(p)),cc("prod",u,i),n.shouldExecuteOnCPU([p])){const t=n.texData.get(p.dataId).values,{outVals:e,outShape:a,outDtype:r}=cR(p.shape,p.dtype,t,u);d=n.makeTensorInfo(a,r,e)}else{const[t,e]=oc(p.shape,u),a=O(e),s=__({inputs:{x:p},backend:n,attrs:{shape:[-1,a]}}),o=O_(s,Rr(r.dtype),"prod",n);d=__({inputs:{x:o},backend:n,attrs:{shape:t}}),c.push(s),c.push(o)}if(o){c.push(d);const t=ic(d.shape,l);d=__({inputs:{x:d},backend:n,attrs:{shape:t}})}return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}};const gM={kernelName:vn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=e,{outputRaggedRank:i}=a,c=r.map((t=>n.readSync(t.dataId))),l=r.map((t=>t.shape)),u=n.readSync(s.dataId),h=n.readSync(o.dataId),[d,p,f]=lR(c,l,u,s.shape,s.dtype,h,o.shape,i),m=d.map((t=>n.makeTensorInfo([t.length],"int32",t))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}};const yM={kernelName:wn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{starts:a,limits:r,deltas:s}=e,o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=uR(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};const bM={kernelName:kn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=e,{rowPartitionTypes:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),h=n.readSync(o.dataId),d=i.map((t=>n.readSync(t.dataId))),p=i.map((t=>t.shape)),[f,m]=hR(l,r.shape,u,s.shape,s.dtype,h,o.shape,d,p,c);return n.makeTensorInfo(f,s.dtype,m)}},xM=t=>{const{backend:e,attrs:n}=t,{start:a,stop:r,step:s,dtype:o}=n,i=dR(a,r,s,o);return e.makeTensorInfo([i.length],o,i)},vM={kernelName:In,backendName:"webgl",kernelFunc:xM},wM=w_({opSnippet:"return 1.0 / x;"}),kM={kernelName:Nn,backendName:"webgl",kernelFunc:wM},IM=w_({opSnippet:UR+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),SM={kernelName:Tn,backendName:"webgl",kernelFunc:IM},NM=w_({opSnippet:UR+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),TM={kernelName:Dn,backendName:"webgl",kernelFunc:NM};class EM{constructor(t,e,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=t;this.outputShape=[s,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class CM{constructor(t,e,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=t;this.outputShape=[s,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const RM={kernelName:_n,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,l]=i,u=ht().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new CM(r.shape,c,l,s,o):new EM(r.shape,c,l,s,o);return n.runWebGLProgram(u,[r],"float32")}};class _M{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,r]=e,[,s,o]=t,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const AM={kernelName:An,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r,dy:s}=e,{alignCorners:o}=a,i=new _M(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class DM{constructor(t,e,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=t;this.outputShape=[s,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class FM{constructor(t,e,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=t;this.outputShape=[s,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const OM={kernelName:Cn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,l]=i,u=ht().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new FM(r.shape,c,l,s,o):new DM(r.shape,c,l,s,o);return n.runWebGLProgram(u,[r],r.dtype)}};class MM{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,r]=e,[,s,o]=t,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const LM={kernelName:Rn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r,dy:s}=e,{alignCorners:o}=a,i=new MM(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class zM{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=t,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(t[0]," - coord - 1));\n        }\n      "));const a=t.map(((n,a)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),r=hC(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class PM{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=t;const a=FR("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),s="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=hC(n);function i(n){const a=t.map(((a,r)=>function(n,a){return-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n))),r=a.join(","),s=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(s,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(t[0]," - rc - 1),\n            ").concat(t[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(t[0]," - (rc  + 1) - 1),\n                ").concat(t[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(t){return i(t)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",i(t)}(a.slice()),";\n          }\n          if(").concat(s,") {\n            result.b = ").concat(function(t){return t[n-2]="("+t[n-2]+" + 1)",i(t)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",i(t)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const BM={kernelName:Fn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{dims:s}=a,o=r.shape.length,i=U(s,r.shape);if(0===o)return u_({inputs:{x:r},backend:n});const c=ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PM(r.shape,i):new zM(r.shape,i);return n.runWebGLProgram(c,[r],r.dtype)}};class WM{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],a=t[2];this.outputShape=t;let r="";r="number"===typeof e?"float outputValue = ".concat(e.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(e.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const UM={kernelName:ka,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{image:r}=e,{radians:s,fillValue:o,center:i}=n,c=a,l=new WM(r.shape,o),[u,h]=xu(i,r.shape[1],r.shape[2]),d=[[u,h,Math.sin(s),Math.cos(s)]];return c.runWebGLProgram(l,[r],r.dtype,d)}},VM=w_({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),GM={kernelName:On,backendName:"webgl",kernelFunc:VM},HM=w_({opSnippet:"return inversesqrt(x);",cpuKernelImpl:pR}),jM={kernelName:Mn,backendName:"webgl",kernelFunc:HM};class KM{constructor(t,e,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=hC(r.length),c=hC(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=e>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(t,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(e,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(d,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class qM{constructor(t,e,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const i=hC(r.length),c=hC(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=e>1?"strides[j]":"strides",g=e>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(t,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(e,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(e,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(d,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const XM={kernelName:Ln,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:r,updates:s}=e,{shape:o}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Cu(0,r,o),d=[h/l,l];if(0===h)return n.makeTensorInfo(o,r.dtype);const p=__({inputs:{x:r},backend:n,attrs:{shape:[c,i]}}),f=__({inputs:{x:s},backend:n,attrs:{shape:[c,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=ht().getBool("WEBGL_PACK")?new qM(c,i,p.shape.length,f.shape.length,u,d):new KM(c,i,p.shape.length,f.shape.length,u,d);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=__({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class YM{constructor(t,e,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(e+1)),"; ++i) { if (left >= right) break;"),s=2===ht().getNumber("WEBGL_VERSION")?"while (left < right) {":r,o="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(s,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(o," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const QM={kernelName:Pn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sortedSequence:r,values:s}=e,{side:o}=a,i=new YM(r.shape[0],r.shape[1],s.shape[1],o),c=[[r.shape[1]]];return n.runWebGLProgram(i,[r,s],"int32",c)}};class JM{constructor(t,e,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let a=0;a<e.length;a++)o.push("".concat(n[a])),a<t&&s.push("".concat(n[a]));a=s.join(),r=o.join()}const s=hC(n);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const ZM={kernelName:Bn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:a,t:r,e:s}=e,o=new JM(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[a,r,s],Cr(r.dtype,s.dtype))}},$M=w_({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(Ru,";\n  float scale = ").concat(_u,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),tL={kernelName:Wn,backendName:"webgl",kernelFunc:$M},eL=w_({opSnippet:v_+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:mR}),nL={kernelName:jn,backendName:"webgl",kernelFunc:eL},aL=w_({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),rL={kernelName:Hn,backendName:"webgl",kernelFunc:aL},sL=w_({opSnippet:v_+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(c_,"\n  return result;\n")}),oL={kernelName:Vn,backendName:"webgl",kernelFunc:sL},iL=w_({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),cL={kernelName:Gn,backendName:"webgl",kernelFunc:iL},lL=w_({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),uL={kernelName:Kn,backendName:"webgl",kernelFunc:lL},hL={kernelName:Yn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockShape:s,paddings:o}=a;A(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((t,e)=>t*e)),c=[[0,0]];c.push(...o);for(let y=1+s.length;y<r.shape.length;++y)c.push([0,0]);const l=[],u=hM({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),h=vu(u.shape,s,i,!1),d=wu(h.length,s.length,!1),p=ku(u.shape,s,i,!1),f=__({inputs:{x:u},backend:n,attrs:{shape:h}}),m=W_({inputs:{x:f},backend:n,attrs:{perm:d}}),g=__({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(u),l.push(f),l.push(m),l.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}};const dL={kernelName:Zn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:a,values:r,denseShape:s,defaultValue:o}=e;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(a.dataId),c=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[h,d,p,f,m]=bR(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const pL={kernelName:$n,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:a,inputShape:r,newShape:s}=e;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(s.dataId)),[l,u,h]=xR(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};const fL={kernelName:ta,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:r,segmentIds:s}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=vR(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const mL={kernelName:ea,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:r,segmentIds:s}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=vR(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const gL={kernelName:na,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sparseIndices:r,sparseValues:s,defaultValue:o}=e,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=Cu(0,r,i);if("string"===s.dtype){const t=n.bufferSync(r),e=n.bufferSync(s),a=er(n.readSync(o.dataId)[0]),p=fR(t,e,i,d,u,l,c,h,a,false);return n.makeTensorInfo(i,p.dtype,p.values)}const p=new KM(l,c,r.shape.length,s.shape.length,h,[d,1],false),f=n.runWebGLProgram(p,[s,r,o],s.dtype),m=__({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}};const yL={kernelName:Qn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{numOrSizeSplits:s,axis:o}=a,i=U(o,r.shape)[0],c=eh(r,s,i),l=r.shape.length,u=new Array(l).fill(0),h=r.shape.slice();return c.map((t=>{const e=[...h];e[i]=t;const a=zA({inputs:{x:r},backend:n,attrs:{begin:u,size:e}});return u[i]+=t,a}))}},bL="return sqrt(x);",xL=w_({opSnippet:bL,packedOpSnippet:bL,cpuKernelImpl:wR}),vL={kernelName:qn,backendName:"webgl",kernelFunc:xL},wL={kernelName:ra,backendName:"webgl",kernelFunc:w_({opSnippet:"return x * x;"})},kL="return (a - b) * (a - b);",IL=k_({opSnippet:kL,packedOpSnippet:kL}),SL={kernelName:aa,backendName:"webgl",kernelFunc:IL};const NL={kernelName:sa,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const s=yh(n.readSync(r.dataId)),o=kR(s,"string",a);return n.makeTensorInfo(r.shape,"string",o)}};const TL={kernelName:wa,backendName:"webgl",kernelFunc:function(t){let{inputs:e,attrs:n,backend:a}=t;const{x:r}=e,s=UR+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new WR(r.shape,s);return a.runWebGLProgram(o,[r],r.dtype)}};class EL{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=hC(n.length),s=hC(n.length);let o="";if(1===a)o="coords * strides + begin";else{let t=0;o=n.map(((e,a)=>(t++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(t-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(t,");\n      ").concat(r," strides = ").concat(r,"(").concat(e,");\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const CL={kernelName:oa,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{begin:s,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=$o(r.shape,s,o,i,c,l,u,h,d);let w;if(m)w=__({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){A(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const t=Wo(b,x,v),e=zA({inputs:{x:r},backend:n,attrs:{begin:b,size:t}});w=__({inputs:{x:e},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(e)}else{if(n.shouldExecuteOnCPU([r])){const t=n.readSync(r.dataId),e=Ks(r.shape,r.dtype,t),a=IR(p,e,v,b);w=n.makeTensorInfo(f,r.dtype,a.values)}else{const t=new EL(b,v,p);w=n.runWebGLProgram(t,[r],r.dtype)}}const k=__({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};const RL={kernelName:ia,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=e,d=n.readSync(u.dataId),p=n.readSync(h.dataId),[f,m]=SR(d,p,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const _L={kernelName:ca,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{skipEmpty:r}=a,{input:s,delimiter:o}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[l,u,h]=NR(i,c,r),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const AL={kernelName:la,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{numBuckets:r}=a,{input:s}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=TR(o,r);return n.makeTensorInfo(s.shape,"int32",i)}},DL=w_({opSnippet:"return tan(x);"}),FL={kernelName:ha,backendName:"webgl",kernelFunc:DL},OL=w_({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),ML={kernelName:da,backendName:"webgl",kernelFunc:OL};const LL={kernelName:zn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{tensor:r,indices:s,updates:o}=e,{}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Cu(0,s,r.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(r.shape,s.dtype);const p=__({inputs:{x:s},backend:n,attrs:{shape:[c,i]}}),f=__({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),m=__({inputs:{x:r},backend:n,attrs:{shape:d}}),g=new KM(c,i,p.shape.length,f.shape.length,u,d,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),b=__({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class zL{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const a=hC(this.rank),r=function(t){const e=t.length;if(e>5)throw Error("Tile for rank ".concat(e," is not yet supported"));if(1===e)return"imod(resRC, ".concat(t[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<t.length;r++)a.push("imod(".concat(n[r],", ").concat(t[r],")"));return a.join()}(t);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function PL(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const t=n.readSync(r.dataId),e="string"===r.dtype?t.map((t=>er(t))):t,a=Ks(r.shape,r.dtype,e),o=CR(a,s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new zL(r.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}const BL={kernelName:pa,backendName:"webgl",kernelFunc:PL};class WL{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class UL{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function VL(t,e){null!==e&&t.disposeIntermediateTensorInfo(e)}function GL(t){let e=1;for(;e<t;)e*=2;return e}const HL={kernelName:fa,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{k:s,sorted:o}=a,i=ht().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=ht().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,u=l[l.length-1];if(n.shouldExecuteOnCPU([r])||u<i||s>c){const t=n.readSync(r.dataId),[e,a]=RR(t,l,r.dtype,s,o);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===u)return[r,kF({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,f=O(l)/u,m=__({inputs:{x:p},attrs:{shape:[f,u]},backend:n});d&&VL(n,p);const g=GL(s),y=GL(u);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(t,e,a)=>{const r=x(),s=new WL(a),o=[[u],[null===b?1:0],[Number.NEGATIVE_INFINITY],[t],[e]],i=b;b=n.runWebGLProgram(s,r,"int32",o),VL(n,i)};for(let N=1;N<g;N*=2){const t=2*N;for(let e=N;e>=1;e/=2)v(t,e,[f,y])}for(let N=y;N>g;N/=2){const t=x(),e=new UL([f,N/2]),a=[[u],[null===b?1:0],[g]],r=b;b=n.runWebGLProgram(e,t,"int32",a),VL(n,r);const s=g/2,o=2*s;for(let n=s;n>=1;n/=2)v(o,n,b.shape)}let w=b;b=zA({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),VL(n,w);let k=UF({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});VL(n,m);const I=l.slice(0,-1);I.push(s),w=b,b=__({inputs:{x:b},attrs:{shape:I},backend:n}),VL(n,w);const S=k;return k=__({inputs:{x:k},attrs:{shape:I},backend:n}),VL(n,S),[k,b]}};class jL{constructor(t,e,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(t," && 0 <= coordX && coordX < ").concat(e,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(e,"));\n                float mapY = mapCoord(inY, float(").concat(t,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const KL={kernelName:ma,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{image:r,transforms:s}=e,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=a,[u,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=new jL(h,d,o,i,c,[u,f,m,p]);return n.runWebGLProgram(g,[r,s],"float32")}};const qL={kernelName:ya,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{axis:r}=n,{x:s}=e;qE(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(s.dataId),{outputValues:i,outputShape:c,indices:l}=AR(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const XL={kernelName:ba,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{value:r}=e;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r,i=o.shape.length,c=r.shape[s],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==s&&(l[u++]=o.shape[m]);const h=[],d=new Array(i).fill(0),p=o.shape.slice();p[s]=1;const f=new Array(c);for(let m=0;m<f.length;m++){d[s]=m;const t=zA({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),e=__({inputs:{x:t},backend:n,attrs:{shape:l}});f[m]=e,h.push(t)}return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class YL{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,a=t.batchSize,r=t.inSize,s=t.numSegments,o=s*Math.ceil(r/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let h="";r%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(h,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(s,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(s,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const QL={kernelName:xa,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,segmentIds:s}=e,{numSegments:o}=a,i=r.shape.length,c=[];let l=0;const u=lc([l],i);let h=r;null!=u&&(h=W_({inputs:{x:r},backend:n,attrs:{perm:u}}),c.push(h),l=hc(1,i)[0]);const d=mh(h.shape,l,o),p=O([h.shape[l]]),f=__({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});c.push(f);const m=Rr(r.dtype),g=(t,e,a,r,s)=>{const o=t.shape[0],i=t.shape[1],l=fh(i,s),u=new YL({windowSize:l,inSize:i,batchSize:o,numSegments:s},e),h=n.compileAndRun(u,[t,a],r);if(c.push(h),h.shape[1]===s)return h;const d=xM({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=PL({inputs:{x:d},backend:n,attrs:{reps:[i/l]}});c.push(d),c.push(p);return g(h,e,p,r,s)},y=__({inputs:{x:g(f,"unsortedSegmentSum",s,m,o)},backend:n,attrs:{shape:d}});let b=y;if(null!=u){c.push(y);const t=uc(u);b=W_({inputs:{x:b},backend:n,attrs:{perm:t}})}return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}},JL=[H_,K_,X_,Q_,$_,nA,aA,rA,uA,hA,pA,mA,yA,xA,wA,SA,NA,CA,RA,_A,FA,BA,WA,UA,VA,XA,JA,tD,p_,aD,hD,xD,SD,TD,ED,CD,RD,AD,FD,MD,UD,VD,GD,jD,XD,JD,ZD,tF,nF,aF,sF,oF,cF,uF,dF,fF,yF,vF,IF,NF,CF,_F,FF,LF,zF,BF,VF,HF,KF,h_,qF,cD,YF,JF,$F,g_,eO,aO,rO,oO,cO,uO,dO,fO,yO,xO,wO,IO,SO,NO,CO,RO,_O,AO,DO,OO,zO,BO,XO,R_,QO,ZO,tM,nM,HA,rM,iM,cM,dM,fM,x_,mM,gM,yM,bM,vM,KA,VO,kM,SM,TM,A_,RM,AM,OM,LM,BM,UM,GM,jM,XM,QM,ZM,tL,nL,rL,oL,cL,PA,qO,uL,hL,dL,pL,fL,mL,gL,yL,vL,wL,SL,NL,TL,CL,RL,_L,AL,jO,B_,FL,ML,LL,BL,HL,KL,U_,qL,XL,QL,oM];for(const n of JL)Fa(n);class ZL{decComplexRef(t){}time(t){return $L("time")}read(t){return $L("read")}readSync(t){return $L("readSync")}numDataIds(){return $L("numDataIds")}disposeData(t){return $L("disposeData")}write(t,e,n){return $L("write")}move(t,e,n,a){return $L("move")}memory(){return $L("memory")}floatPrecision(){return $L("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,a){return $L("batchMatMul")}fusedBatchMatMul(t){let{a:e,b:n,transposeA:a,transposeB:r,bias:s,activation:o,preluActivationWeights:i}=t;return $L("fusedBatchMatMul")}slice(t,e,n){return $L("slice")}stridedSlice(t,e,n,a){return $L("stridedSlice")}unstack(t,e){return $L("unstack")}reverse(t,e){return $L("reverse")}concat(t,e){return $L("concat")}neg(t){return $L("neg")}add(t,e){return $L("add")}addN(t){return $L("addN")}subtract(t,e){return $L("subtract")}multiply(t,e){return $L("multiply")}realDivide(t,e){return $L("realDivide")}floorDiv(t,e){return $L("floorDiv")}sum(t,e){return $L("sum")}prod(t,e){return $L("prod")}unsortedSegmentSum(t,e,n){return $L("unsortedSegmentSum")}argMin(t,e){return $L("argMin")}argMax(t,e){return $L("argMax")}equal(t,e){return $L("equal")}notEqual(t,e){return $L("notEqual")}less(t,e){return $L("less")}lessEqual(t,e){return $L("lessEqual")}greater(t,e){return $L("greater")}greaterEqual(t,e){return $L("greaterEqual")}logicalNot(t){return $L("logicalNot")}logicalAnd(t,e){return $L("logicalAnd")}logicalOr(t,e){return $L("logicalOr")}where(t){return $L("where")}select(t,e,n){return $L("select")}topk(t,e,n){return $L("topk")}min(t,e){return $L("min")}minimum(t,e){return $L("minimum")}mod(t,e){return $L("mod")}max(t,e){return $L("max")}maximum(t,e){return $L("maximum")}all(t,e){return $L("all")}any(t,e){return $L("any")}squaredDifference(t,e){return $L("squaredDifference")}ceil(t){return $L("ceil")}floor(t){return $L("floor")}round(t){return $L("round")}sign(t){return $L("sign")}isNaN(t){return $L("isNaN")}isInf(t){return $L("isInf")}isFinite(t){return $L("isFinite")}pow(t,e){return $L("pow")}exp(t){return $L("exp")}expm1(t){return $L("expm1")}softmax(t,e){return $L("softmax")}log(t){return $L("log")}log1p(t){return $L("log1p")}sqrt(t){return $L("sqrt")}rsqrt(t){return $L("rsqrt")}square(t){return $L("square")}reciprocal(t){return $L("reciprocal")}relu(t){return $L("relu")}relu6(t){return $L("relu6")}prelu(t,e){return $L("prelu")}elu(t){return $L("elu")}eluDer(t,e){return $L("eluDer")}selu(t){return $L("selu")}int(t){return $L("int")}clip(t,e,n){return $L("clip")}abs(t){return $L("abs")}complexAbs(t){return $L("complexAbs")}sigmoid(t){return $L("sigmoid")}softplus(t){return $L("softplus")}sin(t){return $L("sin")}cos(t){return $L("cos")}tan(t){return $L("tan")}asin(t){return $L("asin")}acos(t){return $L("acos")}atan(t){return $L("atan")}atan2(t,e){return $L("atan2")}sinh(t){return $L("sinh")}cosh(t){return $L("cosh")}tanh(t){return $L("tanh")}asinh(t){return $L("asinh")}acosh(t){return $L("acosh")}atanh(t){return $L("atanh")}erf(t){return $L("erf")}step(t,e){return $L("step")}fusedConv2d(t){let{input:e,filter:n,convInfo:a,bias:r,activation:s,preluActivationWeights:o}=t;return $L("fusedConv2d")}conv2d(t,e,n){return $L("conv2d")}conv2dDerInput(t,e,n){return $L("conv2dDerInput")}conv2dDerFilter(t,e,n){return $L("conv2dDerFilter")}fusedDepthwiseConv2D(t){let{input:e,filter:n,convInfo:a,bias:r,activation:s,preluActivationWeights:o}=t;return $L("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return $L("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return $L("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return $L("depthwiseConv2DDerFilter")}conv3d(t,e,n){return $L("conv3d")}conv3dDerInput(t,e,n){return $L("conv3dDerInput")}conv3dDerFilter(t,e,n){return $L("conv3dDerFilter")}maxPool(t,e){return $L("maxPool")}maxPoolBackprop(t,e,n,a){return $L("maxPoolBackprop")}avgPool(t,e){return $L("avgPool")}avgPoolBackprop(t,e,n){return $L("avgPoolBackprop")}avgPool3d(t,e){return $L("avgPool3d")}avgPool3dBackprop(t,e,n){return $L("avgPool3dBackprop")}maxPool3d(t,e){return $L("maxPool3d")}maxPool3dBackprop(t,e,n,a){return $L("maxPool3dBackprop")}reshape(t,e){return $L("reshape")}cast(t,e){return $L("cast")}tile(t,e){return $L("tile")}pad(t,e,n){return $L("pad")}transpose(t,e){return $L("transpose")}gather(t,e,n){return $L("gather")}gatherND(t,e){return $L("gatherND")}scatterND(t,e,n){return $L("scatterND")}batchToSpaceND(t,e,n){return $L("batchToSpaceND")}spaceToBatchND(t,e,n){return $L("spaceToBatchND")}resizeBilinear(t,e,n,a,r){return $L("resizeBilinear")}resizeBilinearBackprop(t,e,n){return $L("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,a,r){return $L("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return $L("resizeNearestNeighborBackprop")}batchNorm(t,e,n,a,r,s){return $L("batchNorm")}localResponseNormalization4D(t,e,n,a,r){return $L("localResponseNormalization4D")}LRNGrad(t,e,n,a,r,s,o){return $L("LRNGrad")}multinomial(t,e,n,a){return $L("multinomial")}oneHot(t,e,n,a){return $L("oneHot")}cumsum(t,e,n,a){return $L("cumsum")}nonMaxSuppression(t,e,n,a,r){return $L("nonMaxSuppression")}fft(t){return $L("fft")}ifft(t){return $L("ifft")}complex(t,e){return $L("complex")}real(t){return $L("real")}imag(t){return $L("imag")}cropAndResize(t,e,n,a,r,s){return $L("cropAndResize")}depthToSpace(t,e,n){return $L("depthToSpace")}split(t,e,n){return $L("split")}sparseToDense(t,e,n,a){return $L("sparseToDense")}diag(t){return $L("diag")}fill(t,e,n){return $L("fill")}onesLike(t){return $L("onesLike")}zerosLike(t){return $L("zerosLike")}linspace(t,e,n){return $L("linspace")}dispose(){return $L("dispose")}}function $L(t){throw new Error("'".concat(t,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}function tz(t,e){if(!t)throw new Error("string"===typeof e?e:e())}function ez(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";tz(sz(t,e),(()=>n+" Shapes ".concat(t," and ").concat(e," must match")))}function nz(t){tz(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function az(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e&&(e=[]),Array.isArray(t)||lz(t)&&!n)for(let a=0;a<t.length;++a)az(t[a],e,n);else e.push(t);return e}function rz(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function sz(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function oz(t){return t%1===0}function iz(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function cz(t,e){const n=e.length;return tz((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(t))),tz(t.every((t=>oz(t))),(()=>"All values in axis param must be integers but "+"got axis ".concat(t))),t.map((t=>t<0?n+t:t))}function lz(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function uz(t){return"string"===typeof t||t instanceof String}function hz(t){return Array.isArray(t)?hz(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":"number"===typeof t?"float32":uz(t)?"string":function(t){return"boolean"===typeof t}(t)?"bool":"float32"}function dz(t){return!!(t&&t.constructor&&t.call&&t.apply)}function pz(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let a=e-3;a>=0;--a)n[a]=n[a+1]*t[a+1];return n}function fz(t,e,n){const a=new Array;if(1===e.length){const r=e[0];for(let e=0;e<r;e++)a[e]=n[t+e]}else{const r=e[0],s=e.slice(1),o=s.reduce(((t,e)=>t*e));for(let e=0;e<r;e++)a[e]=fz(t+e*o,s,n)}return a}function mz(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error("[".concat(t,"] does not match the input size ").concat(e.length,"."));return fz(0,t,e)}function gz(t,e){const n=yz(t,e);for(let a=0;a<n.length;a++)n[a]=1;return n}function yz(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type ".concat(e))}function bz(t){t.forEach((e=>{tz(Number.isInteger(e)&&e>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(t,"].")))}))}function xz(t){return t&&t.then&&"function"===typeof t.then}const vz="tfjsflags";class wz{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,".")),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn("Setting feature override from URL ".concat(t,": ").concat(e,".")),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(xz(e))throw new Error("Flag ".concat(t," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error("Cannot set flag ".concat(t," as it has not been registered."));this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error("Cannot evaluate flag '".concat(t,"': no evaluation function found."));return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(t){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,a[0],a[1]),a.join("=")})),e}(this.global.location.search);if(vz in t){t[vz].split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if("".concat(+e)===e)return+e;throw new Error("Could not parse value flag value ".concat(e," for flag ").concat(t,"."))}(e,n)}))}}}function kz(){return Sz}let Iz,Sz=null;function Nz(){if(null==Iz){let t;if("undefined"!==typeof window)t=window;else if("undefined"!==typeof n.g)t=n.g;else if("undefined"!==typeof process)t=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");t=self}Iz=t}return Iz}function Tz(t,e){const n=function(){const t=Nz();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const a=e();return n.set(t,a),n.get(t)}}const Ez="Acos",Cz="Acosh",Rz="Add",_z="AddN",Az="ArgMax",Dz="ArgMin",Fz="Asin",Oz="Asinh",Mz="Atan",Lz="Atanh",zz="Atan2",Pz="AvgPool",Bz="AvgPool3D",Wz="BatchMatMul",Uz="BatchToSpaceND",Vz="Cast",Gz="Ceil",Hz="ClipByValue",jz="ComplexAbs",Kz="Concat",qz="Conv2D",Xz="Conv2DBackpropInput",Yz="Conv3D",Qz="Cosh",Jz="Cumsum",Zz="DepthwiseConv2dNative",$z="Dilation2D",tP="RealDiv",eP="ExpandDims",nP="Expm1",aP="Fill",rP="Floor",sP="FloorDiv",oP="FusedBatchNorm",iP="GatherV2",cP="GreaterEqual",lP="Identity",uP="IsFinite",hP="IsInf",dP="IsNan",pP="LeakyRelu",fP="Log1p",mP="Maximum",gP="MaxPool",yP="MaxPool3D",bP="Mean",xP="Minimum",vP="MirrorPad",wP="Multiply",kP="OnesLike",IP="OneHot",SP="Pack",NP="PadV2",TP="Prelu",EP="Range",CP="Reciprocal",RP="Relu",_P="Reshape",AP="ResizeNearestNeighbor",DP="ResizeBilinear",FP="Relu6",OP="Reverse",MP="Round",LP="Rsqrt",zP="Select",PP="Selu",BP="Slice",WP="Sinh",UP="Sign",VP="Sigmoid",GP="Softplus",HP="Sqrt",jP="SpaceToBatchND",KP="SplitV",qP="Softmax",XP="SquaredDifference",YP="Tanh",QP="Tile",JP="Transpose",ZP="Unpack",$P="UnsortedSegmentSum",tB="ZerosLike",eB="Step",nB="FromPixels",aB="_FusedMatMul",rB="FusedConv2D",sB="FusedDepthwiseConv2D",oB=Tz("kernelRegistry",(()=>new Map)),iB=Tz("gradRegistry",(()=>new Map));function cB(t,e){const n=dB(t,e);return oB.get(n)}function lB(t){return iB.get(t)}function uB(t){const e=oB.entries(),n=[];for(;;){const{done:a,value:r}=e.next();if(a)break;const[s,o]=r,[i]=s.split("_");i===t&&n.push(o)}return n}function hB(t){const{kernelName:e}=t;iB.has(e)&&kz().getBool("DEBUG")&&console.warn("Overriding the gradient for '".concat(e,"'")),iB.set(e,t)}function dB(t,e){return"".concat(e,"_").concat(t)}class pB{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new mB)}profileKernel(t,e,n){let a;const r=this.backendTimer.time((()=>{a=n()}));if(kz().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let s=0;s<a.length;s++){const e=a[s];e.data().then((n=>{fB(n,e.dtype,t)}))}return{kernelName:t,outputs:a,inputs:e,timeMs:r.then((t=>t.kernelMs)),extraInfo:r.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:a,inputs:r,extraInfo:s}=t;n.forEach((t=>{Promise.all([t.data(),a,s]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],r,n[2])}))}))}}function fB(t,e,n){if("float32"!==e)return!1;for(let a=0;a<t.length;a++){const e=t[a];if(isNaN(e)||!isFinite(e))return console.warn("Found ".concat(e," in the result of '").concat(n,"'")),!0}return!1}class mB{logKernelProfile(t,e,n,a,r,s){const o="number"===typeof a?iz("".concat(a,"ms"),9):a.error,i=iz(t,25),c=e.rank,l=e.size,u=iz(e.shape.toString(),14);let h="";for(const d in r){const t=r[d];if(null!=t){const n=t.shape||e.shape,a=n.length;h+="".concat(d,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(u,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const gB=20,yB=3,bB=7;function xB(t,e,n,a){const r=pz(e),s=function(t,e,n,a){const r=rz(e),s=a[a.length-1],o=new Array(s).fill(0),i=e.length,c="complex64"===n?IB(t):t;if(i>1)for(let l=0;l<r/s;l++){const t=l*s;for(let e=0;e<s;e++)o[e]=Math.max(o[e],vB(c[t+e],0,n).length)}return o}(t,e,n,r),o=e.length,i=kB(t,e,n,r,s),c=["Tensor"];return a&&(c.push("  dtype: ".concat(n)),c.push("  rank: ".concat(o)),c.push("  shape: [".concat(e,"]")),c.push("  values:")),c.push(i.map((t=>"    "+t)).join("\n")),c.join("\n")}function vB(t,e,n){let a;return a=Array.isArray(t)?"".concat(parseFloat(t[0].toFixed(bB))," + ")+"".concat(parseFloat(t[1].toFixed(bB)),"j"):uz(t)?"'".concat(t,"'"):"bool"===n?wB(t):parseFloat(t.toFixed(bB)).toString(),iz(a,e)}function wB(t){return 0===t?"false":"true"}function kB(t,e,n,a,r){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const o="complex64"===n?2:1,i=e[0],c=e.length;if(0===c){if("complex64"===n){return[vB(IB(t)[0],0,n)]}return"bool"===n?[wB(t[0])]:[t[0].toString()]}if(1===c){if(i>gB){const e=yB*o;let a=Array.from(t.slice(0,e)),s=Array.from(t.slice((i-yB)*o,i*o));return"complex64"===n&&(a=IB(a),s=IB(s)),["["+a.map(((t,e)=>vB(t,r[e],n))).join(", ")+", ..., "+s.map(((t,e)=>vB(t,r[i-yB+e],n))).join(", ")+"]"]}return["["+("complex64"===n?IB(t):Array.from(t)).map(((t,e)=>vB(t,r[e],n))).join(", ")+"]"]}const l=e.slice(1),u=a.slice(1),h=a[0]*o,d=[];if(i>gB){for(let e=0;e<yB;e++){const a=e*h,s=a+h;d.push(...kB(t.slice(a,s),l,n,u,r,!1))}d.push("...");for(let e=i-yB;e<i;e++){const a=e*h,s=a+h;d.push(...kB(t.slice(a,s),l,n,u,r,e===i-1))}}else for(let m=0;m<i;m++){const e=m*h,a=e+h;d.push(...kB(t.slice(e,a),l,n,u,r,m===i-1))}const p=2===c?",":"";d[0]="["+d[0]+p;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<c;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function IB(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}function SB(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=az(t)),kz().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const a=t[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(e," being uploaded contains ").concat(a,"."))}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type ".concat(e))}function NB(){return kz().platform.now()}function TB(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",kz().platform.encode(t,e)}function EB(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",kz().platform.decode(t,e)}class CB{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=rz(t),null!=n){const t=n.length;tz(t===this.size,(()=>"Length of values '".concat(t,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||function(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type ".concat(t));n=new Array(e)}return n}(e,this.size),this.strides=pz(t)}set(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),tz(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const r=this.locToIndex(n);this.values[r]=t}get(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];0===e.length&&(e=[0]);let a=0;for(const s of e){if(s<0||s>=this.shape[a]){const t="Requested out of range element at ".concat(e,". ")+"  Buffer shape=".concat(this.shape);throw new Error(t)}a++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return RB().makeTensor(this.values,this.shape,this.dtype)}}let RB=null,_B=null,AB=null;class DB{constructor(t,e,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=rz(t),this.strides=pz(t),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return _B.buffer(this.shape,this.dtype,t)}bufferSync(){return _B.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return mz(this.shape,t)}arraySync(){return mz(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=RB().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map((t=>EB(t)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=RB().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>EB(t)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await RB().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(RB().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return _B.print(this,t)}clone(){return this.throwIfDisposed(),_B.clone(this)}toString(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return xB(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),_B.cast(this,t)}variable(){let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),RB().makeVariable(this,t,e,n)}}Object.defineProperty(DB,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class FB extends DB{constructor(t,e,n,a){super(t.shape,t.dtype,t.dataId,a),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(t.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!sz(t.shape,this.shape))throw new Error("shape of the new value (".concat(t.shape,") and ")+"previous value (".concat(this.shape,") must match"));RB().disposeTensor(this),this.dataId=t.dataId,RB().incRef(this,null)}dispose(){RB().disposeVariable(this),this.isDisposedInternal=!0}}var OB,MB,LB,zB,PB;Object.defineProperty(FB,Symbol.hasInstance,{value:t=>t instanceof DB&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(OB||(OB={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(MB||(MB={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(LB||(LB={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(zB||(zB={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(PB||(PB={}));const BB={float32:zB,int32:MB,bool:LB,complex64:PB};function WB(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error("Can not upcast ".concat(t," with ").concat(e))}return BB[t][e]}function UB(t,e){if(t.dtype===e.dtype)return[t,e];const n=WB(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function VB(t){const e=[];return GB(t,e,new Set),e}function GB(t,e,n){if(null==t)return;if(t instanceof DB)return void e.push(t);if(a=t,!Array.isArray(a)&&"object"!==typeof a)return;var a;const r=t;for(const s in r){const t=r[s];n.has(t)||(n.add(t),GB(t,e,n))}}class HB{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class jB{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new HB}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error("The highest priority backend '".concat(t,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return t in this.registryFactory?(console.warn("".concat(t," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error("Backend name '".concat(t,"' not found in registry"));if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new pB(this.backendInstance),!0}setupRegisteredKernels(){uB(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){uB(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error("Cannot initialize backend ".concat(t,", no registration found."));try{const n=e.factory();if(!n||n instanceof ZL||"function"!==typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,a=n.then((n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn("Initialization of backend ".concat(t," failed")),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(JX){return console.warn("Initialization of backend ".concat(t," failed")),console.warn(JX.stack||JX.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error("".concat(t," backend not found in registry"));this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),a=n.backend,r=this.readSync(e);a.disposeData(e),n.backend=t,t.move(e,r,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,a=null;if(null==e){if("function"!==typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!==typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=t}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(a){throw e(),a}}nextTensorId(){return jB.nextTensorId++}nextVariableId(){return jB.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e="float32",n={x:t},a={dtype:e};return qB.runKernelFunc((n=>n.cast(t,e)),n,null,Vz,a)}})),[],{}),e}runKernel(t,e,n,a,r){return this.runKernelFunc(null,e,null,t,n,a,r)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const a=this.backend.numDataIds();let r=0;n.forEach((t=>{r+="complex64"===t.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-e-r-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(t,"'"))}runKernelFunc(t,e,n,a,r,s,o){let i,c=[];const l=this.isTapeOn();null==a&&(a=null!=this.state.activeScope?this.state.activeScope.name:"");const u=this.state.numBytes,h=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const p=cB(a,this.backendName);let f,m;if(null!=p)d=()=>{const t=this.backend.numDataIds();f=p.kernelFunc({inputs:e,attrs:r,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(a,t,n);const i=n.map((t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:a}=t;return this.makeTensorFromDataId(e,n,a)}));if(l){let t=this.getTensorsForGradient(a,e,i);if(null==t){null==o&&(o=[]);const e=i.filter(((t,e)=>o[e]));t=(s||[]).slice().concat(e)}c=this.saveTensorsForBackwardMode(t)}return i};else{if(null==t)throw new Error("Error running ".concat(a,": Neither modular kernel nor forward func passed"));const e=t=>{l&&(c=t.map((t=>this.keep(this.clone(t)))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>t(this.backend,e)));const r=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(a,n,r),r}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(a,e,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),i=m.outputs):i=d()})),l&&this.addTapeNode(a,e,i,n,c,r),this.state.profiling&&this.state.activeProfile.kernels.push({name:a,bytesAdded:this.state.numBytes-u,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((t=>null!=e[t]?e[t].shape:null)),outputShapes:i.map((t=>t.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?i:i[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const a=lB(t);if(null!=a){const t=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(tz(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(e).map((t=>e[t]))):s=t.map((t=>e[t]));const o=n.filter(((t,e)=>r[e]));return s.concat(o)}return null}makeTensor(t,e,n,a){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=t;"string"===n&&uz(t[0])&&(r=t.map((t=>TB(t))));const s=a.write(r,e,n),o=new DB(e,n,s,this.nextTensorId());if(this.incRef(o,a),"string"===n){const t=this.state.tensorInfo.get(s),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(r);this.state.numBytes+=e-t.bytes,t.bytes=e}return o}makeTensorFromDataId(t,e,n,a){const r=new DB(e,n=n||"float32",t,this.nextTensorId());return this.incRef(r,a),r}makeVariable(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==t.dtype&&(t=t.cast(a));const r=new FB(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*function(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype ".concat(t))}(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof FB||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):(e.backend.decComplexRef(t.dataId),this.state.tensorInfo.get(t.dataId).refCount--)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,a,r,s){const o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},i=lB(t);null!=i&&(a=i.gradFunc),null!=a&&(o.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],a=yz(t.size,t.dtype);return this.makeTensor(a,t.shape,t.dtype)}return t})),a(t.length>1?t:t[0],r,s))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=VB(t),n=new Set(e.map((t=>t.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const t=this.state.activeScope.track[r];t.kept||n.has(t.id)||t.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==a.id||this.track(t)}))}gradients(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(tz(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));tz(r instanceof DB,(()=>"The result y returned by f() must be a tensor."));const s=function(t,e,n){const a={},r={};for(let c=0;c<e.length;c++)a[e[c].id]=!0;for(let c=0;c<t.length;c++){const n=t[c],s=n.inputs;for(const t in s){const o=s[t];let i=!1;for(let t=0;t<e.length;t++)if(a[o.id]){n.outputs.forEach((t=>a[t.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let c=t.length-1;c>=0;c--){const e=t[c],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(s[e.outputs[t].id]){for(const t in n)s[n[t].id]=!0,o[e.id]=!0;break}}const i=[];for(let c=0;c<t.length;c++){const e=t[c];if(r[e.id]&&o[e.id]){const t={};for(const r in e.inputs){const n=e.inputs[r];a[n.id]&&(t[r]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,i.push(n)}}return i}(this.state.activeTape,e,r);if(!a&&0===s.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[r.id]=null==n?function(t){const e=gz(rz(t),"float32");return qB.makeTensor(e,t,"float32")}(r.shape):n,function(t,e,n,a){for(let r=e.length-1;r>=0;r--){const s=e[r],o=[];if(s.outputs.forEach((e=>{const n=t[e.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const e in s.inputs){if(!(e in i))throw new Error("Cannot backprop through input ".concat(e,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[e]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(e," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const o=s.inputs[e];if(!sz(r.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(e,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==t[o.id])t[o.id]=r;else{const e=t[o.id];t[o.id]=a(e,r),e.dispose()}}}}(t,s,(t=>this.tidy(t)),XB);const a=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(t){var e=this;return tz(dz(t),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let s;tz(a.every((t=>t instanceof DB)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};return a.forEach(((t,e)=>{o[e]=t})),e.runKernelFunc(((e,n)=>(s=t(...a,n),tz(s.value instanceof DB,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),tz(dz(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value)),o,((t,e)=>{const n=s.gradFunc(t,e),r=Array.isArray(n)?n:[n];tz(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),tz(r.every((t=>t instanceof DB)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return r.forEach(((t,e)=>{o[e]=()=>t})),o}))}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=NB(),n=await this.backend.time(t);return n.wallMs=NB()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new HB;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function KB(){const t=Nz();if(null==t._tfengine){const e=new wz(t);t._tfengine=new jB(e)}var e;return e=t._tfengine.ENV,Sz=e,function(t){RB=t}((()=>t._tfengine)),t._tfengine}jB.nextTensorId=0,jB.nextVariableId=0;const qB=KB();function XB(t,e){const n={a:t,b:e};return qB.runKernel(Rz,n)}const YB=kz();function QB(t,e){let n=t;if(lz(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const a=[];for(;Array.isArray(n)||lz(n)&&"string"!==e;)a.push(n.length),n=n[0];return Array.isArray(t)&&kz().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&JB(t,a,[]),a}function JB(t,e,n){if(n=n||[],!Array.isArray(t)&&!lz(t))return void tz(0===e.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(e[0]," elements")));tz(e.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(t.length," elements"))),tz(t.length===e[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(e[0]," ")+"elements, but has ".concat(t.length," elements")));const a=e.slice(1);for(let r=0;r<t.length;++r)JB(t[r],a,n.concat(r))}function ZB(t,e,n,a){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(t," tensor, but got ").concat(e," tensor"))}}function $B(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(t instanceof DB)return ZB(a,t.dtype,e,n),t;let r=hz(t);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),ZB(a,r,e,n),null==t||!lz(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t){const a=null==t?"null":t.constructor.name;throw new Error("Argument '".concat(e,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const s=QB(t,r);lz(t)||Array.isArray(t)||(t=[t]);const o="string"!==r?SB(t,r):az(t,[],!0);return qB.makeTensor(o,s,r)}function tW(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(t))throw new Error("Argument ".concat(e," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return t.map(((t,r)=>$B(t,"".concat(e,"[").concat(r,"]"),n,a)))}YB.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),YB.registerFlag("IS_BROWSER",(()=>"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope)),YB.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),YB.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),YB.registerFlag("PROD",(()=>!1)),YB.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>YB.getBool("DEBUG"))),YB.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),YB.registerFlag("IS_TEST",(()=>!1)),YB.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0));function eW(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(e.length," keys."));let n=e[0];const a=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=function(){qB.startScope(n);try{const t=a(...arguments);return xz(t)&&console.error("Cannot return a Promise inside of tidy."),qB.endScope(t),t}catch(t){throw qB.endScope(null),t}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const nW=eW({complex_:function(t,e){const n=$B(t,"real","complex"),a=$B(e,"imag","complex");ez(n.shape,a.shape,"real and imag shapes, ".concat(n.shape," and ").concat(a.shape,", ")+"must match in call to tf.complex().");const r={real:n,imag:a};return qB.runKernel("Complex",r)}});function aW(t,e,n,a){if(null==a&&(a=hz(t)),"complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!lz(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){bz(e);const t=rz(e),a=rz(n);tz(t===a,(()=>"Based on the provided shape, [".concat(e,"], the tensor should have ")+"".concat(t," values but has ").concat(a)));for(let r=0;r<n.length;++r){const t=n[r],a=r!==n.length-1||t!==rz(e.slice(r));tz(n[r]===e[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(e,"). ")))}}return lz(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==a?SB(t,a):az(t,[],!0),qB.makeTensor(t,e,a)}function rW(t,e,n){return aW(t,e,QB(t,n),n)}const sW={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},oW=4;function iW(t,e){const n={};let a,r=0;for(const s of e){const e=s.name,o=s.dtype,i=s.shape,c=rz(i);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error("Weight ".concat(s.name," with quantization ").concat(n.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==n.dtype)throw new Error("Weight ".concat(s.name," has unknown ")+"quantization dtype ".concat(n.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==o)throw new Error("Weight ".concat(s.name," is quantized with ").concat(n.dtype," ")+"which only supports weights of type float32 not ".concat(o,"."))}const i=sW[n.dtype],u=t.slice(r,r+c*i),h="uint8"===n.dtype?new Uint8Array(u):new Uint16Array(u);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error("Unsupported quantization type ".concat(n.dtype," ")+"for weight type float32.");void 0===a&&(a=dW()),l=a(h)}else{if("int32"!==o)throw new Error("Unsupported dtype in weight '".concat(e,"': ").concat(o));if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error("Unsupported quantization type ".concat(n.dtype," ")+"for weight type int32.");l=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=Math.round(e*n.scale+n.min)}}r+=c*i}else if("string"===o){const e=rz(s.shape);l=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(r,r+oW))[0];r+=oW;const n=new Uint8Array(t.slice(r,r+e));l.push(n),r+=e}}else{const a=sW[o],s=t.slice(r,r+c*a);if("float32"===o)l=new Float32Array(s);else if("int32"===o)l=new Int32Array(s);else if("bool"===o)l=new Uint8Array(s);else{if("complex64"!==o)throw new Error("Unsupported dtype in weight '".concat(e,"': ").concat(o));{l=new Float32Array(s);const t=new Float32Array(l.length/2),a=new Float32Array(l.length/2);for(let e=0;e<t.length;e++)t[e]=l[2*e],a[e]=l[2*e+1];const r=rW(t,i,"float32"),o=rW(a,i,"float32");n[e]=nW(r,o),r.dispose(),o.dispose()}}r+=c*a}"complex64"!==o&&(n[e]=rW(l,i,o))}return n}const cW="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function lW(t){return cW?Buffer.byteLength(t):new Blob([t]).size}function uW(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let a=0;return t.forEach((t=>{n.set(new Uint8Array(t),a),a+=t.byteLength})),n.buffer}function hW(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:lW(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:lW(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function dW(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0===(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let o=0;o<a.length;o++){const r=a[o],i=t[n[r>>10]+(1023&r)]+e[r>>10];s[o]=i}return new Float32Array(r)}}class pW{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==pW.instance&&(pW.instance=new pW),pW.instance}static registerSaveRouter(t){pW.getInstance().saveRouters.push(t)}static registerLoadRouter(t){pW.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return pW.getHandlers(t,"save")}static getLoadHandlers(t,e){return pW.getHandlers(t,"load",e)}static getHandlers(t,e,n){const a=[];return("load"===e?pW.getInstance().loadRouters:pW.getInstance().saveRouters).forEach((e=>{const r=e(t,n);null!==r&&a.push(r)})),a}}const fW="tensorflowjs",mW="models_store",gW="model_info_store";function yW(){if(!kz().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"===typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function bW(t){const e=t.result;e.createObjectStore(mW,{keyPath:"modelPath"}),e.createObjectStore(gW,{keyPath:"modelPath"})}class xW{constructor(t){if(this.indexedDB=yW(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const a=this.indexedDB.open(fW,1);a.onupgradeneeded=()=>bW(a),a.onsuccess=()=>{const r=a.result;if(null==e){const e=r.transaction(mW,"readonly"),a=e.objectStore(mW).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));t(a.result.modelArtifacts)},a.onerror=t=>(r.close(),n(a.error)),e.oncomplete=()=>r.close()}else{const a=hW(e),s=r.transaction(gW,"readwrite");let o=s.objectStore(gW);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:a});let c;i.onsuccess=()=>{c=r.transaction(mW,"readwrite");const i=c.objectStore(mW).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a});i.onsuccess=()=>t({modelArtifactsInfo:a}),i.onerror=t=>{o=s.objectStore(gW);const e=o.delete(this.modelPath);e.onsuccess=()=>(r.close(),n(i.error)),e.onerror=t=>(r.close(),n(i.error))}},i.onerror=t=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=t=>n(a.error)}))}}xW.URL_SCHEME="indexeddb://";const vW=t=>{return kz().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(xW.URL_SCHEME)?(e=t.slice(xW.URL_SCHEME.length),new xW(e)):null;var e};pW.registerSaveRouter(vW),pW.registerLoadRouter(vW);class wW{constructor(){this.indexedDB=yW()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(fW,1);n.onupgradeneeded=()=>bW(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(gW,"readonly"),s=r.objectStore(gW).getAll();s.onsuccess=()=>{const e={};for(const t of s.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},s.onerror=t=>(a.close(),e(s.error)),r.oncomplete=()=>a.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(xW.URL_SCHEME)?e.slice(xW.URL_SCHEME.length):e,new Promise(((e,n)=>{const a=this.indexedDB.open(fW,1);a.onupgradeneeded=()=>bW(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(gW,"readwrite"),o=s.objectStore(gW),i=o.get(t);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(t,"' ")+"in IndexedDB."));{const a=o.delete(t),s=()=>{c=r.transaction(mW,"readwrite");const a=c.objectStore(mW).delete(t);a.onsuccess=()=>e(i.result.modelArtifactsInfo),a.onerror=t=>n(i.error)};a.onsuccess=s,a.onerror=t=>(s(),r.close(),n(i.error))}},i.onerror=t=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=t=>n(a.error)}))}}const kW="/",IW="tensorflowjs_models",SW="info",NW="model_topology",TW="weight_specs",EW="weight_data",CW="model_metadata";function RW(t){return{info:[IW,t,SW].join(kW),topology:[IW,t,NW].join(kW),weightSpecs:[IW,t,TW].join(kW),weightData:[IW,t,EW].join(kW),modelMetadata:[IW,t,CW].join(kW)}}function _W(t){const e=t.split(kW);if(e.length<3)throw new Error("Invalid key format: ".concat(t));return e.slice(1,e.length-1).join(kW)}class AW{constructor(t){if(!kz().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=RW(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),a=hW(t);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(cW)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let a=0,r=e.length;a<r;a++)n+=String.fromCharCode(e[a]);return btoa(n)}(t.weightData));const r={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:a}}catch(JX){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(a.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(a.weightSpecsBytes,", ")+"weightDataBytes=".concat(a.weightDataBytes,"."))}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");e.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");e.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const t=JSON.parse(r);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return e.weightData=function(t){if(cW){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let a=0;a<e.length;++a)n.set([e.charCodeAt(a)],a);return n.buffer}(s),e}}AW.URL_SCHEME="localstorage://";const DW=t=>{return kz().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(AW.URL_SCHEME)?(e=t.slice(AW.URL_SCHEME.length),new AW(e)):null;var e};pW.registerSaveRouter(DW),pW.registerLoadRouter(DW);class FW{constructor(){tz(kz().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),tz("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=IW+kW,n=kW+SW;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(e)&&r.endsWith(n)){t[_W(r)]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(t){var e;const n=RW(t=(e=t).startsWith(AW.URL_SCHEME)?e.slice(AW.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(t,"'"));const a=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),a}}const OW="://";class MW{constructor(){this.managers={}}static getInstance(){return null==MW.instance&&(MW.instance=new MW),MW.instance}static registerManager(t,e){tz(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith(OW)&&(t=t.slice(0,t.indexOf(OW))),tz(t.length>0,(()=>"scheme must not be an empty string."));const n=MW.getInstance();tz(null==n.managers[t],(()=>"A model store manager is already registered for scheme '".concat(t,"'."))),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error("Cannot find model manager for scheme '".concat(t,"'"));return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class LW{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got ".concat(e));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(kz().get("IS_BROWSER")){kz().setPlatform("browser",new LW);try{MW.registerManager(AW.URL_SCHEME,new FW)}catch(JX){}try{MW.registerManager(xW.URL_SCHEME,new wW)}catch(JX){}}const zW=()=>n(410);let PW;class BW{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=kz().global.fetch?kz().global.fetch(t,e):(null==PW&&(PW=zW()),PW(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(e));return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}function WW(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return e=e||"float32",bz(t),new CB(t,e,n)}kz().get("IS_NODE")&&kz().setPlatform("node",new BW);const UW=eW({cast_:function(t,e){const n=$B(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error("Failed to cast to unknown dtype ".concat(e));if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},r={dtype:e};return qB.runKernel(Vz,a,r)}});const VW=eW({clone_:function(t){const e={x:$B(t,"x","clone","string_or_numeric")};return qB.runKernel(lP,e)}});KB();const GW={buffer:WW,cast:UW,clone:VW,print:function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(t.toString(e))}};!function(t){_B=t}(GW);function HW(t){return new Promise((t=>setTimeout(t))).then(t)}class jW{constructor(t){if(!kz().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(jW.URL_SCHEME)&&(t=t.slice(jW.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],a={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(a.signature=t.signature),null!=t.userDefinedMetadata&&(a.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(a.modelInitializer=t.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=r,await HW((()=>s.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await HW((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:hW(t)}}}}jW.URL_SCHEME="downloads://";function KW(t,e,n,a){!function(t){tz(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){tz(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(t))),tz(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(e))),tz(e>=t,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(t," and endFraction ")+"".concat(e)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(t.map((s=>(s.then((s=>{const o=n+ ++r/t.length*(a-n);return e(o),s})),s))))}async function qW(t,e){null==e&&(e={});const n=null==e.fetchFunc?kz().platform.fetch:e.fetchFunc,a=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),r=(null==e.onProgress?await Promise.all(a):await KW(a,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(r):await KW(r,e.onProgress,.5,1)}pW.registerSaveRouter((t=>kz().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(jW.URL_SCHEME)?function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new jW(t)}(t.slice(jW.URL_SCHEME.length)):null));class XW{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(tz("function"===typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=kz().platform.fetch,tz(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&tz(2===t.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(t.length,")."))),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],a={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(a.signature=t.signature),null!=t.userDefinedMetadata&&(a.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(a.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:hW(t),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(r.status,"."))}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(t.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let e;try{e=await t.json()}catch(p){let t="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,a=e.weightsManifest,r=e.generatedBy,s=e.convertedBy,o=e.format,i=e.signature,c=e.userDefinedMetadata;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");let l,u;if(null!=a){const t=await this.loadWeights(a);[l,u]=t}const h={modelTopology:n,weightSpecs:l,weightData:u,generatedBy:r,convertedBy:s,format:o};null!=i&&(h.signature=i),null!=c&&(h.userDefinedMetadata=c);const d=e.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),a=t.substring(0,e),r=n>e?t.substring(n):"";return[a+"/",r]}(e),r=this.weightPathPrefix||n,s=[];for(const c of t)s.push(...c.weights);const o=[],i=[];for(const c of t)for(const t of c.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(t)):o.push(r+t+a);this.weightUrlConverter&&o.push(...await Promise.all(i));return[s,uW(await qW(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function YW(t){return null!=t.match(XW.URL_SCHEME_REGEX)}XW.URL_SCHEME_REGEX=/^https?:\/\//;const QW=(t,e)=>{if("undefined"===typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>YW(t))):YW(t),n)return JW(t,e)}return null};function JW(t,e){return new XW(t,e)}function ZW(t,e){return JW(t,e)}pW.registerSaveRouter(QW),pW.registerLoadRouter(QW);let $W;const tU=eW({fromPixels_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,o=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&t instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&t instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement)s=!0;else if(null!=t.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(t.constructor.name));i=!0}if(r){const e=2;if(r&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=cB(nB,qB.backendName)){const n={pixels:t},a={numChannels:e};return qB.runKernel(nB,n,a)}const[c,l]=r?[t.videoWidth,t.videoHeight]:[t.width,t.height];let u,h;if(o?u=t.getContext("2d").getImageData(0,0,c,l).data:a||n?u=t.data:(s||r||i)&&(null==$W&&($W=document.createElement("canvas").getContext("2d")),$W.canvas.width=c,$W.canvas.height=l,$W.drawImage(t,0,0,c,l),u=$W.getImageData(0,0,c,l).data),4===e)h=new Int32Array(u);else{const t=c*l;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=u[4*n+t]}return function(t,e,n){if(nz(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const a=QB(t,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return aW(t,e,a,n)}(h,[l,c,e],"int32")}});const eU=eW({add_:function(t,e){let n=$B(t,"a","add"),a=$B(e,"b","add");[n,a]=UB(n,a);const r={a:n,b:a};return qB.runKernel(Rz,r)}});const nU=eW({concat_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;tz(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=tW(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(t.dtype,". "))})),1===n.length)return VW(n[0]);const a=n,r={axis:e};return qB.runKernel(Kz,a,r)}});const aU=eW({concat2d_:function(t,e){return nU(t,e)}});const rU=eW({floorDiv_:function(t,e){let n=$B(t,"a","floorDiv"),a=$B(e,"b","floorDiv");[n,a]=UB(n,a);const r={a:n,b:a};return qB.runKernel(sP,r)}});const sU=eW({div_:function(t,e){let n=$B(t,"a","div"),a=$B(e,"b","div");if([n,a]=UB(n,a),"int32"===n.dtype&&"int32"===a.dtype)return rU(n,a);const r={a:n,b:a};return qB.runKernel(tP,r,{})}});const oU=eW({mul_:function(t,e){let n=$B(t,"a","mul"),a=$B(e,"b","mul");[n,a]=UB(n,a);const r={a:n,b:a};return qB.runKernel(wP,r)}});const iU=eW({reshape_:function(t,e){const n={x:$B(t,"x","reshape","string_or_numeric")},a={shape:e};return qB.runKernel(_P,n,a)}});function cU(t,e){if((lz(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&lz(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return aW(t,[],[],e)}const lU=eW({sigmoid_:function(t){const e={x:$B(t,"x","sigmoid")};return qB.runKernel(VP,e)}});const uU=eW({slice_:function(t,e,n){const a=$B(t,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const r={x:a},s={begin:e,size:n};return qB.runKernel(BP,r,s)}});const hU=eW({stack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=tW(t,"tensors","stack","string_or_numeric");tz(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&tz(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,r={axis:e};return qB.runKernel(SP,a,r)}});const dU=eW({sub_:function(t,e){let n=$B(t,"a","sub"),a=$B(e,"b","sub");[n,a]=UB(n,a);const r={a:n,b:a};return qB.runKernel("Sub",r)}});function pU(t,e){nz(t);const n=QB(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return aW(t,null,n,e)}function fU(t,e,n){if(nz(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const a=QB(t,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return aW(t,e,a,n)}const mU=eW({unstack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=$B(t,"x","unstack","string_or_numeric");tz(e>=-n.shape.length&&e<n.shape.length,(()=>"Axis = ".concat(e," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const a={value:n},r={axis:e};return qB.runKernel(ZP,a,r)}});const gU=eW({imag_:function(t){const e={input:$B(t,"input","imag")};return qB.runKernel("Imag",e)}});const yU=eW({real_:function(t){const e={input:$B(t,"input","real")};return qB.runKernel("Real",e)}});const bU=eW({split_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a={x:$B(t,"x","split")},r={numOrSizeSplits:e,axis:n};return qB.runKernel(KP,a,r)}});function xU(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===e){const e=xU(t,"float32"),n=xU(t,"float32");return nW(e,n)}const n=yz(rz(t),e);return qB.makeTensor(n,t,e)}const vU=eW({zerosLike_:function(t){const e={x:$B(t,"x","zerosLike")};return qB.runKernel(tB,e)}});const wU=eW({fft_:function(t){tz("complex64"===t.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(t.dtype,".")));const e={input:t};return qB.runKernel("FFT",e)}});const kU=eW({rfft_:function(t,e){tz("float32"===t.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(t.dtype)));let n=t.shape[t.shape.length-1];const a=t.size/n;let r;if(null!=e&&e<n){const a=t.shape.map((t=>0)),s=t.shape.map((t=>t));s[t.shape.length-1]=e,r=uU(t,a,s),n=e}else if(null!=e&&e>n){const a=t.shape.map((t=>t));a[t.shape.length-1]=e-n,r=nU([t,xU(a)],t.shape.length-1),n=e}else r=t;const s=vU(r),o=iU(nW(r,s),[a,n]),i=wU(o),c=Math.floor(n/2)+1,l=yU(i),u=gU(i),h=bU(l,[c,n-c],l.shape.length-1),d=bU(u,[c,n-c],u.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=c,iU(nW(h[0],d[0]),p)}});const IU=eW({ifft_:function(t){tz("complex64"===t.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(t.dtype,".")));const e={input:t};return qB.runKernel("IFFT",e)}});const SU=eW({reverse_:function(t,e){const n={x:$B(t,"x","reverse")},a={dims:e};return qB.runKernel(OP,n,a)}});const NU=eW({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let a;if(e<=2){const r=iU(t,[n,e]);a=IU(r)}else{const r=[n,2*(e-1)],s=iU(yU(t),[n,e]),o=iU(gU(t),[n,e]),i=SU(uU(s,[0,1],[n,e-2]),1),c=oU(SU(uU(o,[0,1],[n,e-2]),1),cU(-1)),l=nU([s,i],1),u=nU([o,c],1),h=iU(nW(l,u),[r[0],r[1]]);a=IU(h)}if(a=yU(a),3===t.rank&&0!==t.shape[0]){const e=a,n=t.shape[0];a=iU(a,[n,a.shape[0]/n,a.shape[1]]),e.dispose()}return a}});function TU(t,e,n){const a=1-t%2,r=new Float32Array(t);for(let s=0;s<t;++s){const o=2*Math.PI*s/(t+a-1);r[s]=e-n*Math.cos(o)}return pU(r,"float32")}eW({hammingWindow_:function(t){return TU(t,.54,.46)}});const EU=eW({hannWindow_:function(t){return TU(t,.5,.5)}});function CU(t,e,n){const a={shape:t,value:e,dtype:n};return qB.runKernel(aP,{},a)}const RU=eW({frame_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const o=[];for(;s+e<=t.size;)o.push(uU(t,s,e)),s+=n;if(a)for(;s<t.size;){const a=s+e-t.size,i=nU([uU(t,s,e-a),CU([a],r)]);o.push(i),s+=n}return 0===o.length?fU([],[0,e]):iU(nU(o),[o.length,e])}});eW({stft_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:EU;var s;null==a&&(s=e,a=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));const o=RU(t,e,n),i=oU(o,r(e)),c=[];for(let l=0;l<o.shape[0];l++)c.push(kU(uU(i,[l,0],[1,e]),a));return nU(c)}});const _U=eW({cropAndResize_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=$B(t,"image","cropAndResize"),i=$B(e,"boxes","cropAndResize","float32"),c=$B(n,"boxInd","cropAndResize","int32"),l=i.shape[0];tz(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),tz(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(l,",4] ")+"but had shape ".concat(i.shape,"."))),tz(1===c.rank&&c.shape[0]===l,(()=>"Error in cropAndResize: boxInd must be have size [".concat(l,"] ")+"but had shape ".concat(i.shape,"."))),tz(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),tz(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),tz("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const u={image:o,boxes:i,boxInd:c},h={method:r,extrapolationValue:s,cropSize:a};return qB.runKernel("CropAndResize",u,h)}});const AU=eW({flipLeftRight_:function(t){const e=$B(t,"image","flipLeftRight","float32");tz(4===e.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(e.rank,".")));const n={image:e};return qB.runKernel("FlipLeftRight",n,{})}});const DU=eW({rotateWithOffset_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=$B(t,"image","rotateWithOffset","float32");tz(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const s={image:r},o={radians:e,fillValue:n,center:a};return qB.runKernel("RotateWithOffset",s,o)}});function FU(t,e,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=t.shape[0];return n=Math.min(n,o),tz(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),tz(2===t.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(t.rank,"'"))),tz(4===t.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(t.shape[1]))),tz(1===e.rank,(()=>"scores must be a 1D tensor")),tz(e.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(e.shape[0]))),tz(0<=s&&s<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const OU=eW({nonMaxSuppression_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=$B(t,"boxes","nonMaxSuppression"),o=$B(e,"scores","nonMaxSuppression"),i=FU(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return qB.runKernel("NonMaxSuppressionV3",{boxes:s,scores:o},c)}});function MU(t,e,n){const a=function(t,e,n){return function(t,e,n){let a=0,r=t.length,s=0,o=!1;for(;a<r;){s=a+(r-a>>>1);const i=n(e,t[s]);i>0?a=s+1:(r=s,o=!i)}return o?a:-a-1}(t,e,n||LU)}(t,e,n),r=a<0?-(a+1):a;t.splice(r,0,e)}function LU(t,e){return t>e?1:t<e?-1:0}function zU(t,e,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const l=[];for(let g=0;g<e.length;g++)e[g]>r&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(WU);const u=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&l.length>0;){const e=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=e;if(n<r)break;let i=!1;for(let c=h.length-1;c>=o;--c){const n=PU(t,s,h[c]);if(n>=a){i=!0;break}if(e.score=e.score*BU(a,u,n),e.score<=r)break}e.suppressBeginIndex=h.length,i||(e.score===n?(h.push(s),d.push(e.score)):e.score>r&&MU(l,e,WU))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=d),c&&(m.validOutputs=p),m}function PU(t,e,n){const a=t.subarray(4*e,4*e+4),r=t.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-s)*(c-o),f=(h-l)*(d-u);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(o,u),y=Math.min(i,h),b=Math.min(c,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function BU(t,e,n){const a=Math.exp(e*n*n);return n<=t?a:0}function WU(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const UU=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=$B(t,"boxes","nonMaxSuppressionAsync"),o=$B(e,"scores","nonMaxSuppressionAsync"),i=FU(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([s.data(),o.data()]),l=c[0],u=c[1],{selectedIndices:h}=function(t,e,n,a,r){return zU(t,e,n,a,r,0)}(l,u,n,a,r);return s!==t&&s.dispose(),o!==e&&o.dispose(),pU(h,"int32")};const VU=eW({nonMaxSuppressionWithScore_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=$B(t,"boxes","nonMaxSuppression"),i=$B(e,"scores","nonMaxSuppression"),c=FU(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},h=qB.runKernel("NonMaxSuppressionV5",l,u);return{selectedIndices:h[0],selectedScores:h[1]}}});const GU=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=$B(t,"boxes","nonMaxSuppressionAsync"),i=$B(e,"scores","nonMaxSuppressionAsync"),c=FU(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=function(t,e,n,a,r,s){return zU(t,e,n,a,r,s,!0)}(u,h,n,a,r,s);return o!==t&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:pU(d,"int32"),selectedScores:pU(p)}};const HU=eW({nonMaxSuppressionPadded_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=$B(t,"boxes","nonMaxSuppression"),i=$B(e,"scores","nonMaxSuppression"),c=FU(o,i,n,a,r,null),l={boxes:o,scores:i},u={maxOutputSize:c.maxOutputSize,iouThreshold:c.iouThreshold,scoreThreshold:c.scoreThreshold,padToMaxOutputSize:s},h=qB.runKernel("NonMaxSuppressionV4",l,u);return{selectedIndices:h[0],validOutputs:h[1]}}});const jU=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=$B(t,"boxes","nonMaxSuppressionAsync"),i=$B(e,"scores","nonMaxSuppressionAsync"),c=FU(o,i,n,a,r,null),l=c.maxOutputSize,u=c.iouThreshold,h=c.scoreThreshold,[d,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=function(t,e,n,a,r,s){return zU(t,e,n,a,r,0,!1,s,!0)}(d,p,l,u,h,s);return o!==t&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:pU(f,"int32"),validOutputs:cU(m,"int32")}};const KU=eW({resizeBilinear_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=$B(t,"images","resizeBilinear");tz(3===r.rank||4===r.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),tz(2===e.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(e,"."))),tz(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=iU(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=e,i={images:s},c={alignCorners:n,halfPixelCenters:a,size:e},l=qB.runKernel(DP,i,c);return o?iU(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const qU=eW({resizeNearestNeighbor_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=$B(t,"images","resizeNearestNeighbor");tz(3===r.rank||4===r.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),tz(2===e.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(e,"."))),tz("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),tz(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=iU(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=e,i={images:s},c={alignCorners:n,halfPixelCenters:a,size:e},l=qB.runKernel(AP,i,c);return o?iU(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});function XU(t,e){const n=[];for(let a=0;a<e.length;a++){const r=t[t.length-a-1],s=e.length-a-1,o=e[s];(null==r||1===r&&o>1)&&n.unshift(s)}return n}function YU(t,e){const n=[],a=Math.max(t.length,e.length);for(let r=0;r<a;r++){let a=t[t.length-r-1];null==a&&(a=1);let s=e[e.length-r-1];if(null==s&&(s=1),1===a)n.unshift(s);else if(1===s)n.unshift(a);else{if(a!==s){const n="Operands could not be broadcast together with shapes "+"".concat(t," and ").concat(e,".");throw Error(n)}n.unshift(a)}}return n}const QU=eW({greaterEqual_:function(t,e){let n=$B(t,"a","greaterEqual"),a=$B(e,"b","greaterEqual");[n,a]=UB(n,a),YU(n.shape,a.shape);const r={a:n,b:a};return qB.runKernel(cP,r)}});const JU=eW({lessEqual_:function(t,e){let n=$B(t,"a","lessEqual"),a=$B(e,"b","lessEqual");[n,a]=UB(n,a),YU(n.shape,a.shape);const r={a:n,b:a};return qB.runKernel("LessEqual",r)}});const ZU=eW({logicalAnd_:function(t,e){const n=$B(t,"a","logicalAnd","bool"),a=$B(e,"b","logicalAnd","bool");YU(n.shape,a.shape);const r={a:n,b:a};return qB.runKernel("LogicalAnd",r)}});function $U(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:t,stop:e,step:n,dtype:a};return qB.runKernel(EP,{},r)}const tV=eW({broadcastTo_:function(t,e){let n=$B(t,"broadcastTo","x");const a=n.shape;if(e.some((t=>!(t>0)||t%1!==0)))throw new Error("broadcastTo(): Invalid broadcast shape [".concat(e,"]."));if(e.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(e.length," < input.rank=").concat(n.rank,"."));if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=iU(n,t)}const r=n.shape,s=Array.from(e);for(let c=e.length-1;c>=0;c--)if(r[c]===e[c])s[c]=1;else if(1!==n.shape[c])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(e,"]."));if(0===s.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return VW(n);const o={x:n},i={reps:s};return qB.runKernel(QP,o,i)}});const eV=eW({where_:function(t,e,n){const a=$B(e,"a","where"),r=$B(n,"b","where"),s=$B(t,"condition","where","bool"),o=YU(a.shape,r.shape),i=tV(a,o),c=tV(r,o);1===s.rank&&tz(s.shape[0]===a.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==s.rank&&ez(s.shape,c.shape,"Error in where: ");const l={condition:s,t:i,e:c};return qB.runKernel(zP,l)}});eW({bandPart_:function(t,e,n){tz(e%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(e,"."))),tz(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,".")));const a=$B(t,"a","bandPart");tz(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[s,o]=a.shape.slice(-2);if(!(e<=s))throw new Error("bandPart(): numLower (".concat(e,")")+" must not be greater than the number of rows (".concat(s,")."));if(!(n<=o))throw new Error("bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."));e<0&&(e=s),n<0&&(n=o);const i=iU($U(0,s,1,"int32"),[-1,1]),c=$U(0,o,1,"int32"),l=dU(i,c),u=ZU(JU(l,cU(+e,"int32")),QU(l,cU(-n,"int32"))),h=xU([s,o],a.dtype);return iU(hU(mU(iU(a,[-1,s,o])).map((t=>eV(u,t,h)))),r)}});const nV=eW({abs_:function(t){const e=$B(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return qB.runKernel(jz,t)}{const t={x:e};return qB.runKernel("Abs",t)}}});function aV(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function rV(t,e){return function(t,e,n){const a=t.length+e.length,r=[];let s=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(t[s++]):r.push(e[o++]);return r}(t,e.map((t=>1)),e)}function sV(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}const oV=eW({max_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:$B(t,"x","max")},r={reductionIndices:e,keepDims:n};return qB.runKernel("Max",a,r)}});const iV=eW({min_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:$B(t,"x","min")},r={axis:e,keepDims:n};return qB.runKernel("Min",a,r)}});const cV=eW({pow_:function(t,e){let n=$B(t,"base","pow"),a=$B(e,"exp","pow");[n,a]=UB(n,a);const r={a:n,b:a};return qB.runKernel("Pow",r)}});const lV=eW({sqrt_:function(t){const e={x:$B(t,"x","sqrt")};return qB.runKernel(HP,e)}});const uV=eW({square_:function(t){const e=$B(t,"x","square");return qB.runKernel("Square",{x:e},{})}});const hV=eW({sum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=$B(t,"x","sum");"bool"===a.dtype&&(a=UW(a,"int32"));const r={x:a},s={axis:e,keepDims:n};return qB.runKernel("Sum",r,s)}});function dV(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===t.rank)return nV(t);if(1!==t.rank&&null===n)return dV(iU(t,[-1]),e,n);if(1===t.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===e)return hV(nV(t),n);if(e===1/0)return oV(nV(t),n);if(e===-1/0)return iV(nV(t),n);if("euclidean"===e||2===e)return lV(hV(cV(nV(t),cU(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}if(Array.isArray(n)&&2===n.length){if(1===e)return oV(hV(nV(t),n[0]),n[1]-1);if(e===1/0)return oV(hV(nV(t),n[1]),n[0]);if(e===-1/0)return iV(hV(nV(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return lV(hV(uV(t),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}throw new Error("Error in norm: invalid axis: ".concat(n))}const pV=eW({norm_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=dV(t=$B(t,"x","norm"),e,n);let s=r.shape;if(a){const e=cz(n,t.shape);s=rV(r.shape,e)}return iU(r,s)}});const fV=eW({squeeze_:function(t,e){const n=$B(t,"x","squeeze");return iU(n,function(t,e){const n=[],a=[],r=null!=e&&Array.isArray(e)&&0===e.length,s=null==e||r?null:cz(e,t).sort();let o=0;for(let i=0;i<t.length;++i){if(null!=s){if(s[o]===i&&1!==t[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(t[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===t[i]&&(n.push(t[i]),a.push(i)),s[o]<=i&&o++}1!==t[i]&&(n.push(t[i]),a.push(i))}return{newShape:n,keptDims:a}}(n.shape,e).newShape)}});eW({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,tz(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)tz(t[e].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(t[e].shape[0]," vs. ").concat(n,")")))}else e=!0,t=bU(t,t.shape[0],0).map((t=>fV(t,[0])));tz(t.length<=t[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(t.length,") exceeds ")+"number of dimensions (".concat(t[0].shape[0],").")));const n=[],a=t;for(let r=0;r<t.length;++r)n.push(qB.tidy((()=>{let t=a[r];if(r>0)for(let e=0;e<r;++e){const a=oU(hV(oU(n[e],t)),n[e]);t=dU(t,a)}return sU(t,pV(t,"euclidean"))})));return e?hU(n,0):n}});function mV(t){kz().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function gV(t,e){return qB.tidy(t,e)}function yV(t){return qB.keep(t)}!function(t){AB=t}(mV);const bV=eW({expandDims_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=$B(t,"x","expandDims","string_or_numeric");tz(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},r={dim:e};return qB.runKernel(eP,a,r)}});const xV=eW({tile_:function(t,e){const n=$B(t,"x","tile","string_or_numeric");tz(n.rank===e.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(e,".")));const a={x:n},r={reps:e};return qB.runKernel(QP,a,r)}});const vV=eW({eye_:function(t,e,n){null==e&&(e=t);const a=WW([t,e],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),r=t<=e?t:e;for(let o=0;o<r;++o)a.set(1,o,o);const s=iU(a.toTensor(),[t,e]);if(null==n)return s;if(1===n.length)return xV(bV(s,0),[n[0],1,1]);if(2===n.length)return xV(bV(bV(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return xV(bV(bV(bV(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});const wV=eW({greater_:function(t,e){let n=$B(t,"a","greater"),a=$B(e,"b","greater");[n,a]=UB(n,a),YU(n.shape,a.shape);const r={a:n,b:a};return qB.runKernel("Greater",r)}});const kV=eW({matMul_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=$B(t,"a","matMul"),s=$B(e,"b","matMul");[r,s]=UB(r,s);const o={a:r,b:s},i={transposeA:n,transposeB:a};return qB.runKernel(Wz,o,i)}});const IV=eW({neg_:function(t){const e={x:$B(t,"x","neg")};return qB.runKernel("Neg",e)}});const SV=eW({transpose_:function(t,e){const n=$B(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),tz(n.rank===e.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of perm ".concat(e,"."))),e.forEach((t=>{tz(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(n.rank-1)+" but got ".concat(e)))})),n.rank<=1)return n.clone();const a={x:n},r={perm:e};return qB.runKernel(JP,a,r)}});function NV(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return qB.tidy((()=>{tz(2===t.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(t.shape.length,"D Tensor.")));const n=t.shape[0],a=t.shape[1];let r=vV(n),s=VW(t);const o=fU([[1]],[1,1]);let i=VW(o);const c=n>=a?a:n;for(let t=0;t<c;++t){const e=s,c=i,l=r;[i,s,r]=qB.tidy((()=>{const e=uU(s,[t,t],[n-t,1]),c=pV(e),l=uU(s,[t,t],[1,1]),u=eV(wV(l,0),fU([[-1]]),fU([[1]])),h=dU(l,oU(u,c)),d=sU(e,h);i=1===d.shape[0]?VW(o):nU([o,uU(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=IV(sU(kV(u,h),c)),f=uU(s,[t,0],[n-t,a]),m=oU(p,i),g=SV(i);if(0===t)s=dU(f,kV(m,kV(g,f)));else{const e=dU(f,kV(m,kV(g,f)));s=nU([uU(s,[0,0],[t,a]),e],0)}const y=SV(m),b=uU(r,[0,t],[n,r.shape[1]-t]);if(0===t)r=dU(b,kV(kV(b,i),y));else{const e=dU(b,kV(kV(b,i),y));r=nU([uU(r,[0,0],[n,t]),e],1)}return[i,s,r]})),VB([e,c,l]).forEach((t=>t.dispose()))}return!e&&n>a&&(r=uU(r,[0,0],[n,a]),s=uU(s,[0,0],[a,a])),[r,s]}))}eW({qr_:function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(tz(t.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(t.rank))),2===t.rank)return NV(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),a=mU(iU(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],s=[];a.forEach((t=>{const[n,a]=NV(t,e);r.push(n),s.push(a)}));return[iU(hU(r,0),t.shape),iU(hU(s,0),t.shape)]}}});var TV;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(TV||(TV={}));const EV=eW({mean_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:$B(t,"x","mean")},r={axis:e,keepDims:n};return qB.runKernel(bP,a,r)}});const CV=eW({notEqual_:function(t,e){let n=$B(t,"a","notEqual"),a=$B(e,"b","notEqual");[n,a]=UB(n,a),YU(n.shape,a.shape);const r={a:n,b:a};return qB.runKernel("NotEqual",r)}});function RV(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===e){const e=RV(t,"float32"),n=xU(t,"float32");return nW(e,n)}const n=gz(rz(t),e);return qB.makeTensor(n,t,e)}const _V=eW({computeWeightedLoss_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:TV.SUM_BY_NONZERO_WEIGHTS;const a=$B(t,"losses","computeWeightedLoss");let r=null;null!=e&&(r=$B(e,"weights","computeWeightedLoss"));const s=null==r?a:oU(a,r);if(n===TV.NONE)return s;if(n===TV.SUM)return hV(s);if(n===TV.MEAN){if(null==r)return EV(s);{const t=a.size/r.size,e=sU(hV(s),hV(r));return t>1?sU(e,cU(t)):e}}if(n===TV.SUM_BY_NONZERO_WEIGHTS){if(null==r)return sU(hV(s),cU(a.size));{const t=oU(r,RV(a.shape)),e=UW(hV(CV(t,cU(0))),"float32");return sU(hV(s),e)}}throw Error("Unknown reduction: ".concat(n))}});eW({absoluteDifference_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:TV.SUM_BY_NONZERO_WEIGHTS;const r=$B(t,"labels","absoluteDifference"),s=$B(e,"predictions","absoluteDifference");let o=null;null!=n&&(o=$B(n,"weights","absoluteDifference")),ez(r.shape,s.shape,"Error in absoluteDifference: ");const i=nV(dU(r,s));return _V(i,o,a)}});eW({cosineDistance_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:TV.SUM_BY_NONZERO_WEIGHTS;const s=$B(t,"labels","cosineDistance"),o=$B(e,"predictions","cosineDistance");let i=null;null!=a&&(i=$B(a,"weights","cosineDistance")),ez(s.shape,o.shape,"Error in cosineDistance: ");const c=cU(1),l=dU(c,hV(oU(s,o),n,!0));return _V(l,i,r)}});const AV=eW({relu_:function(t){const e={x:$B(t,"x","relu")};return qB.runKernel(RP,e)}});eW({hingeLoss_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:TV.SUM_BY_NONZERO_WEIGHTS,r=$B(t,"labels","hingeLoss");const s=$B(e,"predictions","hingeLoss");let o=null;null!=n&&(o=$B(n,"weights","hingeLoss")),ez(r.shape,s.shape,"Error in hingeLoss: ");const i=cU(1);r=dU(oU(cU(2),r),i);const c=AV(dU(i,oU(r,s)));return _V(c,o,a)}});const DV=eW({minimum_:function(t,e){let n=$B(t,"a","minimum"),a=$B(e,"b","minimum");[n,a]=UB(n,a),"bool"===n.dtype&&(n=UW(n,"int32"),a=UW(a,"int32")),YU(n.shape,a.shape);const r={a:n,b:a};return qB.runKernel(xP,r)}});eW({huberLoss_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:TV.SUM_BY_NONZERO_WEIGHTS;const s=$B(t,"labels","huberLoss"),o=$B(e,"predictions","huberLoss");let i=null;null!=n&&(i=$B(n,"weights","huberLoss")),ez(s.shape,o.shape,"Error in huberLoss: ");const c=cU(a),l=nV(dU(o,s)),u=DV(l,c),h=dU(l,u),d=eU(oU(cU(.5),uV(u)),oU(c,h));return _V(d,i,r)}});const FV=eW({log_:function(t){const e={x:$B(t,"x","log")};return qB.runKernel("Log",e)}});eW({logLoss_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:TV.SUM_BY_NONZERO_WEIGHTS;const s=$B(t,"labels","logLoss"),o=$B(e,"predictions","logLoss");let i=null;null!=n&&(i=$B(n,"weights","logLoss")),ez(s.shape,o.shape,"Error in logLoss: ");const c=cU(1),l=cU(a),u=IV(oU(s,FV(eU(o,l)))),h=oU(dU(c,s),FV(eU(dU(c,o),l))),d=dU(u,h);return _V(d,i,r)}});const OV=eW({squaredDifference_:function(t,e){let n=$B(t,"a","squaredDifference"),a=$B(e,"b","squaredDifference");[n,a]=UB(n,a),YU(n.shape,a.shape);const r={a:n,b:a};return qB.runKernel(XP,r,{})}});eW({meanSquaredError_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:TV.SUM_BY_NONZERO_WEIGHTS;const r=$B(t,"labels","meanSquaredError"),s=$B(e,"predictions","meanSquaredError");let o=null;null!=n&&(o=$B(n,"weights","meanSquaredError")),ez(r.shape,s.shape,"Error in meanSquaredError: ");const i=OV(r,s);return _V(i,o,a)}});const MV=eW({exp_:function(t){const e={x:$B(t,"x","exp")};return qB.runKernel("Exp",e)}});const LV=eW({log1p_:function(t){const e={x:$B(t,"x","log1p")};return qB.runKernel(fP,e)}});eW({sigmoidCrossEntropy_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:TV.SUM_BY_NONZERO_WEIGHTS,s=$B(t,"multiClassLabels","sigmoidCrossEntropy");const o=$B(e,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=$B(n,"weights","sigmoidCrossEntropy")),ez(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),a>0){const t=cU(a),e=cU(1),n=cU(.5);s=eU(oU(s,dU(e,t)),oU(n,t))}const c=function(t,e){const n=$B(t,"labels","sigmoidCrossEntropyWithLogits"),a=$B(e,"logits","sigmoidCrossEntropyWithLogits");ez(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=AV(a),s=oU(a,n),o=LV(MV(IV(nV(a))));return eU(dU(r,s),o)}(s,o);return _V(c,i,r)}});function zV(t){return qB.customGrad(t)}const PV=eW({logSumExp_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a=$B(t,"x","logSumExp"),r=cz(e,a.shape),s=oV(a,r,!0),o=dU(a,s),i=MV(o),c=hV(i,r),l=FV(c),u=eU(iU(s,l.shape),l);if(n){const t=rV(u.shape,r);return iU(u,t)}return u}});eW({softmaxCrossEntropy_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:TV.SUM_BY_NONZERO_WEIGHTS,s=$B(t,"onehotLabels","softmaxCrossEntropy");const o=$B(e,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=$B(n,"weights","softmaxCrossEntropy")),ez(s.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const t=cU(a),e=cU(1),n=cU(s.shape[1]);s=eU(oU(s,dU(e,t)),sU(t,n))}const c=function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(e.rank," ")+"and dim was ".concat(n));const a=zV(((t,e,a)=>{const r=PV(e,[n],!0),s=dU(UW(e,"float32"),r);a([t,s]);const o=IV(oU(s,t));return{value:hV(o,[n]),gradFunc:(t,e)=>{const[a,r]=e,s=rV(t.shape,[n]);return[oU(iU(t,s),dU(UW(a,"float32"),MV(r))),oU(iU(t,s),dU(MV(r),UW(a,"float32")))]}}}));return a(t,e)}(s,o);return _V(c,i,r)}});const BV={flipLeftRight:AU,resizeNearestNeighbor:qU,resizeBilinear:KU,rotateWithOffset:DU,cropAndResize:_U,nonMaxSuppression:OU,nonMaxSuppressionAsync:UU,nonMaxSuppressionWithScore:VU,nonMaxSuppressionWithScoreAsync:GU,nonMaxSuppressionPadded:HU,nonMaxSuppressionPaddedAsync:jU};const WV=eW({step_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:$B(t,"x","step")},a={alpha:e};return qB.runKernel(eB,n,a)}}),UV={kernelName:"Abs",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oU(t,WV(UW(n,"float32"),-1))}}},VV={kernelName:Ez,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=uV(UW(n,"float32")),a=lV(dU(cU(1),e));return IV(sU(t,a))}}}},GV={kernelName:Cz,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=lV(dU(uV(UW(n,"float32")),1));return sU(t,e)}}}},HV={kernelName:Rz,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=YU(n.shape,a.shape);return{a:()=>{let e=t;const a=XU(n.shape,r);return a.length>0&&(e=hV(e,a)),iU(e,n.shape)},b:()=>{let e=t;const n=XU(a.shape,r);return n.length>0&&(e=hV(e,n)),iU(e,a.shape)}}}},jV={kernelName:_z,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,a)=>{n[a]=()=>t.clone()})),n}},KV={kernelName:Az,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>vU(n)}}},qV={kernelName:Dz,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>vU(n)}}},XV={kernelName:Fz,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>sU(t,lV(dU(cU(1),uV(UW(n,"float32")))))}}},YV={kernelName:Oz,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=lV(eU(cU(1),uV(UW(n,"float32"))));return sU(t,e)}}}},QV={kernelName:zz,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=YU(n.shape,a.shape);return{a:()=>{const e=eU(uV(n),uV(a));let s=oU(t,sU(a,e));const o=XU(n.shape,r);return o.length>0&&(s=hV(s,o)),iU(s,n.shape)},b:()=>{const e=eU(uV(n),uV(a));let s=IV(oU(t,sU(n,e)));const o=XU(a.shape,r);return o.length>0&&(s=hV(s,o)),iU(s,a.shape)}}}},JV={kernelName:Mz,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>sU(t,eU(uV(UW(n,"float32")),1))}}},ZV={kernelName:Lz,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>sU(t,dU(cU(1),uV(UW(n,"float32"))))}}};function $V(t,e,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,l,u,h]=[-1,-1,-1,-1];if("channelsLast"===i)[c,l,u,h]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,h,l,u]=t}const[d,p,,f]=e,[m,g]=eG(n),[y,b]=eG(a),x=nG(d,y),v=nG(p,b),{padInfo:w,outHeight:k,outWidth:I}=function(t,e,n,a,r,s,o,i,c){let l,u,h;if("number"===typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const r=function(t,e,n,a,r){null==a&&(a=tG(t,e,n));const s=t[0],o=t[1],i=aG((s-e+2*a)/n+1,r),c=aG((o-e+2*a)/n+1,r);return[i,c]}([e,n],s,a,t,i);u=r[0],h=r[1]}else if("same"===t){u=Math.ceil(e/a),h=Math.ceil(n/r);const t=Math.max(0,(u-1)*a+s-e),i=Math.max(0,(h-1)*r+o-n),c=Math.floor(t/2),d=t-c,p=Math.floor(i/2);l={top:c,bottom:d,left:p,right:i-p,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((e-s+1)/a),h=Math.ceil((n-o+1)/r);else{if("object"!==typeof t)throw Error("Unknown padding parameter: ".concat(t));{const d="channelsLast"===c?t[1][0]:t[2][0],p="channelsLast"===c?t[1][1]:t[2][1],f="channelsLast"===c?t[2][0]:t[3][0],m="channelsLast"===c?t[2][1]:t[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},u=aG((e-s+d+p)/a+1,i),h=aG((n-o+f+m)/r+1,i)}}return{padInfo:l,outHeight:u,outWidth:h}}(r,l,u,m,g,x,v,s,i),S=o?f*h:f;let N;return"channelsFirst"===i?N=[c,S,k,I]:"channelsLast"===i&&(N=[c,k,I,S]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:u,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:t,outShape:N,filterShape:e}}function tG(t,e,n){const a=nG(e,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((t[0]*(n-1)-n+a)/2)}function eG(t){return"number"===typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function nG(t,e){return e<=1?t:t+(t-1)*(e-1)}function aG(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode ".concat(e))}}function rG(t){const[e,n,a]=eG(t);return 1===e&&1===n&&1===a}function sG(t,e){return rG(t)||rG(e)}const oG=eW({avgPool3dGrad_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1,1],s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;const i=$B(t,"dy","avgPool3dGrad"),c=$B(e,"input","avgPool3dGrad");let l=i,u=c,h=!1;4===c.rank&&(h=!0,l=iU(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=iU(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),tz(5===l.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(l.rank,"."))),tz(5===u.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(u.rank,"."))),tz(sG(a,r),(()=>"Error in avgPool3dGrad: Either strides or dilations "+"must be 1. Got strides ".concat(a," and dilations '").concat(r,"'"))),null!=o&&tz(oz(s),(()=>"Error in avgPool3dGrad: pad must be an integer when "+"using, dimRoundingMode ".concat(o," but got pad ").concat(s,".")));const d={dy:l,input:u},p={filterSize:n,strides:a,dilations:r,pad:s,dimRoundingMode:o},f=qB.runKernel("AvgPool3DGrad",d,p);return h?iU(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),iG={kernelName:Bz,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{filterSize:r,strides:s,dilations:o,pad:i,dimRoundingMode:c}=n,l=null==o?[1,1,1]:o;return{x:()=>oG(t,a,r,s,l,i,c)}}};const cG=eW({avgPoolGrad_:function(t,e,n,a,r){const s=$B(t,"dy","avgPoolGrad"),o=$B(e,"input","avgPoolGrad");tz(o.rank===s.rank,(()=>"Rank of input (".concat(o.rank,") does not match rank of dy (").concat(s.rank,")")));let i=o,c=s,l=!1;3===o.rank&&(l=!0,i=iU(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=iU(s,[1,s.shape[0],s.shape[1],s.shape[2]])),tz(4===c.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),tz(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const u={dy:c,input:i},h={filterSize:n,strides:a,pad:r},d=qB.runKernel("AvgPoolGrad",u,h);return l?iU(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),lG={kernelName:Pz,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{filterSize:r,strides:s,pad:o}=n;return{x:()=>cG(t,a,r,s,o)}}},uG={kernelName:Wz,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[a,r]=e,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>kV(t,r,!1,!1),b:()=>kV(t,a,!0,!1)}:s&&!o?{a:()=>kV(r,t,!1,!0),b:()=>kV(a,t,!1,!1)}:{a:()=>kV(r,t,!0,!0),b:()=>kV(t,a,!0,!0)}:{a:()=>kV(t,r,!1,!0),b:()=>kV(a,t,!0,!1)}}};const hG=eW({spaceToBatchND_:function(t,e,n){const a=$B(t,"x","spaceToBatchND");tz(a.rank>=1+e.length,(()=>"input rank ".concat(a.rank," should be > than [blockShape] ").concat(e.length))),tz(n.length===e.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(e.length))),tz(a.shape.reduce(((t,a,r)=>r>0&&r<=e.length?t&&(a+n[r-1][0]+n[r-1][1])%e[r-1]===0:t),!0),(()=>"input spatial dimensions ".concat(a.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(e.toString())));const r={x:a},s={blockShape:e,paddings:n};return qB.runKernel(jP,r,s)}}),dG={kernelName:Uz,gradFunc:(t,e,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>hG(t,a,r)}}},pG={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const a=n,r=a.inputShape,s=a.shape,o=Array.from(s);for(let c=r.length-1;c>=0;c--)if(r[c]===s[c])o[c]=1;else if(1!==r[c])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>hV(t,i,!0)}}},fG={kernelName:Vz,gradFunc:t=>({x:()=>t.clone()})},mG={kernelName:Gz,gradFunc:t=>({x:()=>vU(t)})},gG={kernelName:Hz,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>eV(ZU(QU(a,r),JU(a,s)),t,vU(t))}}},yG={kernelName:jz,inputsToSave:["x"],gradFunc:UV.gradFunc},bG={kernelName:Kz,saveAllInputs:!0,gradFunc:(t,e,n)=>{const a=e.map((t=>t.shape)),{axis:r}=n,s=cz(r,e[0].shape)[0],o=a.map((t=>t[s]));return bU(t,o,s).map((t=>()=>t))}};const xG=eW({conv2DBackpropFilter_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0,i=t;3===t.rank&&(i=iU(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c=e;3===c.rank&&(c=iU(e,[1,e.shape[0],e.shape[1],e.shape[2]])),tz(4===i.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(i.shape,"."))),tz(4===c.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(c.shape,"."))),tz(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const l="NHWC"===s?i.shape[3]:i.shape[1],u="NHWC"===s?c.shape[3]:c.shape[1];tz(l===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(l,") must ")+"match input depth in filter (".concat(n[2],"."))),tz(u===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(u,") must ")+"match output depth for filter (".concat(n[3],")."))),null!=o&&tz(oz(r),(()=>"Error in conv2dDerFilter: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(r,".")));const h={x:i,dy:c},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,filterShape:n};return qB.runKernel("Conv2DBackpropFilter",h,d)}});const vG=eW({conv2DBackpropInput_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0;tz(t.length===e.rank,(()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match")));let i=t,c=e,l=!1;3===e.rank&&(l=!0,c=iU(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,t[0],t[1],t[2]]),tz(4===i.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(i.length,"."))),tz(4===c.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(c.rank))),tz(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const u="NHWC"===s?i[3]:i[1],h="NHWC"===s?c.shape[3]:c.shape[1];tz(u===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(u,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),tz(h===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(h,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),null!=o&&tz(oz(r),(()=>"Error in conv2dDerInput: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(r,".")));const d={dy:c,filter:n},p={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,inputShape:i},f=qB.runKernel(Xz,d,p);return l?iU(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),wG={kernelName:qz,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[a,r]=e,{dilations:s,strides:o,pad:i,dataFormat:c}=n;return tz(rG(s),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'"))),{x:()=>vG(a.shape,t,r,o,i,c),filter:()=>xG(a,t,r.shape,o,i,c)}}};const kG=eW({conv2d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=$B(t,"x","conv2d"),c=$B(e,"filter","conv2d");let l=i,u=!1;3===i.rank&&(u=!0,l=iU(i,[1,i.shape[0],i.shape[1],i.shape[2]])),tz(4===l.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(l.rank,"."))),tz(4===c.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(c.rank,"."))),null!=o&&tz(oz(a),(()=>"Error in conv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(a,".")));const h="NHWC"===r?l.shape[3]:l.shape[1];tz(h===c.shape[2],(()=>"Error in conv2d: depth of input (".concat(h,") must match ")+"input depth for filter ".concat(c.shape[2],"."))),tz(sG(n,s),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'")));const d={x:l,filter:c},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},f=qB.runKernel(qz,d,p);return u?iU(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),IG={kernelName:Xz,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[a,r]=e,{strides:s,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>kG(t,r,s,o,i,1,c),filter:()=>xG(t,a,r.shape,s,o,i,c)}}};const SG=eW({conv3DBackpropFilter_:function(t,e,n,a,r){let s=t;4===t.rank&&(s=iU(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let o=e;4===o.rank&&(o=iU(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),tz(5===s.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(s.shape,"."))),tz(5===o.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(o.shape,"."))),tz(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),tz(s.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(s.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),tz(o.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(o.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:s,dy:o},c={strides:a,pad:r,filterShape:n};return qB.runKernel("Conv3DBackpropFilterV2",i,c)}});const NG=eW({conv3DBackpropInput_:function(t,e,n,a,r){tz(t.length===e.rank,(()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match")));let s=t,o=e,i=!1;4===e.rank&&(i=!0,o=iU(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,t[0],t[1],t[2],t[3]]);const c=s[4],l=o.shape[4];tz(5===s.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(s.length,"."))),tz(5===o.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(o.rank))),tz(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),tz(c===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(c,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),tz(l===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(l,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const u={dy:o,filter:n},h={pad:r,strides:a,inputShape:s},d=qB.runKernel("Conv3DBackpropInputV2",u,h);return i?iU(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),TG={kernelName:Yz,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:a,strides:r,pad:s}=n;tz(rG(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[o,i]=e;return{x:()=>NG(o.shape,t,i,r,s),filter:()=>SG(o,t,i.shape,r,s)}}};const EG=eW({sin_:function(t){const e={x:$B(t,"x","sin")};return qB.runKernel("Sin",e)}}),CG={kernelName:"Cos",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oU(IV(EG(UW(n,"float32"))),t)}}};const RG=eW({sinh_:function(t){const e={x:$B(t,"x","sinh")};return qB.runKernel(WP,e)}}),_G={kernelName:Qz,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oU(RG(UW(n,"float32")),t)}}};const AG=eW({cumsum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:$B(t,"x","cumsum")},s={axis:e,exclusive:n,reverse:a};return qB.runKernel(Jz,r,s)}}),DG={kernelName:Jz,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:r,exclusive:s,reverse:o}=n;return{x:()=>{const e=function(t,e){if(aV(t,e))return null;const n=[];for(let a=0;a<e;++a)-1===t.indexOf(a)&&n.push(a);return t.forEach((t=>n.push(t))),n}([r],a.rank);let n=AG(t,r,s,!o);return null!=e&&(n=SV(n,e)),n}}}};const FG=eW({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=t;3===t.rank&&(i=iU(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c=e;3===c.rank&&(c=iU(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:i,dy:c},u={strides:a,pad:r,dimRoundingMode:o,dilations:s,filterShape:n};return qB.runKernel("DepthwiseConv2dNativeBackpropFilter",l,u)}});const OG=eW({depthwiseConv2dNativeBackpropInput_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=e,c=!1;3===e.rank&&(c=!0,i=iU(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:i,filter:n},u={strides:a,pad:r,dimRoundingMode:o,dilations:s,inputShape:t},h=qB.runKernel("DepthwiseConv2dNativeBackpropInput",l,u);return c?iU(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),MG={kernelName:Zz,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:o}=n,i=null==a?[1,1]:a;tz(rG(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=e;return tz(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),tz(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),tz(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),tz(sG(r,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'."))),null!=o&&tz(oz(s),(()=>"Error in depthwiseConv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(s,"."))),{x:()=>OG(c.shape,t,l,r,s,a,o),filter:()=>FG(c,t,l.shape,r,s,a,o)}}},LG={kernelName:$z,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[a,r]=e,s={x:a,filter:r,dy:t},o={x:a,filter:r,dy:t};return{x:()=>qB.runKernel("Dilation2DBackpropInput",s,n),filter:()=>qB.runKernel("Dilation2DBackpropFilter",o,n)}}},zG={kernelName:"Elu",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,a={dy:t,y:n};return{x:()=>qB.runKernel("EluGrad",a)}}},PG={kernelName:"Erf",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=oU(MV(IV(uV(n))),2/Math.sqrt(Math.PI));return{x:()=>oU(t,a)}}},BG={kernelName:"Exp",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oU(t,n)}}},WG={kernelName:eP,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>iU(t,n.shape)}}},UG={kernelName:nP,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oU(t,MV(n))}}},VG={kernelName:rP,gradFunc:t=>({x:()=>vU(t)})},GG={kernelName:sP,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=YU(n.shape,a.shape);return{a:()=>{const e=sU(t,UW(a,"float32")),s=XU(n.shape,r);return s.length>0?iU(hV(e,s),n.shape):e},b:()=>{let e=oU(t,UW(n,"float32"));const s=XU(a.shape,r);s.length>0&&(e=iU(hV(e,s),a.shape));const o=uV(a);return IV(sU(e,UW(o,"float32")))}}}};const HG=eW({rsqrt_:function(t){const e={x:$B(t,"x","rsqrt")};return qB.runKernel(LP,e)}}),jG={kernelName:oP,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:a}=n,[r,s,o,i]=e,c=null==i?cU(1):i,l=XU(s.shape,r.shape),u=[];if(1===s.rank){for(let t=0;t<r.shape.length-1;++t)u.push(r.shape[t]);u.push(1)}const h=dU(r,s),d=oU(t,c),p=HG(eU(o,cU(a))),f=oU(oU(oU(p,p),p),cU(-.5));return{x:()=>1===s.rank?iU(oU(oU(t,xV(iU(p,[1,1,1,s.shape[0]]),u)),c),r.shape):iU(oU(oU(t,p),c),r.shape),mean:()=>{let t=oU(oU(p,cU(-1)),d);return 1===s.rank&&(t=hV(t,l)),iU(t,s.shape)},variance:()=>{let t=oU(oU(f,h),d);return 1===s.rank&&(t=hV(t,l)),iU(t,s.shape)},scale:()=>{const e=oU(h,p);let n=oU(t,e);return 1===s.rank&&(n=hV(n,l)),iU(n,s.shape)},offset:()=>{let e=t;return 1===s.rank&&(e=hV(e,l)),iU(e,s.shape)}}}};const KG=eW({unsortedSegmentSum_:function(t,e,n){const a=$B(t,"x","unsortedSegmentSum"),r=$B(e,"segmentIds","unsortedSegmentSum","int32");tz(oz(n),(()=>"numSegments must be of dtype int"));const s={x:a,segmentIds:r},o={numSegments:n};return qB.runKernel($P,s,o)}}),qG={kernelName:iP,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[a,r]=e,{axis:s}=n,o=cz(s,a.shape)[0];return{x:()=>{const e=a.shape,n=r.size,i=e.slice(0,o),c=i.length,l=e.slice(s,e.length).slice(1),u=l.length,h=XG(0,c),d=XG(c+1,c+1+u),p=YG([i,[n],l]),f=iU(t,p),m=iU(r,[n]),g=YG([[c],h,d]),y=SV(f,g);let b=KG(y,m,a.shape[o]);const x=sV(g);return b=SV(b,x),b},indices:()=>r}}};function XG(t,e){const n=[];for(let a=t;a<e;++a)n.push(a);return n}function YG(t){const e=[];for(let n=0;n<t.length;++n)for(let a=0;a<t[n].length;++a)e.push(t[n][a]);return e}const QG={kernelName:cP,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>vU(n),b:()=>vU(a)}}},JG={kernelName:lP,gradFunc:t=>({x:()=>UW(t,"float32")})},ZG={kernelName:uP,gradFunc:t=>({x:()=>vU(t)})},$G={kernelName:hP,gradFunc:t=>({x:()=>vU(t)})},tH={kernelName:dP,gradFunc:t=>({x:()=>vU(t)})},eH={kernelName:pP,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{alpha:r}=n,s=wV(a,0);return{x:()=>eV(s,t,oU(t,r))}}},nH={kernelName:fP,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>sU(t,eU(n,1))}}},aH={kernelName:"Log",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>sU(t,UW(n,"float32"))}}},rH={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a]=e,{axis:r}=n;return{logits:()=>{const e=MV(a);return dU(t,oU(hV(t,r,!0),e))}}}};const sH=eW({localResponseNormalizationBackprop_:function(t,e,n){const a={x:t,y:e,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return qB.runKernel("LRNGrad",a,r)}}),oH={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,r]=e,{depthRadius:s,bias:o,alpha:i,beta:c}=n;return{x:()=>sH(a,r,t,s,o,i,c)}}};const iH=eW({equal_:function(t,e){let n=$B(t,"a","equal"),a=$B(e,"b","equal");[n,a]=UB(n,a),YU(n.shape,a.shape);const r={a:n,b:a};return qB.runKernel("Equal",r)}});function cH(t,e,n,a){return e.rank<n.rank&&(e=iU(e,rV(e.shape,a))),t.rank<n.rank&&(t=iU(t,rV(t.shape,a))),{x:()=>oU(t,UW(iH(n,e),t.dtype))}}const lH={kernelName:"Max",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const a=n,{reductionIndices:r}=a,s=e[0],o=cH(t,e[1],s,cz(r,s.shape));return{x:()=>o.x()}}};const uH=eW({less_:function(t,e){let n=$B(t,"a","less"),a=$B(e,"b","less");[n,a]=UB(n,a),YU(n.shape,a.shape);const r={a:n,b:a};return qB.runKernel("Less",r)}}),hH={kernelName:mP,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>oU(t,UW(QU(n,a),"float32")),b:()=>oU(t,UW(uH(n,a),"float32"))}}};const dH=eW({maxPool3dGrad_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1],o=arguments.length>6?arguments[6]:void 0,i=arguments.length>7?arguments[7]:void 0;const c=$B(t,"dy","maxPool3dGrad"),l=$B(e,"input","maxPool3dGrad"),u=$B(n,"output","maxPool3dGrad");let h=c,d=l,p=u,f=!1;4===l.rank&&(f=!0,h=iU(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),d=iU(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=iU(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),tz(5===h.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(h.rank,"."))),tz(5===d.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(d.rank,"."))),tz(5===p.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(p.rank,"."))),tz(sG(r,s),(()=>"Error in maxPool3dGrad: Either strides or dilations "+"must be 1. Got strides ".concat(r," and dilations '").concat(s,"'"))),null!=i&&tz(oz(o),(()=>"Error in maxPool3dGrad: pad must be an integer when "+"using, dimRoundingMode ".concat(i," but got pad ").concat(o,".")));const m={dy:h,input:d,output:p},g={filterSize:a,strides:r,dilations:s,pad:o,dimRoundingMode:i},y=qB.runKernel("MaxPool3DGrad",m,g);return f?iU(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),pH={kernelName:yP,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,r]=e,{filterSize:s,strides:o,dilations:i,pad:c,dimRoundingMode:l}=n,u=null==i?[1,1,1]:i;return{x:()=>dH(t,a,r,s,o,u,c,l)}}};const fH=eW({maxPoolGrad_:function(t,e,n,a,r,s,o){const i=$B(t,"dy","maxPoolGrad"),c=$B(e,"input","maxPoolGrad"),l=$B(n,"output","maxPoolGrad");tz(c.rank===i.rank,(()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),tz(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),tz(4===c.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,"."))),null!=o&&tz(oz(s),(()=>"Error in maxPoolGrad: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(s,".")));const u={dy:i,input:c,output:l},h={filterSize:a,strides:r,pad:s,dimRoundingMode:o};return qB.runKernel("MaxPoolGrad",u,h)}}),mH={kernelName:gP,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,r]=e,{filterSize:s,strides:o,pad:i}=n;return{x:()=>fH(t,a,r,s,o,i)}}},gH={kernelName:bP,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:r}=n,s=cz(r,a.shape),o=function(t,e){const n=[],a=t.length;for(let r=0;r<a;r++)-1===e.indexOf(r)&&n.push(t[r]);return[n,e.map((e=>t[e]))]}(a.shape,s),i=rz(o[1]);return{x:()=>{const e=a.shape.slice();s.forEach((t=>{e[t]=1}));const n=iU(t,e);return sU(oU(n,RV(a.shape,"float32")),i)}}}},yH={kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const a=n,{axis:r}=a,[s,o]=e,i=cH(t,o,s,cz(r,s.shape));return{x:()=>i.x()}}},bH={kernelName:xP,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>oU(t,UW(JU(n,a),"float32")),b:()=>oU(t,UW(wV(n,a),"float32"))}}},xH={kernelName:vP,inputsToSave:["x"],gradFunc:(t,e,n)=>{const a=e[0],{paddings:r}=n,s=r.map((t=>t[0]));return{x:()=>uU(t,s,a.shape)}}};const vH=eW({floor_:function(t){const e={x:$B(t,"x","floor")};return qB.runKernel(rP,e)}}),wH={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=YU(n.shape,a.shape);return{a:()=>{const e=XU(n.shape,r);return e.length>0?iU(hV(t,e),n.shape):t},b:()=>{const e=oU(t,IV(vH(sU(n,a)))),s=XU(a.shape,r);return s.length>0?iU(hV(e,s),a.shape):e}}}},kH={kernelName:wP,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=YU(n.shape,a.shape);return{a:()=>{const e=oU(t,UW(a,"float32")),s=XU(n.shape,r);return s.length>0?iU(hV(e,s),n.shape):e},b:()=>{const e=oU(t,UW(n,"float32")),s=XU(a.shape,r);return s.length>0?iU(hV(e,s),a.shape):e}}}},IH={kernelName:"Neg",gradFunc:t=>({x:()=>IV(t)})},SH={kernelName:IP,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>xU(n.shape,"float32")}}},NH={kernelName:kP,gradFunc:t=>({x:()=>vU(t)})},TH={kernelName:SP,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:a}=n;return mU(t,a).map((t=>()=>t))}},EH={kernelName:NP,inputsToSave:["x"],gradFunc:(t,e,n)=>{const a=e[0],{paddings:r}=n,s=r.map((t=>t[0]));return{x:()=>uU(t,s,a.shape)}}},CH={kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,a,r]=e,s=n,o=a,i=YU(s.shape,o.shape);return{a:()=>{const e=UW(o,"float32");let n=oU(t,oU(e,cV(s,dU(e,cU(1)))));const a=XU(s.shape,i);return a.length>0&&(n=hV(n,a)),iU(n,s.shape)},b:()=>{const e=wV(s,0),n=eV(e,FV(s),vU(s));let a=oU(t,oU(r,n));const c=XU(o.shape,i);return c.length>0&&(a=hV(a,c)),iU(a,o.shape)}}}},RH={kernelName:TP,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,a]=e,r=wV(n,0);return{x:()=>eV(r,t,oU(t,a)),alpha:()=>{let e=eV(r,vU(t),oU(t,n));const s=XU(a.shape,t.shape);return s.length>0&&(e=hV(e,s)),iU(e,a.shape)}}}},_H={kernelName:tP,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=YU(n.shape,a.shape);return{a:()=>{const e=sU(t,UW(a,"float32")),s=XU(n.shape,r);return s.length>0?iU(hV(e,s),n.shape):e},b:()=>{let e=oU(t,UW(n,"float32"));const s=XU(a.shape,r);s.length>0&&(e=iU(hV(e,s),a.shape));const o=uV(a);return IV(sU(e,UW(o,"float32")))}}}},AH={kernelName:CP,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>sU(t,IV(uV(n)))}}},DH={kernelName:FP,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=oU(JU(n,6),WV(n));return{x:()=>oU(t,UW(a,"float32"))}}},FH={kernelName:RP,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oU(t,UW(WV(n),"float32"))}}},OH={kernelName:_P,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>iU(t,n.shape)}}},MH={kernelName:DP,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[a]=e,r={dy:t,images:a};return{images:()=>qB.runKernel("ResizeBilinearGrad",r,n)}}},LH={kernelName:AP,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[a]=e,r={dy:t,images:a};return{images:()=>qB.runKernel("ResizeNearestNeighborGrad",r,n)}}},zH={kernelName:OP,gradFunc:(t,e,n)=>{const{dims:a}=n,r=cz(a,t.shape);return{x:()=>SU(t,r)}}},PH={kernelName:MP,gradFunc:t=>({x:()=>vU(t)})},BH={kernelName:LP,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>IV(sU(t,oU(cV(n,1.5),2)))}}};const WH=eW({logicalNot_:function(t){const e={x:$B(t,"x","logicalNot","bool")};return qB.runKernel("LogicalNot",e)}}),UH={kernelName:zP,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>UW(vU(n),"float32"),t:()=>oU(t,UW(n,t.dtype)),e:()=>oU(t,UW(WH(n),t.dtype))}}},VH={kernelName:PP,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=wV(n,cU(0)),a=cU(1.7580993408473768),r=cU(1.0507009873554805),s=oU(t,r),o=oU(oU(t,a),MV(UW(n,"float32")));return eV(e,s,o)}}}},GH={kernelName:VP,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oU(t,oU(n,dU(cU(1),n)))}}},HH={kernelName:UP,gradFunc:t=>({x:()=>vU(t)})};const jH=eW({cos_:function(t){const e={x:$B(t,"x","cos")};return qB.runKernel("Cos",e)}}),KH={kernelName:"Sin",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oU(jH(UW(n,"float32")),t)}}};const qH=eW({cosh_:function(t){const e={x:$B(t,"x","cosh")};return qB.runKernel(Qz,e)}}),XH={kernelName:WP,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oU(qH(UW(n,"float32")),t)}}};const YH=eW({pad_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a=$B(t,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:n},s={x:a};return qB.runKernel(NP,s,r)}});const QH={kernelName:BP,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{begin:r,size:s}=n,o=a.shape,[i,c]=function(t,e,n){let a;const r=t.shape.length;let s;return a="number"===typeof e?[e,...new Array(r-1).fill(0)]:e.length<r?e.concat(new Array(r-e.length).fill(0)):e.slice(),a.forEach((t=>{tz(-1!==t,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,s=s.map(((e,n)=>e>=0?e:(tz(-1===e,(()=>"Negative size values should be exactly -1 but got "+"".concat(e," for the slice() size at index ").concat(n,"."))),t.shape[n]-a[n]))),[a,s]}(a,r,s),l=[];for(let u=0;u<t.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>YH(t,l)}}},JH={kernelName:qP,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a]=e,{dim:r}=n,s=oU(t,a);return{logits:()=>dU(s,oU(hV(s,[r],true),a))}}},ZH={kernelName:GP,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oU(t,lU(n))}}};const $H=eW({batchToSpaceND_:function(t,e,n){const a=$B(t,"x","batchToSpaceND"),r=e.reduce(((t,e)=>t*e));tz(a.rank>=1+e.length,(()=>"input rank is ".concat(a.rank," but should be > than blockShape.length ").concat(e.length))),tz(n.length===e.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(e.length))),tz(a.shape[0]%r===0,(()=>"input tensor batch is ".concat(a.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(e.join(" * ")," === ").concat(r)));const s={x:a},o={blockShape:e,crops:n};return qB.runKernel(Uz,s,o)}}),tj={kernelName:jP,gradFunc:(t,e,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>$H(t,a,r)}}},ej={kernelName:KP,gradFunc:(t,e,n)=>{const{axis:a}=n;return{x:()=>nU(t,a)}}},nj={kernelName:HP,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>sU(t,oU(lV(UW(n,"float32")),2))}}},aj={kernelName:"Square",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oU(t,oU(UW(n,"float32"),2))}}},rj={kernelName:XP,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=cU(2);return{a:()=>oU(t,oU(r,dU(n,a))),b:()=>oU(t,oU(r,dU(a,n)))}}},sj={kernelName:eB,gradFunc:t=>({x:()=>vU(t)})},oj={kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=YU(n.shape,a.shape);return{a:()=>{let e=t;const a=XU(n.shape,r);return a.length>0&&(e=hV(e,a)),iU(e,n.shape)},b:()=>{let e=t;const n=XU(a.shape,r);return n.length>0&&(e=hV(e,n)),iU(IV(e),a.shape)}}}},ij={kernelName:"Sum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,r=a.shape.slice(),{axis:s}=n;cz(s,a.shape).forEach((t=>{r[t]=1}));const o=iU(t,r),i=oU(o,RV(a.shape,"float32"));return{x:()=>i}}},cj={kernelName:"Tan",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>sU(t,uV(jH(n)))}}},lj={kernelName:YP,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oU(dU(cU(1),uV(n)),t)}}},uj={kernelName:QP,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{reps:r}=n;return{x:()=>{let e=vU(a);if(1===a.rank)for(let n=0;n<r[0];++n)e=eU(e,uU(t,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)e=eU(e,uU(t,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)e=eU(e,uU(t,[n*a.shape[0],s*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)for(let i=0;i<r[3];++i)e=eU(e,uU(t,[n*a.shape[0],s*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return e}}}},hj={kernelName:JP,gradFunc:(t,e,n)=>{const a=n,{perm:r}=a,s=sV(r);return{x:()=>SV(t,s)}}},dj={kernelName:ZP,gradFunc:(t,e,n)=>{const a=n,{axis:r}=a;return{value:()=>hU(t,r)}}};const pj=eW({gather_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const r={x:$B(t,"x","gather"),indices:$B(e,"indices","gather","int32")},s={axis:n,batchDims:a};return qB.runKernel(iP,r,s)}});const fj=eW({maximum_:function(t,e){let n=$B(t,"a","maximum"),a=$B(e,"b","maximum");[n,a]=UB(n,a),"bool"===n.dtype&&(n=UW(n,"int32"),a=UW(a,"int32")),YU(n.shape,a.shape);const r={a:n,b:a};return qB.runKernel(mP,r)}}),mj={kernelName:$P,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=fj(e,vU(e)),a=pj(t,n);let r=QU(e,cU(0,"int32"));const s=a.rank-r.rank;for(let i=0;i<s;++i)r=bV(r,i+1);r=ZU(r,RV(a.shape,"bool"));const o=vU(a);return eV(r,a,o)}(t,n)}}};const gj=[UV,VV,GV,HV,jV,KV,qV,XV,YV,QV,JV,ZV,iG,lG,uG,dG,pG,fG,mG,gG,yG,bG,IG,wG,TG,CG,_G,DG,MG,LG,_H,zG,PG,BG,WG,UG,GG,VG,jG,qG,QG,JG,ZG,$G,tH,eH,nH,aH,rH,oH,lH,lH,hH,pH,mH,gH,yH,bH,xH,wH,kH,IH,SH,NH,TH,EH,EH,CH,RH,AH,DH,FH,OH,MH,LH,zH,PH,BH,UH,VH,GH,HH,KH,XH,QH,JH,ZH,tj,tj,ej,ej,nj,rj,aj,sj,oj,ij,cj,lj,uj,hj,dj,mj,{kernelName:tB,gradFunc:t=>({x:()=>vU(t)})}];for(const n of gj)hB(n);DB.prototype.abs=function(){return this.throwIfDisposed(),nV(this)};const yj=eW({acos_:function(t){const e={x:$B(t,"x","acos")};return qB.runKernel(Ez,e)}});DB.prototype.acos=function(){return this.throwIfDisposed(),yj(this)};const bj=eW({acosh_:function(t){const e={x:$B(t,"x","acosh")};return qB.runKernel(Cz,e)}});DB.prototype.acosh=function(){return this.throwIfDisposed(),bj(this)};const xj=eW({mod_:function(t,e){let n=$B(t,"a","mod"),a=$B(e,"b","mod");[n,a]=UB(n,a);const r={a:n,b:a};return qB.runKernel("Mod",r)}});const vj=eW({addStrict_:function(t,e){mV("strict variants of ops have been deprecated and will be removed in future");const n=$B(t,"a","addStrict"),a=$B(e,"b","addStrict");return ez(n.shape,a.shape,"Error in addStrict: "),eU(n,a)}}),wj=eW({divStrict_:function(t,e){mV("strict variants of ops have been deprecated and will be removed in future");const n=$B(t,"a","div"),a=$B(e,"b","div");return ez(n.shape,a.shape,"Error in divideStrict: "),sU(n,a)}}),kj=eW({maximumStrict_:function(t,e){mV("strict variants of ops have been deprecated and will be removed in future");const n=$B(t,"a","maximumStrict"),a=$B(e,"b","maximumStrict");return ez(n.shape,a.shape,"Error in maximumStrict: "),fj(n,a)}}),Ij=eW({minimumStrict_:function(t,e){mV("strict variants of ops have been deprecated and will be removed in future");const n=$B(t,"a","minimumStrict"),a=$B(e,"b","minimumStrict");return ez(n.shape,a.shape,"Error in minimumStrict: "),DV(n,a)}}),Sj=eW({modStrict_:function(t,e){mV("strict variants of ops have been deprecated and will be removed in future");const n=$B(t,"a","modStrict"),a=$B(e,"b","modStrict");return ez(n.shape,a.shape,"Error in modStrict: "),xj(n,a)}}),Nj=eW({mulStrict_:function(t,e){mV("strict variants of ops have been deprecated and will be removed in future");const n=$B(t,"a","mul"),a=$B(e,"b","mul");return ez(n.shape,a.shape,"Error in multiplyStrict: "),oU(n,a)}}),Tj=eW({powStrict_:function(t,e){return mV("strict variants of ops have been deprecated and will be removed in future"),ez(t.shape,e.shape,"Error in powStrict: "),cV(t,e)}}),Ej=eW({squaredDifferenceStrict_:function(t,e){mV("strict variants of ops have been deprecated and will be removed in future");const n=$B(t,"a","squaredDifferenceStrict"),a=$B(e,"b","squaredDifferenceStrict");return ez(n.shape,a.shape,"Error in squaredDifferenceStrict: "),OV(n,a)}}),Cj=eW({subStrict_:function(t,e){mV("strict variants of ops have been deprecated and will be removed in future");const n=$B(t,"a","subStrict"),a=$B(e,"b","subStrict");return ez(n.shape,a.shape,"Error in subStrict: "),dU(n,a)}});DB.prototype.addStrict=function(t){return this.throwIfDisposed(),vj(this,t)},DB.prototype.add=function(t){return this.throwIfDisposed(),eU(this,t)};const Rj=eW({all_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:$B(t,"x","all","bool")},r={axis:e,keepDims:n};return qB.runKernel("All",a,r)}});DB.prototype.all=function(t,e){return this.throwIfDisposed(),Rj(this,t,e)};const _j=eW({any_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:$B(t,"x","any","bool")},r={axis:e,keepDims:n};return qB.runKernel("Any",a,r)}});DB.prototype.any=function(t,e){return this.throwIfDisposed(),_j(this,t,e)};const Aj=eW({argMax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:$B(t,"x","argMax")},a={axis:e};return qB.runKernel(Az,n,a)}});DB.prototype.argMax=function(t){return this.throwIfDisposed(),Aj(this,t)};const Dj=eW({argMin_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:$B(t,"x","argMin")},a={axis:e};return qB.runKernel(Dz,n,a)}});DB.prototype.argMin=function(t){return this.throwIfDisposed(),Dj(this,t)},DB.prototype.asScalar=function(){return this.throwIfDisposed(),tz(1===this.size,(()=>"The array must have only 1 element.")),iU(this,[])},DB.prototype.asType=function(t){return this.throwIfDisposed(),UW(this,t)},DB.prototype.as1D=function(){return this.throwIfDisposed(),iU(this,[this.size])},DB.prototype.as2D=function(t,e){return this.throwIfDisposed(),iU(this,[t,e])},DB.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),iU(this,[t,e,n])},DB.prototype.as4D=function(t,e,n,a){return this.throwIfDisposed(),iU(this,[t,e,n,a])},DB.prototype.as5D=function(t,e,n,a,r){return this.throwIfDisposed(),iU(this,[t,e,n,a,r])};const Fj=eW({asin_:function(t){const e={x:$B(t,"x","asin")};return qB.runKernel(Fz,e)}});DB.prototype.asin=function(){return this.throwIfDisposed(),Fj(this)};const Oj=eW({asinh_:function(t){const e={x:$B(t,"x","asinh")};return qB.runKernel(Oz,e)}});DB.prototype.asinh=function(){return this.throwIfDisposed(),Oj(this)};const Mj=eW({atan_:function(t){const e={x:$B(t,"x","atan")};return qB.runKernel(Mz,e)}});DB.prototype.atan=function(){return this.throwIfDisposed(),Mj(this)};const Lj=eW({atan2_:function(t,e){let n=$B(t,"a","atan2"),a=$B(e,"b","atan2");[n,a]=UB(n,a);const r={a:n,b:a};return qB.runKernel(zz,r)}});DB.prototype.atan2=function(t){return this.throwIfDisposed(),Lj(this,t)};const zj=eW({atanh_:function(t){const e={x:$B(t,"x","atanh")};return qB.runKernel(Lz,e)}});DB.prototype.atanh=function(){return this.throwIfDisposed(),zj(this)};const Pj=eW({avgPool_:function(t,e,n,a,r){const s=$B(t,"x","avgPool","float32");tz(sG(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let o=s,i=!1;3===s.rank&&(i=!0,o=iU(s,[1,s.shape[0],s.shape[1],s.shape[2]])),tz(4===o.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(o.rank,"."))),null!=r&&tz(oz(a),(()=>"Error in avgPool: pad must be an integer when using, "+"dimRoundingMode ".concat(r," but got pad ").concat(a,".")));const c={x:o},l={filterSize:e,strides:n,pad:a,dimRoundingMode:r};let u=qB.runKernel(Pz,c,l);return u=UW(u,s.dtype),i?iU(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});DB.prototype.avgPool=function(t,e,n,a){return this.throwIfDisposed(),Pj(this,t,e,n,a)},DB.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),$H(this,t,e)};const Bj=eW({batchNorm_:function(t,e,n,a,r,s){null==s&&(s=.001);const o=$B(t,"x","batchNorm"),i=$B(e,"mean","batchNorm"),c=$B(n,"variance","batchNorm");let l,u;null!=r&&(l=$B(r,"scale","batchNorm")),null!=a&&(u=$B(a,"offset","batchNorm")),tz(i.rank===c.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),tz(null==u||i.rank===u.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),tz(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(t){let e;return e=0===t.rank||1===t.rank?iU(t,[1,1,1,t.size]):2===t.rank?iU(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?iU(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(o),d={x:h,scale:l,offset:u,mean:i,variance:c},p={varianceEpsilon:s},f=qB.runKernel(oP,d,p);return iU(f,o.shape)}});DB.prototype.batchNorm=function(t,e,n,a,r){return this.throwIfDisposed(),Bj(this,t,e,n,a,r)},DB.prototype.broadcastTo=function(t){return this.throwIfDisposed(),tV(this,t)},DB.prototype.cast=function(t){return this.throwIfDisposed(),UW(this,t)};const Wj=eW({ceil_:function(t){const e={x:$B(t,"x","ceil")};return qB.runKernel(Gz,e)}});DB.prototype.ceil=function(){return this.throwIfDisposed(),Wj(this)};const Uj=eW({clipByValue_:function(t,e,n){const a=$B(t,"x","clipByValue");tz(e<=n,(()=>"Error in clip: min (".concat(e,") must be ")+"less than or equal to max (".concat(n,").")));const r={x:a},s={clipValueMin:e,clipValueMax:n};return qB.runKernel(Hz,r,s)}});DB.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Uj(this,t,e)},DB.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof DB&&(t=[t]),nU([this,...t],e)};const Vj=eW({conv1d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,o=arguments.length>6?arguments[6]:void 0;const i=$B(t,"x","conv1d"),c=$B(e,"filter","conv1d");let l=i,u=!1;2===i.rank&&(u=!0,l=iU(i,[1,i.shape[0],i.shape[1]])),tz(3===l.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(l.rank,"."))),tz(3===c.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(c.rank,"."))),null!=o&&tz(oz(a),(()=>"Error in conv1d: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(a,"."))),tz(l.shape[2]===c.shape[1],(()=>"Error in conv1d: depth of input (".concat(l.shape[2],") must match ")+"input depth for filter ".concat(c.shape[1],"."))),tz(sG(n,s),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(s,"'"))),tz("NWC"===r,(()=>"Error in conv1d: got dataFormat of ".concat(r," but only NWC is currently supported.")));const h=iU(c,[1,c.shape[0],c.shape[1],c.shape[2]]),d=iU(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=kG(d,h,[1,n],a,"NHWC",[1,s],o);return iU(p,u?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});DB.prototype.conv1d=function(t,e,n,a,r,s){return this.throwIfDisposed(),Vj(this,t,e,n,a,r,s)};const Gj=eW({conv2dTranspose_:function(t,e,n,a,r,s){const o=$B(t,"x","conv2dTranspose"),i=$B(e,"filter","conv2dTranspose");return vG(n,o,i,a,r,"NHWC",s)}});DB.prototype.conv2dTranspose=function(t,e,n,a,r){return this.throwIfDisposed(),Gj(this,t,e,n,a,r)},DB.prototype.conv2d=function(t,e,n,a,r,s){return this.throwIfDisposed(),kG(this,t,e,n,a,r,s)},DB.prototype.cos=function(){return this.throwIfDisposed(),jH(this)},DB.prototype.cosh=function(){return this.throwIfDisposed(),qH(this)},DB.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),AG(this,t,e,n)};const Hj=eW({depthToSpace_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const a=$B(t,"x","depthToSpace"),r="NHWC"===n?a.shape[1]:a.shape[2],s="NHWC"===n?a.shape[2]:a.shape[3],o="NHWC"===n?a.shape[3]:a.shape[1];tz(r*e>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(r," and ").concat(e,"  for depthToSpace with input shape\n    ").concat(a.shape))),tz(s*e>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(s," and ").concat(e," for depthToSpace with input shape\n        ").concat(a.shape))),tz(o%(e*e)===0,(()=>"Dimension size must be evenly divisible by ".concat(e*e," but is ").concat(o," for depthToSpace with input shape ").concat(a.shape)));const i={x:a},c={blockSize:e,dataFormat:n};return qB.runKernel("DepthToSpace",i,c)}});DB.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Hj(this,t,e)};const jj=eW({depthwiseConv2d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=$B(t,"x","depthwiseConv2d"),c=$B(e,"filter","depthwiseConv2d");let l=i,u=!1;3===i.rank&&(u=!0,l=iU(i,[1,i.shape[0],i.shape[1],i.shape[2]])),tz(4===l.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(l.rank,"."))),tz(4===c.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(c.rank,"."))),tz(l.shape[3]===c.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(l.shape[3],") must match the inChannels dimension in ")+"filter ".concat(c.shape[2],"."))),null!=o&&tz(oz(a),(()=>"Error in depthwiseConv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(a,".")));const h={x:l,filter:c},d={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},p=qB.runKernel(Zz,h,d);return u?iU(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});DB.prototype.depthwiseConv2D=function(t,e,n,a,r,s){return mV("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),jj(this,t,e,n,a,r,s)},DB.prototype.depthwiseConv2d=function(t,e,n,a,r,s){return this.throwIfDisposed(),jj(this,t,e,n,a,r,s)};const Kj=eW({dilation2d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const o=$B(t,"x","dilation2d"),i=$B(e,"filter","dilation2d");tz(3===o.rank||4===o.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(o.rank,"."))),tz(3===i.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(i.rank,"."))),tz("NHWC"===s,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(s)));let c=o,l=!1;3===o.rank&&(c=iU(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0);const u={x:c,filter:i},h={strides:n,pad:a,dilations:r},d=qB.runKernel($z,u,h);return l?iU(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});DB.prototype.dilation2d=function(t,e,n,a,r){return this.throwIfDisposed(),Kj(this,t,e,n,a,r)};const qj=eW({divNoNan_:function(t,e){let n=$B(t,"a","div"),a=$B(e,"b","div");[n,a]=UB(n,a);const r=sU(n,a),s=vU(r),o=iH(a,s);return eV(o,s,r)}});DB.prototype.divNoNan=function(t){return this.throwIfDisposed(),qj(this,t)},DB.prototype.divStrict=function(t){return this.throwIfDisposed(),wj(this,t)},DB.prototype.div=function(t){return this.throwIfDisposed(),sU(this,t)};const Xj=eW({dot_:function(t,e){const n=$B(t,"t1","dot"),a=$B(e,"t2","dot");tz((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=1===n.rank?n.size:n.shape[1],s=1===a.rank?a.size:a.shape[0];if(tz(r===s,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(r," and ").concat(s,"."))),1===n.rank&&1===a.rank){const t=iU(n,[1,-1]),e=iU(a,[-1,1]),r=kV(t,e);return iU(r,[])}if(1===n.rank&&2===a.rank){const t=iU(n,[1,-1]),e=iU(a,[a.shape[0],a.shape[1]]),r=kV(t,e);return iU(r,[r.size])}if(2===n.rank&&1===a.rank){const t=iU(a,[-1,1]),e=kV(n,t);return iU(e,[e.size])}{const t=iU(a,[a.shape[0],a.shape[1]]);return kV(n,t)}}});DB.prototype.dot=function(t){return this.throwIfDisposed(),Xj(this,t)};const Yj=eW({elu_:function(t){const e={x:$B(t,"x","elu")};return qB.runKernel("Elu",e)}});DB.prototype.elu=function(){return this.throwIfDisposed(),Yj(this)};const Qj=eW({equalStrict_:function(t,e){mV("strict variants of ops have been deprecated and will be removed in future");const n=$B(t,"a","equalStrict"),a=$B(e,"b","equalStrict");return ez(n.shape,a.shape,"Error in equalStrict: "),iH(n,a)}}),Jj=eW({greaterEqualStrict_:function(t,e){mV("strict variants of ops have been deprecated and will be removed in future");const n=$B(t,"a","greaterEqualStrict"),a=$B(e,"b","greaterEqualStrict");return ez(n.shape,a.shape,"Error in greaterEqualStrict: "),QU(n,a)}}),Zj=eW({greaterStrict_:function(t,e){mV("strict variants of ops have been deprecated and will be removed in future");const n=$B(t,"a","greaterStrict"),a=$B(e,"b","greaterStrict");return ez(n.shape,a.shape,"Error in greaterStrict: "),wV(n,a)}}),$j=eW({lessEqualStrict_:function(t,e){mV("strict variants of ops have been deprecated and will be removed in future");const n=$B(t,"a","lessEqualStrict"),a=$B(e,"b","lessEqualStrict");return ez(n.shape,a.shape,"Error in lessEqualStrict: "),JU(n,a)}}),tK=eW({lessStrict_:function(t,e){mV("strict variants of ops have been deprecated and will be removed in future");const n=$B(t,"a","lessStrict"),a=$B(e,"b","lessStrict");return ez(n.shape,a.shape,"Error in lessStrict: "),uH(n,a)}}),eK=eW({notEqualStrict_:function(t,e){mV("strict variants of ops have been deprecated and will be removed in future");const n=$B(t,"a","notEqualStrict"),a=$B(e,"b","notEqualStrict");return ez(n.shape,a.shape,"Error in notEqualStrict: "),CV(n,a)}});DB.prototype.equalStrict=function(t){return this.throwIfDisposed(),Qj(this,t)},DB.prototype.equal=function(t){return this.throwIfDisposed(),iH(this,t)};const nK=eW({erf_:function(t){let e=$B(t,"x","erf");tz("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=UW(e,"float32"));const n={x:e};return qB.runKernel("Erf",n)}});DB.prototype.erf=function(){return this.throwIfDisposed(),nK(this)},DB.prototype.exp=function(){return this.throwIfDisposed(),MV(this)},DB.prototype.expandDims=function(t){return this.throwIfDisposed(),bV(this,t)};const aK=eW({expm1_:function(t){const e={x:$B(t,"x","expm1")};return qB.runKernel(nP,e)}});DB.prototype.expm1=function(){return this.throwIfDisposed(),aK(this)},DB.prototype.fft=function(){return this.throwIfDisposed(),wU(this)},DB.prototype.flatten=function(){return this.throwIfDisposed(),iU(this,[this.size])},DB.prototype.floor=function(){return this.throwIfDisposed(),vH(this)},DB.prototype.floorDiv=function(t){return this.throwIfDisposed(),rU(this,t)},DB.prototype.gather=function(t,e){return this.throwIfDisposed(),pj(this,t,e)},DB.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),Jj(this,t)},DB.prototype.greaterEqual=function(t){return this.throwIfDisposed(),QU(this,t)},DB.prototype.greaterStrict=function(t){return this.throwIfDisposed(),Zj(this,t)},DB.prototype.greater=function(t){return this.throwIfDisposed(),wV(this,t)},DB.prototype.ifft=function(){return this.throwIfDisposed(),IU(this)},DB.prototype.irfft=function(){return this.throwIfDisposed(),NU(this)};const rK=eW({isFinite_:function(t){const e={x:$B(t,"x","isFinite")};return qB.runKernel(uP,e)}});DB.prototype.isFinite=function(){return this.throwIfDisposed(),rK(this)};const sK=eW({isInf_:function(t){const e={x:$B(t,"x","isInf")};return qB.runKernel(hP,e)}});DB.prototype.isInf=function(){return this.throwIfDisposed(),sK(this)};const oK=eW({isNaN_:function(t){const e={x:$B(t,"x","isNaN")};return qB.runKernel(dP,e)}});DB.prototype.isNaN=function(){return this.throwIfDisposed(),oK(this)};const iK=eW({leakyRelu_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:$B(t,"x","leakyRelu")},a={alpha:e};return qB.runKernel(pP,n,a)}});DB.prototype.leakyRelu=function(t){return this.throwIfDisposed(),iK(this,t)},DB.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),$j(this,t)},DB.prototype.lessEqual=function(t){return this.throwIfDisposed(),JU(this,t)},DB.prototype.lessStrict=function(t){return this.throwIfDisposed(),tK(this,t)},DB.prototype.less=function(t){return this.throwIfDisposed(),uH(this,t)};const cK=eW({localResponseNormalization_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const s=$B(t,"x","localResponseNormalization");tz(4===s.rank||3===s.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(s.rank,"."))),tz(oz(e),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(e,".")));let o=s,i=!1;3===s.rank&&(i=!0,o=iU(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const c={x:o},l={depthRadius:e,bias:n,alpha:a,beta:r},u=qB.runKernel("LRN",c,l);return i?iU(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});DB.prototype.localResponseNormalization=function(t,e,n,a){return this.throwIfDisposed(),cK(this,t,e,n,a)};const lK=eW({softplus_:function(t){const e={x:$B(t,"x","softplus")};return qB.runKernel(GP,e)}});const uK=eW({logSigmoid_:function(t){const e=$B(t,"x","logSigmoid"),n=zV((t=>({value:IV(lK(IV(t))),gradFunc:e=>oU(e,lU(IV(t)))})));return n(e)}});DB.prototype.logSigmoid=function(){return this.throwIfDisposed(),uK(this)};const hK=eW({logSoftmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=$B(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(e));const a=zV(((t,n)=>{const a=oV(t,e,!0),r=dU(t,a),s=dU(UW(r,"float32"),FV(hV(MV(r),e,!0)));n([s]);return{value:s,gradFunc:(t,n)=>{const[a]=n,r=MV(a);return dU(t,oU(hV(t,e,!0),r))}}}));return a(n)}});DB.prototype.logSoftmax=function(t){return this.throwIfDisposed(),hK(this,t)},DB.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),PV(this,t,e)},DB.prototype.log=function(){return this.throwIfDisposed(),FV(this)},DB.prototype.log1p=function(){return this.throwIfDisposed(),LV(this)},DB.prototype.logicalAnd=function(t){return this.throwIfDisposed(),ZU(this,t)},DB.prototype.logicalNot=function(){return this.throwIfDisposed(),WH(this)};const dK=eW({logicalOr_:function(t,e){const n=$B(t,"a","logicalOr","bool"),a=$B(e,"b","logicalOr","bool");YU(n.shape,a.shape);const r={a:n,b:a};return qB.runKernel("LogicalOr",r)}});DB.prototype.logicalOr=function(t){return this.throwIfDisposed(),dK(this,t)};const pK=eW({logicalXor_:function(t,e){const n=$B(t,"a","logicalXor","bool"),a=$B(e,"b","logicalXor","bool");return YU(n.shape,a.shape),ZU(dK(t,e),WH(ZU(t,e)))}});DB.prototype.logicalXor=function(t){return this.throwIfDisposed(),pK(this,t)},DB.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),kV(this,t,e,n)};const fK=eW({maxPool_:function(t,e,n,a,r){const s=$B(t,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=iU(s,[1,s.shape[0],s.shape[1],s.shape[2]])),tz(4===o.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(o.rank,"."))),tz(sG(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),null!=r&&tz(oz(a),(()=>"Error in maxPool: pad must be an integer when using, "+"dimRoundingMode ".concat(r," but got pad ").concat(a,".")));const c={x:o},l={filterSize:e,strides:n,pad:a,dimRoundingMode:r},u=qB.runKernel(gP,c,l);return i?iU(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});DB.prototype.maxPool=function(t,e,n,a){return this.throwIfDisposed(),fK(this,t,e,n,a)},DB.prototype.max=function(t,e){return this.throwIfDisposed(),oV(this,t,e)},DB.prototype.maximumStrict=function(t){return this.throwIfDisposed(),kj(this,t)},DB.prototype.maximum=function(t){return this.throwIfDisposed(),fj(this,t)},DB.prototype.mean=function(t,e){return this.throwIfDisposed(),EV(this,t,e)},DB.prototype.min=function(t,e){return this.throwIfDisposed(),iV(this,t,e)},DB.prototype.minimumStrict=function(t){return this.throwIfDisposed(),Ij(this,t)},DB.prototype.minimum=function(t){return this.throwIfDisposed(),DV(this,t)};const mK=eW({mirrorPad_:function(t,e,n){tz("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const a=$B(t,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");tz(e.length===a.rank,(()=>"Padding doesn't match input. Must be ".concat(a.rank,". ")+"Got ".concat(e.length,".")));const r="reflect"===n?1:0;for(let i=0;i<a.rank;i++)tz(2===e[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),tz(e[i][0]>=0&&e[i][0]<=a.shape[i]-r&&e[i][1]>=0&&e[i][1]<=a.shape[i]-r,(()=>"Padding in dimension ".concat(i," cannot be greater than or equal ")+"to ".concat(a.shape[i]-r," or less than 0 for input of ")+"shape ".concat(a.shape)));const s={paddings:e,mode:n},o={x:a};return qB.runKernel(vP,o,s)}});DB.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),mK(this,t,e)},DB.prototype.modStrict=function(t){return this.throwIfDisposed(),Sj(this,t)},DB.prototype.mod=function(t){return this.throwIfDisposed(),xj(this,t)},DB.prototype.mulStrict=function(t){return this.throwIfDisposed(),Nj(this,t)},DB.prototype.mul=function(t){return this.throwIfDisposed(),oU(this,t)},DB.prototype.neg=function(){return this.throwIfDisposed(),IV(this)},DB.prototype.norm=function(t,e,n){return this.throwIfDisposed(),pV(this,t,e,n)},DB.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),eK(this,t)},DB.prototype.notEqual=function(t){return this.throwIfDisposed(),CV(this,t)};const gK=eW({oneHot_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(e));const r={indices:$B(t,"indices","oneHot","int32")},s={depth:e,onValue:n,offValue:a};return qB.runKernel(IP,r,s)}});DB.prototype.oneHot=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),gK(this,t,e,n)};const yK=eW({onesLike_:function(t){const e={x:$B(t,"x","onesLike")};return qB.runKernel(kP,e)}});DB.prototype.onesLike=function(){return this.throwIfDisposed(),yK(this)},DB.prototype.pad=function(t,e){return this.throwIfDisposed(),YH(this,t,e)};const bK=eW({pool_:function(t,e,n,a,r,s){null==r&&(r=[1,1]),null==s&&(s=1),0===a&&(a="valid");const o=$B(t,"x","maxPool");let i=o,c=!1;3===o.rank&&(c=!0,i=iU(o,[1,o.shape[0],o.shape[1],o.shape[2]])),tz(sG(s,r),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(r,"'")));const l=function(t,e,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[i,c]=eG(e);let l;if("channelsLast"===o)l=[i,c,t[3],t[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));l=[i,c,t[1],t[1]]}return $V(t,l,n,a,r,s,!1,o)}(i.shape,e,s,r,a),u=[l.dilationHeight,l.dilationWidth];let h;h="same"===a?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))),a=n.map((t=>t-1)),r=a.map((t=>Math.floor(t/2))),s=a.map(((t,e)=>t-r[e]));return a.map(((t,e)=>[r[e],s[e]]))}([l.filterHeight,l.filterWidth],u):[[0,0],[0,0]];const d=1===u[0]&&1===u[1],[p,f]=function(t,e,n){const a=n.map((t=>t[0])),r=n.map((t=>t[1])),s=t.concat(a,r),o=e.map(((t,e)=>(t-s[e]%t)%t)),i=r.map(((t,e)=>t+o[e])),c=e.map(((t,e)=>[a[e],i[e]])),l=e.map(((t,e)=>[0,o[e]]));return[c,l]}([l.inHeight,l.inWidth],u,h),m=d?a:"valid",g=d?i:hG(i,u,p),y=("avg"===n?()=>Pj(g,e,s,m):()=>fK(g,e,s,m))(),b=d?y:$H(y,u,f);return c?iU(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});DB.prototype.pool=function(t,e,n,a,r){return this.throwIfDisposed(),bK(this,t,e,n,a,r)},DB.prototype.powStrict=function(t){return this.throwIfDisposed(),Tj(this,t)},DB.prototype.pow=function(t){return this.throwIfDisposed(),cV(this,t)};const xK=eW({prelu_:function(t,e){const n={x:$B(t,"x","prelu"),alpha:$B(e,"alpha","prelu")};return qB.runKernel(TP,n)}});DB.prototype.prelu=function(t){return this.throwIfDisposed(),xK(this,t)};const vK=eW({prod_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=$B(t,"x","prod");"bool"===a.dtype&&(a=UW(a,"int32"));const r={x:a},s={axis:e,keepDims:n};return qB.runKernel("Prod",r,s)}});DB.prototype.prod=function(t,e){return this.throwIfDisposed(),vK(this,t,e)};const wK=eW({reciprocal_:function(t){const e={x:$B(t,"x","reciprocal")};return qB.runKernel(CP,e)}});DB.prototype.reciprocal=function(){return this.throwIfDisposed(),wK(this)},DB.prototype.relu=function(){return this.throwIfDisposed(),AV(this)};const kK=eW({relu6_:function(t){const e={x:$B(t,"x","relu6")};return qB.runKernel(FP,e)}});DB.prototype.relu6=function(){return this.throwIfDisposed(),kK(this)},DB.prototype.reshapeAs=function(t){return this.throwIfDisposed(),iU(this,t.shape)},DB.prototype.reshape=function(t){return this.throwIfDisposed(),iU(this,t)},DB.prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),KU(this,t,e,n)},DB.prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),qU(this,t,e,n)},DB.prototype.reverse=function(t){return this.throwIfDisposed(),SU(this,t)},DB.prototype.rfft=function(){return this.throwIfDisposed(),kU(this)};const IK=eW({round_:function(t){const e={x:$B(t,"x","round")};return qB.runKernel(MP,e)}});DB.prototype.round=function(){return this.throwIfDisposed(),IK(this)},DB.prototype.rsqrt=function(){return this.throwIfDisposed(),HG(this)};const SK=eW({selu_:function(t){const e={x:$B(t,"x","selu")};return qB.runKernel(PP,e)}});DB.prototype.selu=function(){return this.throwIfDisposed(),SK(this)};const NK=eW({separableConv2d_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const i=$B(t,"x","separableConv2d"),c=$B(e,"depthwiseFilter","separableConv2d"),l=$B(n,"pointwiseFilter","separableConv2d");let u=i,h=!1;if(3===i.rank&&(h=!0,u=iU(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");tz(4===u.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(u.rank,"."))),tz(4===c.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),tz(4===l.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),tz(1===l.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(l.shape[0],"."))),tz(1===l.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(l.shape[1],".")));const d=c.shape[2],p=c.shape[3];tz(l.shape[2]===d*p,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(d*p,", ")+"but got ".concat(l.shape[2],".")));const f=jj(u,c,a,r,o,s),m=kG(f,l,1,"valid",o);return h?iU(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});DB.prototype.separableConv2d=function(t,e,n,a,r,s){return this.throwIfDisposed(),NK(this,t,e,n,a,r,s)},DB.prototype.sigmoid=function(){return this.throwIfDisposed(),lU(this)};const TK=eW({sign_:function(t){const e={x:$B(t,"x","sign")};return qB.runKernel(UP,e)}});DB.prototype.sign=function(){return this.throwIfDisposed(),TK(this)},DB.prototype.sin=function(){return this.throwIfDisposed(),EG(this)},DB.prototype.sinh=function(){return this.throwIfDisposed(),RG(this)},DB.prototype.slice=function(t,e){return this.throwIfDisposed(),uU(this,t,e)};const EK=eW({softmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=$B(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(e));const a={logits:n},r={dim:e};return qB.runKernel(qP,a,r)}});DB.prototype.softmax=function(t){return this.throwIfDisposed(),EK(this,t)},DB.prototype.softplus=function(){return this.throwIfDisposed(),lK(this)},DB.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),hG(this,t,e)},DB.prototype.split=function(t,e){return this.throwIfDisposed(),bU(this,t,e)},DB.prototype.sqrt=function(){return this.throwIfDisposed(),lV(this)},DB.prototype.square=function(){return this.throwIfDisposed(),uV(this)},DB.prototype.squaredDifference=function(t){return this.throwIfDisposed(),OV(this,t)},DB.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),Ej(this,t)},DB.prototype.squeeze=function(t){return this.throwIfDisposed(),fV(this,t)},DB.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof DB?[this,t]:[this,...t];return hU(n,e)},DB.prototype.step=function(t){return this.throwIfDisposed(),WV(this,t)};const CK=eW({stridedSlice_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const l={x:$B(t,"x","stridedSlice")},u={begin:e,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};return qB.runKernel("StridedSlice",l,u)}});DB.prototype.stridedSlice=function(t,e,n,a,r,s,o,i){return this.throwIfDisposed(),CK(this,t,e,n,a,r,s,o,i)},DB.prototype.subStrict=function(t){return this.throwIfDisposed(),Cj(this,t)},DB.prototype.sub=function(t){return this.throwIfDisposed(),dU(this,t)},DB.prototype.sum=function(t,e){return this.throwIfDisposed(),hV(this,t,e)};const RK=eW({tan_:function(t){const e={x:$B(t,"x","tan")};return qB.runKernel("Tan",e)}});DB.prototype.tan=function(){return this.throwIfDisposed(),RK(this)};const _K=eW({tanh_:function(t){const e={x:$B(t,"x","tanh")};return qB.runKernel(YP,e)}});DB.prototype.tanh=function(){return this.throwIfDisposed(),_K(this)},DB.prototype.tile=function(t){return this.throwIfDisposed(),xV(this,t)},DB.prototype.toBool=function(){return this.throwIfDisposed(),UW(this,"bool")},DB.prototype.toFloat=function(){return this.throwIfDisposed(),UW(this,"float32")},DB.prototype.toInt=function(){return this.throwIfDisposed(),UW(this,"int32")};const AK=eW({topk_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=$B(t,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(e>r)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(r,") ")+"but got ".concat(e));const s={x:a},o={k:e,sorted:n},[i,c]=qB.runKernel("TopK",s,o);return{values:i,indices:c}}});DB.prototype.topk=function(t,e){return this.throwIfDisposed(),AK(this,t,e)},DB.prototype.transpose=function(t){return this.throwIfDisposed(),SV(this,t)};const DK=eW({unique_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=$B(t,"x","unique","string_or_numeric");tz(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:e},[s,o]=qB.runKernel("Unique",a,r);return{values:s,indices:o}}});var FK,OK;DB.prototype.unique=function(t){return this.throwIfDisposed(),DK(this,t)},DB.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),KG(this,t,e)},DB.prototype.unstack=function(t){return this.throwIfDisposed(),mU(this,t)},DB.prototype.where=function(t,e){return this.throwIfDisposed(),eV(t,this,e)},DB.prototype.zerosLike=function(){return this.throwIfDisposed(),vU(this)},function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(FK||(FK={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(OK||(OK={}));const MK={};function LK(t){return MK[t]}function zK(t,e,n,a,r){const s=e.inputParams[t];if(s&&void 0!==s.inputIndexStart){const t=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?t+1:s.inputIndexEnd;if("tensor"===s.type)return PK(e.inputNames[s.inputIndexStart],n,a,r);if("tensors"===s.type){return e.inputNames.slice(t,o).map((t=>PK(t,n,a,r)))}const i=PK(e.inputNames.slice(t)[0],n,a,r),c=i.dataSync();return"number"===s.type?c[0]:mz(i.shape,c)}const o=e.attrParams[t];return o&&o.value}function PK(t,e,n,a){const[r,s]=UK(t);if(null!=a){const t=a.getHashTableHandleByName(r);if(null!=t)return t}const o=n.currentContextIds.find((t=>!!e[WK(r,t)]));return void 0!==o?e[WK(r,o)][s]:void 0}function BK(t,e){const[n,a]=UK(t);return[WK(n,e&&e.currentContextId),a]}function WK(t,e){return e?"".concat(t,"-").concat(e):t}function UK(t){const e=t.split(":");if(1===e.length)return[t,0];return[e[0],Number(e[e.length-1])]}function VK(t,e,n){let a=zK("pad",t,e,n);if("explicit"===a){a=zK("explicitPaddings",t,e,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)r[t][0]=a[2*t],r[t][1]=a[2*t+1];return r}return a}function GK(t){return t.kept?t:VW(t)}const HK=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],jK=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],KK=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],qK=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],XK=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],YK=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],QK=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],JK=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],ZK=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],$K=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],tq=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],eq=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],nq=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],aq=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],rq=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],sq=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],oq=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class iq{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[s,o,i,c,l,u,h,m,f,d,g,y,b,x,v,w,p].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=t.node,a=[],r=[],s=[],o=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?a.push(t[e.name]):"Const"===e.op?r.push(t[e.name]):null!=e.input&&0!==e.input.length||s.push(t[e.name]),t)),{});let i=[];const c=[];let l={},u={};null!=e&&(l=this.mapSignatureEntries(e.inputs),u=this.mapSignatureEntries(e.outputs));const h=Object.keys(o);h.forEach((t=>{const e=o[t];e.inputNames.forEach((t=>{const[n]=BK(t);e.inputs.push(o[n]),o[n].children.push(e)}))})),0===Object.keys(u).length?h.forEach((t=>{const e=o[t];0===e.children.length&&c.push(e)})):Object.keys(u).forEach((t=>{const[e]=BK(t),n=o[e];null!=n&&(n.signatureKey=u[t],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((t=>{const[e]=BK(t),n=o[e];n&&(n.signatureKey=l[t],i.push(n))})):i=a;let d={};null!=t.library&&null!=t.library.function&&(d=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const p={nodes:o,inputs:i,outputs:c,weights:r,placeholders:a,signature:e,functions:d};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=LK(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.substr(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const a=n.type;let r;switch(n.type){case"string":r=lq(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=lq(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=xq(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=xq(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=hq(t.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=hq(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=bq(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=bq(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=uq(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=uq(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=wq(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=wq(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=yq(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=yq(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=vq(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=vq(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=fq(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fq(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=mq(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=mq(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=pq(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pq(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(t.op))}return e[n.name]={value:r,type:a},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let a={};null!=e&&(a=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const r=[],s=[];t.signature.inputArg.forEach((t=>{const[e]=BK(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:dq(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,r.push(n),a[e]=n}));Object.keys(a).forEach((t=>{const e=a[t];e.inputNames.forEach((t=>{const[n]=BK(t);e.inputs.push(a[n]),a[n].children.push(e)}))}));const o=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=BK(o[t.name]),r=a[e];null!=r&&(r.defaultOutput=n,s.push(r))}));const i=this.mapArgsToSignature(t);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function cq(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=kz().global;if("undefined"!==typeof e.atob)return e.atob(t);if("undefined"!==typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function lq(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=t[e];return null!=r?cq(r.s,a):n}function uq(t,e,n){const a=t[e];return a?a.b:n}function hq(t,e,n){const a=t[e]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function dq(t){switch("string"===typeof t&&(t=FK[t]),t){case FK.DT_FLOAT:return"float32";case FK.DT_INT32:case FK.DT_INT64:case FK.DT_INT8:case FK.DT_UINT8:return"int32";case FK.DT_BOOL:return"bool";case FK.DT_DOUBLE:return"float32";case FK.DT_STRING:return"string";default:return null}}function pq(t,e,n){const a=t[e];return a&&a.func?a.func.name:n}function fq(t,e,n){const a=t[e];return a&&a.type?dq(a.type):n}function mq(t,e,n){const a=t[e];return a&&a.list&&a.list.type?a.list.type.map((t=>dq(t))):n}function gq(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"===typeof t.size?t.size:parseInt(t.size,10))):[]}function yq(t,e,n){const a=t[e];return a&&a.shape?gq(a.shape):n}function bq(t,e,n){const a=t[e];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((t=>"number"===typeof t?t:parseInt(t,10))):n}function xq(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=t[e];return r&&r.list&&r.list.s?r.list.s.map((t=>cq(t,a))):n}function vq(t,e,n){const a=t[e];return a&&a.list&&a.list.shape?a.list.shape.map((t=>gq(t))):n}function wq(t,e,n){const a=t[e];return a&&a.list&&a.list.b?a.list.b:n}class kq{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return PK(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return PK(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return hq(this.node.rawAttrs,t,e);if(null!=n.s)return lq(this.node.rawAttrs,t,e);if(null!=n.b)return uq(this.node.rawAttrs,t,e);if(null!=n.shape)return yq(this.node.rawAttrs,t,e);if(null!=n.type)return fq(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return bq(this.node.rawAttrs,t,e);if(null!=n.list.s)return xq(this.node.rawAttrs,t,e);if(null!=n.list.shape)return vq(this.node.rawAttrs,t,e);if(null!=n.list.b)return wq(this.node.rawAttrs,t,e);if(null!=n.list.type)return mq(this.node.rawAttrs,t,e)}return e}}const Iq=eW({addN_:function(t){tz(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),tz(t.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(t.length)));const e=t.map(((t,e)=>$B(t,"tensors".concat(e),"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!sz(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=e;return qB.runKernel(_z,a)}});function Sq(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";tz(function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}(t,e),(()=>n+" Shapes ".concat(t," and ").concat(e," must match")))}class Nq{constructor(t,e,n,a,r,s,o){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=cU(0),yV(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(t<0||t>=this.size())throw new Error("Tried to read from index ".concat(t,", but array size is: ").concat(this.size()));const e=this.tensors[t];if(e.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(t," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error("Tried to write to index ".concat(t,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,",\n          because the value dtype is ").concat(e.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),Sq(this.elementShape,e.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,", because it has already been written."));n.tensor=e,yV(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(t.length," is not the same as tensors size: ").concat(e.length,"."));t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(e));if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return rW([],[0].concat(this.elementShape));const n=this.readMany(t);return Sq(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),hU(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(t));if(0===this.size())return rW([],[0].concat(this.elementShape));const e=[];for(let a=0;a<this.size();a++)e.push(a);const n=this.readMany(e);return Sq(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),nU(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(e.dtype));if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(t,mU(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(e.dtype));let n=0;const a=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(e.shape));if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(t.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:e.size/n,s=[];gV((()=>{e=iU(e,[1,n,r]);for(let n=0;n<t.length;++n){const o=[0,0===n?0:a[n-1],0],i=[1,t[n],r];s[n]=iU(uU(e,o,i),this.elementShape)}return s}));const o=[];for(let i=0;i<t.length;i++)o[i]=i;this.writeMany(o,s)}}class Tq{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(t.dtype));Sq(e,t.shape,"TensorList shape mismatch: "),yV(t)})),this.idTensor=cU(0),this.maxNumElements=a,yV(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Tq([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));return Sq(t,this.elementShape,"TensorList shape mismatch: "),gV((()=>{const e=this.tensors.map((e=>iU(e,t)));return hU(e,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return Sq(n.shape,t,"TensorList shape mismatch: "),iU(n,t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(Sq(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");yV(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(t));if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error("TensorListResize input size ".concat(t," is greater maxNumElement ").concat(this.maxNumElements,"."));this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(t<0||t>this.tensors.length)throw new Error("Trying to access element ".concat(t," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[t])throw new Error("element at index ".concat(t," is null."));return Sq(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error("Trying to set element ".concat(t," in a list with max ").concat(this.maxNumElements," elements."));Sq(this.elementShape,e.shape,"TensorList shape mismatch: "),yV(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));return Sq(this.elementShape,n,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?rW([],[0].concat(this.elementShape)):gV((()=>{const e=t.map((t=>iU(this.tensors[t],n)));return hU(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(t));return Sq(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?rW([],[0].concat(this.elementShape)):gV((()=>{const t=this.tensors.map((t=>iU(t,e)));return nU(t,0)}))}}const Eq=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const a=zK("thenBranch",t,e,n),r=zK("elseBranch",t,e,n),s=zK("cond",t,e,n),o=zK("args",t,e,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=zK("body",t,e,n),r=zK("cond",t,e,n),s=zK("args",t,e,n),o=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((t=>t.id));let c=await o[0].data();o.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||t.dispose()}));let l=s;for(;c[0];){const t=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map((t=>t.id));t.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await s[0].data(),s.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return l}case"LoopCond":return[GK(zK("pred",t,e,n))];case"Switch":{const a=zK("pred",t,e,n);let r=zK("data",t,e,n);return r.kept||(r=GK(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=t.inputNames.find((t=>void 0!==PK(t,e,n)));if(a){return[GK(PK(a,e,n))]}return}case"Enter":{const a=zK("frameName",t,e,n),r=zK("tensor",t,e,n);return n.enterFrame(a),[GK(r)]}case"Exit":{const a=zK("tensor",t,e,n);return n.exitFrame(),[GK(a)]}case"NextIteration":{const a=zK("tensor",t,e,n);return n.nextIteration(),[GK(a)]}case"TensorArrayV3":{const a=zK("size",t,e,n),r=zK("dtype",t,e,n),s=zK("elementShape",t,e,n),o=zK("dynamicSize",t,e,n),i=zK("clearAfterRead",t,e,n),c=zK("identicalElementShapes",t,e,n),l=zK("name",t,e,n),u=new Nq(l,r,a,s,c,o,i);return n.addTensorArray(u),[u.idTensor,cU(1)]}case"TensorArrayWriteV3":{const a=zK("tensorArrayId",t,e,n),r=zK("index",t,e,n),s=zK("tensor",t,e,n),o=n.getTensorArray(a.id);return o.write(r,s),[o.idTensor]}case"TensorArrayReadV3":{const a=zK("tensorArrayId",t,e,n),r=zK("index",t,e,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=zK("tensorArrayId",t,e,n),r=zK("indices",t,e,n),s=zK("dtype",t,e,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=zK("tensorArrayId",t,e,n),r=zK("indices",t,e,n),s=zK("tensor",t,e,n),o=n.getTensorArray(a.id);return o.scatter(r,s),[o.idTensor]}case"TensorArrayConcatV3":{const a=zK("tensorArrayId",t,e,n),r=n.getTensorArray(a.id),s=zK("dtype",t,e,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=zK("tensorArrayId",t,e,n),r=zK("tensor",t,e,n),s=zK("lengths",t,e,n),o=n.getTensorArray(a.id);return o.split(s,r),[o.idTensor]}case"TensorArraySizeV3":{const a=zK("tensorArrayId",t,e,n);return[cU(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{const a=zK("tensorArrayId",t,e,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=zK("tensorListId",t,e,n),r=zK("index",t,e,n),s=zK("tensor",t,e,n),o=n.getTensorList(a.id);return o.setItem(r,s),[o.idTensor]}case"TensorListGetItem":{const a=zK("tensorListId",t,e,n),r=zK("index",t,e,n),s=zK("elementShape",t,e,n),o=zK("elementDType",t,e,n);return[n.getTensorList(a.id).getItem(r,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=zK("indices",t,e,n),r=function(t,e,n,a){if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const r=Math.max(...e);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const s=new Tq([],n,t.dtype,a),o=mU(t,0);return e.forEach(((t,e)=>{s.setItem(t,o[e])})),s}(zK("tensor",t,e,n),a,zK("elementShape",t,e,n),zK("numElements",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=zK("elementShape",t,e,n),r=zK("elementDType",t,e,n);let s;s="TensorListReserve"===t.op?"numElements":"maxNumElements";const o=function(t,e,n){return new Tq([],t,e,n)}(a,r,zK(s,t,e,n));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const a=zK("tensorListId",t,e,n),r=zK("indices",t,e,n),s=zK("elementShape",t,e,n),o=zK("elementDType",t,e,n);return[n.getTensorList(a.id).gather(r,o,s)]}case"TensorListStack":{const a=zK("tensorListId",t,e,n),r=zK("elementShape",t,e,n),s=zK("elementDType",t,e,n),o=zK("numElements",t,e,n);return[n.getTensorList(a.id).stack(r,s,o)]}case"TensorListFromTensor":{const a=function(t,e,n){const a=t.dtype;if(t.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(t.shape));if(t.dtype!==n)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(n));Sq(t.shape.slice(1),e,"TensorList shape mismatch: ");const r=mU(t);return new Tq(r,e,a)}(zK("tensor",t,e,n),zK("elementShape",t,e,n),zK("elementDType",t,e,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":{const a=zK("tensorListId",t,e,n),r=n.getTensorList(a.id),s=zK("dtype",t,e,n),o=zK("elementShape",t,e,n);return[r.concat(s,o)]}case"TensorListPushBack":{const a=zK("tensorListId",t,e,n),r=zK("tensor",t,e,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=zK("tensorListId",t,e,n),r=zK("elementShape",t,e,n),s=zK("elementDType",t,e,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=zK("tensor",t,e,n),r=zK("elementShape",t,e,n),s=function(t,e,n){let a=0;const r=e.map((t=>(a+=t,a)));if(a!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(t.shape));const s=0===a?0:t.size/a,o=gV((()=>{const o=[];t=iU(t,[1,a,s]);for(let a=0;a<e.length;++a){const i=[0,0===a?0:r[a-1],0],c=[1,e[a],s];o[a]=iU(uU(t,i,c),n)}return t.dispose(),o})),i=new Tq([],n,t.dtype,e.length);for(let c=0;c<o.length;c++)i.setItem(c,o[c]);return i}(a,zK("lengths",t,e,n),r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}};function Cq(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return oU(t,WV(e));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function Rq(t,e){let n=e;const a=XU(t.shape,e.shape);return a.length>0&&(n=hV(n,a)),iU(n,t.shape)}function _q(t,e,n,a){if("linear"===e)return t;if("relu"===e)return AV(t);if("elu"===e)return Yj(t);if("relu6"===e)return kK(t);if("prelu"===e)return xK(t,n);if("leakyrelu"===e)return iK(t,a);throw new Error("Unknown fused activation ".concat(e,"."))}const Aq=(t,e)=>!(t>0)||"linear"===e;const Dq=eW({fusedConv2d_:function(t){let{x:e,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}=t;if(l=l||"linear",!1===Aq(qB.state.gradientDepth,l)){let t=kG(e,n,a,r,s,o,i);return null!=c&&(t=eU(t,c)),_q(t,l,u,h)}const d=$B(e,"x","conv2d"),p=$B(n,"filter","conv2d");let f=d,m=!1;3===d.rank&&(m=!0,f=iU(d,[1,d.shape[0],d.shape[1],d.shape[2]])),tz(4===f.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(f.rank,"."))),tz(4===p.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(p.rank,"."))),null!=i&&tz(oz(r),(()=>"Error in fused conv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(i," but got pad ").concat(r,"."))),tz(f.shape[3]===p.shape[2],(()=>"Error in conv2d: depth of input (".concat(f.shape[3],") must match ")+"input depth for filter ".concat(p.shape[2],"."))),tz(sG(a,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'"))),tz("NHWC"===s,(()=>"Error in conv2d: got dataFormat of ".concat(s," but only NHWC is currently supported.")));const g=$V(f.shape,p.shape,a,o,r,i);let y,b;null!=c&&(y=$B(c,"bias","fused conv2d"),[y]=UB(y,d),YU(g.outShape,y.shape)),null!=u&&(b=$B(u,"prelu weights","fused conv2d"));const x=(t,e)=>{const[n,s,i,c]=e,u=Cq(t,i,l);tz(rG(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const h=[vG(s.shape,u,n,a,r),xG(s,u,n.shape,a,r)];if(null!=c){const t=Rq(c,u);h.push(t)}return h},v={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==c){const t=zV(((t,e,n)=>{let a=qB.runKernel(rB,v,w);return n([e,t,a]),m&&(a=iU(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return t(f,p)}{const t=zV(((t,e,n,a)=>{let r=qB.runKernel(rB,v,w);return a([e,t,r,n]),m&&(r=iU(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return t(f,p,y)}}});const Fq=eW({fusedDepthwiseConv2d_:function(t){let{x:e,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}=t;if(!1===Aq(qB.state.gradientDepth,l)){let t=jj(e,n,a,r,s,o,i);return null!=c&&(t=eU(t,c)),_q(t,l,u,h)}const d=$B(e,"x","depthwiseConv2d"),p=$B(n,"filter","depthwiseConv2d");let f=d,m=!1;3===d.rank&&(m=!0,f=iU(d,[1,d.shape[0],d.shape[1],d.shape[2]])),tz(4===f.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(f.rank,"."))),tz(4===p.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(p.rank,"."))),tz(f.shape[3]===p.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(f.shape[3],") must match the inChannels dimension in ")+"filter ".concat(p.shape[2],"."))),null==o&&(o=[1,1]),tz(sG(a,o),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(o,"'"))),null!=i&&tz(oz(r),(()=>"Error in fused depthwiseConv2d: pad must be an integer when "+"using dimRoundingMode ".concat(i," but got pad ").concat(r,".")));const g=$V(f.shape,p.shape,a,o,r,i,!0);let y,b;null!=c&&(y=$B(c,"bias","fused conv2d"),[y]=UB(y,d),YU(g.outShape,y.shape)),null!=u&&(b=$B(u,"prelu weights","fused depthwiseConv2d"));const x=(t,e)=>{tz(rG(o),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'")));const[n,s,c,u]=e,h=Cq(t,c,l),d=OG(s.shape,h,n,a,r,o,i),p=FG(s,h,n.shape,a,r,o,i);if(null!=u){return[d,p,Rq(y,h)]}return[d,p]},v={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==c){const t=zV(((t,e,n)=>{let a=qB.runKernel(sB,v,w);return n([e,t,a]),m&&(a=iU(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return t(f,p)}{const t=zV(((t,e,n,a)=>{let r=qB.runKernel(sB,v,w);return a([e,t,r,n]),m&&(r=iU(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return t(f,p,y)}}});const Oq=eW({fusedMatMul_:function(t){let{a:e,b:n,transposeA:a=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:c}=t;if(!1===Aq(qB.state.gradientDepth,o)){let t=kV(e,n,a,r);return null!=s&&(t=eU(t,s)),_q(t,o,i,c)}let l=$B(e,"a","fused matMul"),u=$B(n,"b","fused matMul");[l,u]=UB(l,u);const h=a?l.shape[l.rank-2]:l.shape[l.rank-1],d=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=a?l.shape[l.rank-1]:l.shape[l.rank-2],f=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),g=u.shape.slice(0,-2),y=rz(m),b=rz(g);tz(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>"Error in fused matMul: inputs must have the same rank of at "+"least 2, got ranks ".concat(l.rank," and ").concat(u.rank,"."))),tz(sz(m,g),(()=>"Error in fused matMul: outer dimensions (".concat(m,") and (")+"".concat(g,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(u.shape," must match."))),tz(h===d,(()=>"Error in fused matMul: inner shapes (".concat(h,") and (")+"".concat(d,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(u.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const x=l.shape.slice(0,-2).concat([p,f]),v=iU(l,a?[y,h,p]:[y,p,h]),w=iU(u,r?[b,f,d]:[b,d,f]);let k,I;null!=s&&(k=$B(s,"bias","fused matMul"),[k]=UB(k,l),YU(x,k.shape)),null!=i&&(I=$B(i,"prelu weights","fused matMul"));const S=(t,e)=>{const[n,i,c,l]=e,u=Cq(iU(t,c.shape),c,o);let h,d;if(a||r?!a&&r?(h=kV(u,i,!1,!1),d=kV(u,n,!0,!1)):a&&!r?(h=kV(i,u,!1,!0),d=kV(n,u,!1,!1)):(h=kV(i,u,!0,!0),d=kV(u,n,!0,!0)):(h=kV(u,i,!1,!0),d=kV(n,u,!0,!1)),null!=s){return[h,d,Rq(l,u)]}return[h,d]},N={a:v,b:w,bias:k,preluActivationWeights:I},T={transposeA:a,transposeB:r,activation:o,leakyreluAlpha:c};if(null==s){const t=zV(((t,e,n)=>{const a=qB.runKernel(aB,N,T);return n([t,e,a]),{value:iU(a,x),gradFunc:S}}));return t(v,w)}{const t=zV(((t,e,n,a)=>{const r=qB.runKernel(aB,N,T);return a([t,e,r,n]),{value:iU(r,x),gradFunc:S}}));return t(v,w,k)}}});const Mq=eW({conv3d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=$B(t,"x","conv3d"),i=$B(e,"filter","conv3d");let c=o,l=!1;4===o.rank&&(l=!0,c=iU(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),tz(5===c.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(c.rank,"."))),tz(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),tz(c.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(c.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),tz(sG(n,s),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),tz("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported.")));const u={x:c,filter:i},h={strides:n,pad:a,dataFormat:r,dilations:s},d=qB.runKernel(Yz,u,h);return l?iU(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Lq=eW({maxPoolWithArgmax_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s={x:$B(t,"x","maxPoolWithArgmax")},o={filterSize:e,strides:n,pad:a,includeBatchInIndex:r},i=qB.runKernel("MaxPoolWithArgmax",s,o);return{result:i[0],indexes:i[1]}}});const zq=eW({avgPool3d_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",o=arguments.length>6?arguments[6]:void 0;null==o?o=[1,1,1]:mV("dilations is deprecated, this field will be gone in v3.0.0.");const i=$B(t,"x","avgPool3d","float32");let c=i,l=!1;4===i.rank&&(l=!0,c=iU(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),tz(5===c.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(c.rank,"."))),tz("NDHWC"===s,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),tz(sG(n,o),(()=>"Error in avgPool3d: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(o,"'"))),null!=r&&tz(oz(a),(()=>"Error in avgPool3d: pad must be an integer when using, "+"dimRoundingMode ".concat(r," but got pad ").concat(a,".")));const u={x:c},h={filterSize:e,strides:n,pad:a,dimRoundingMode:r,dataFormat:s,dilations:o};let d=qB.runKernel(Bz,u,h);return d=UW(d,c.dtype),l?iU(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Pq=eW({maxPool3d_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",o=arguments.length>6?arguments[6]:void 0;null==o?o=[1,1,1]:mV("dilations is deprecated, this field will be gone in v3.0.0.");const i=$B(t,"x","maxPool3d");let c=i,l=!1;4===i.rank&&(l=!0,c=iU(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),tz(5===c.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(c.rank,"."))),tz("NDHWC"===s,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),tz(sG(n,o),(()=>"Error in maxPool3d: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(o,"'"))),null!=r&&tz(oz(a),(()=>"Error in maxPool3d: pad must be an integer when using, "+"dimRoundingMode ".concat(r," but got pad ").concat(a,".")));const u={x:c},h={filterSize:e,strides:n,pad:a,dimRoundingMode:r,dataFormat:s,dilations:o},d=qB.runKernel(yP,u,h);return l?iU(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});function Bq(t,e,n){const[a,r]=zK("fusedOps",t,e,n),s="biasadd"===a,o="prelu"===r,i="fusedbatchnorm"===a,c=zK("numArgs",t,e,n);if(s){if(o&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=zK("strides",t,e,n),u=VK(t,e,n),h=zK("dataFormat",t,e,n).toUpperCase(),d=zK("dilations",t,e,n),[p,f]=zK("args",t,e,n);return{stride:l,pad:u,dataFormat:h,dilations:d,biasArg:p,preluArg:f,activationFunc:r,leakyreluAlpha:zK("leakyreluAlpha",t,e,n)}}function Wq(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:t,stop:e,num:n};return qB.runKernel("LinSpace",{},a)}const Uq=eW({multinomial_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=$B(t,"logits","multinomial"),s=r.size,o=r.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(s,"."));if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(o));n=n||Math.random();const i={logits:1===o?iU(r,[1,-1]):r},c={numSamples:e,seed:n,normalized:a},l=qB.runKernel("Multinomial",i,c);return 1===o?iU(l,[l.size]):l}});var Vq=n(282);class Gq{constructor(t,e,n,a,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=Vq.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*a*o,e=this.mean+this.stdDev*r*o,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Hq{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(t," - ").concat(e," <= 1 and dtype is not float"));this.random=Vq.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const jq=eW({randomUniform_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>4?arguments[4]:void 0;const r=WW(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),s=new Hq(e,n,null,a);for(let o=0;o<r.values.length;o++)r.values[o]=s.nextValue();return r.toTensor()}});const Kq=eW({truncatedNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new Gq(e,n,a,!0,r),o=WW(t,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const qq=async function(t){const e=$B(t,"condition","whereAsync","bool"),n=await e.data(),a=function(t,e){const n=[];for(let s=0;s<e.length;s++)e[s]&&n.push(s);const a=WW(t,"int32"),r=WW([n.length,t.length],"int32");for(let s=0;s<n.length;s++){const e=a.indexToLoc(n[s]),o=s*t.length;r.values.set(e,o)}return r.toTensor()}(e.shape,n);return t!==e&&e.dispose(),a};const Xq=async function(t,e){const n=$B(t,"x","setdiff1d"),a=$B(e,"y","setdiff1d");tz(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),tz(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),tz(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const r=await n.data(),s=await a.data(),o=new Set(s);let i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;const c=new CB([i],n.dtype),l=new CB([i],"int32");for(let u=0,h=0;u<r.length;u++)o.has(r[u])||(c.values[h]=r[u],l.values[h]=u,h++);return[c.toTensor(),l.toTensor()]};function Yq(t,e,n){return{boxes:zK("boxes",t,e,n),scores:zK("scores",t,e,n),maxOutputSize:zK("maxOutputSize",t,e,n),iouThreshold:zK("iouThreshold",t,e,n),scoreThreshold:zK("scoreThreshold",t,e,n),softNmsSigma:zK("softNmsSigma",t,e,n)}}class Qq{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=cU(0),this.tensorMap=new Map,yV(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),gV((()=>{const t=mU(e),a=n.length,r=t.length;tz(a===r,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements."));for(let e=0;e<a;e++){const a=n[e],r=t[e];yV(r),this.tensorMap.set(a,r)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return gV((()=>{const t=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,e);t.push(s)}return hU(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(t.dtype));if(e.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(e.dtype))}}const Jq=eW({sparseToDense_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const r=$B(t,"sparseIndices","sparseToDense","int32"),s=$B(e,"sparseValues","sparseToDense"),o=$B(a,"defaultValue","sparseToDense",s.dtype);!function(t,e,n,a){if("int32"!==t.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(t.shape,"."));const r=t.rank>0?t.shape[0]:1,s=t.rank>1?t.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(s,"."));const o=e.size;if(0!==e.rank&&(1!==e.rank||o!==r))throw new Error("sparseValues has incorrect shape "+"".concat(e.shape,", should be [] or [").concat(r,"]"));if(e.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,o);const i={sparseIndices:r,sparseValues:s,defaultValue:o},c={outputShape:n};return qB.runKernel("SparseToDense",i,c)}});const Zq=eW({bincount_:function(t,e,n){const a=$B(t,"x","bincount"),r=$B(e,"weights","bincount");tz("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),tz(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),tz(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const s={x:a,weights:r},o={size:n};return qB.runKernel("Bincount",s,o)}});const $q=eW({denseBincount_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=$B(t,"x","denseBincount"),s=$B(e,"weights","denseBincount");tz("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),tz(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),tz(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),tz(s.size===r.size||0===s.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(s.shape,".")));const o={x:r,weights:s},i={size:n,binaryOutput:a};return qB.runKernel("DenseBincount",o,i)}});function tX(t,e,n){if(e.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if(t.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(e.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: ".concat(e.shape));if(0===t.size)throw new Error("Updates specified for empty output. updates shape: ".concat(t.shape))}!function(t,e,n){const a=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(e.shape,", shape: ").concat(t)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(s+" update.rank < ".concat(r,". "));if(t.length<a+(n.rank-r))throw new Error(s+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+t.length-a)throw new Error(s+" update.rank != ".concat(r+t.length-a));for(let o=0;o<r;++o)if(n.shape[o]!==e.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(e.shape[o],")."));for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==t[o+a])throw new Error(s+" updates.shape[".concat(o+r,"] (").concat(n.shape[o+r],") != shape[").concat(o+r,"] (").concat(t[o+r],")"))}(n,e,t)}const eX=eW({scatterND_:function(t,e,n){const a=$B(t,"indices","scatterND","int32"),r=$B(e,"updates","scatterND");tX(r,a,n);const s={indices:a,updates:r},o={shape:n};return qB.runKernel("ScatterNd",s,o)}});const nX=eW({gatherND_:function(t,e){const n=$B(e,"indices","gatherND","int32"),a={params:$B(t,"x","gatherND"),indices:n};return qB.runKernel("GatherNd",a)}});function aX(t,e,n,a){const r=((t,e,n)=>{switch(t.category){case"arithmetic":return gV((()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[eU(zK("a",t,e,n),zK("b",t,e,n))];case"AddN":return[Iq(zK("tensors",t,e,n))];case"FloorMod":case"Mod":return[xj(zK("a",t,e,n),zK("b",t,e,n))];case"Mul":return[oU(zK("a",t,e,n),zK("b",t,e,n))];case"RealDiv":case"Div":return[sU(zK("a",t,e,n),zK("b",t,e,n))];case"DivNoNan":return[qj(zK("a",t,e,n),zK("b",t,e,n))];case"FloorDiv":return[rU(zK("a",t,e,n),zK("b",t,e,n))];case"Sub":return[dU(zK("a",t,e,n),zK("b",t,e,n))];case"Minimum":return[DV(zK("a",t,e,n),zK("b",t,e,n))];case"Maximum":return[fj(zK("a",t,e,n),zK("b",t,e,n))];case"Pow":return[cV(zK("a",t,e,n),zK("b",t,e,n))];case"SquaredDifference":return[OV(zK("a",t,e,n),zK("b",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"basic_math":return gV((()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[nV(zK("x",t,e,n))];case"Acos":return[yj(zK("x",t,e,n))];case"Acosh":return[bj(zK("x",t,e,n))];case"Asin":return[Fj(zK("x",t,e,n))];case"Asinh":return[Oj(zK("x",t,e,n))];case"Atan":return[Mj(zK("x",t,e,n))];case"Atan2":return[Lj(zK("x",t,e,n),zK("y",t,e,n))];case"Atanh":return[zj(zK("x",t,e,n))];case"Ceil":return[Wj(zK("x",t,e,n))];case"Complex":return[nW(zK("real",t,e,n),zK("imag",t,e,n))];case"Cos":return[jH(zK("x",t,e,n))];case"Cosh":return[qH(zK("x",t,e,n))];case"Elu":return[Yj(zK("x",t,e,n))];case"Erf":return[nK(zK("x",t,e,n))];case"Exp":return[MV(zK("x",t,e,n))];case"Expm1":return[aK(zK("x",t,e,n))];case"Floor":return[vH(zK("x",t,e,n))];case"Log":return[FV(zK("x",t,e,n))];case"Log1p":return[LV(zK("x",t,e,n))];case"Imag":return[gU(zK("x",t,e,n))];case"Neg":return[IV(zK("x",t,e,n))];case"Reciprocal":return[wK(zK("x",t,e,n))];case"Real":return[yU(zK("x",t,e,n))];case"Relu":return[AV(zK("x",t,e,n))];case"Round":return[IK(zK("x",t,e,n))];case"Selu":return[SK(zK("x",t,e,n))];case"Sigmoid":return[lU(zK("x",t,e,n))];case"Sin":return[EG(zK("x",t,e,n))];case"Sign":return[TK(zK("x",t,e,n))];case"Sinh":return[RG(zK("x",t,e,n))];case"Softplus":return[lK(zK("x",t,e,n))];case"Sqrt":return[lV(zK("x",t,e,n))];case"Square":return[uV(zK("x",t,e,n))];case"Tanh":return[_K(zK("x",t,e,n))];case"Tan":return[RK(zK("x",t,e,n))];case"ClipByValue":return[Uj(zK("x",t,e,n),zK("clipValueMin",t,e,n),zK("clipValueMax",t,e,n))];case"Relu6":return[kK(zK("x",t,e,n))];case"Rsqrt":return[HG(PK(t.inputNames[0],e,n))];case"Prod":return[vK(zK("x",t,e,n),zK("axes",t,e,n))];case"LeakyRelu":return[iK(zK("x",t,e,n),zK("alpha",t,e,n))];case"Prelu":return[xK(zK("x",t,e,n),zK("alpha",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"control":return Eq(t,e,n);case"convolution":return gV((()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const a=zK("stride",t,e,n),r=zK("pad",t,e,n),s=zK("dataFormat",t,e,n).toUpperCase(),o=zK("dilation",t,e,n);return[Vj(zK("x",t,e,n),zK("filter",t,e,n),a,r,s,o)]}case"Conv2D":{const a=zK("strides",t,e,n),r=VK(t,e,n),s=zK("dataFormat",t,e,n).toUpperCase(),o=zK("dilations",t,e,n);return[kG(zK("x",t,e,n),zK("filter",t,e,n),[a[1],a[2]],r,s,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:a,pad:r,dataFormat:s,dilations:o,biasArg:i,preluArg:c,activationFunc:l,leakyreluAlpha:u}=Bq(t,e,n);return[Dq({x:zK("x",t,e,n),filter:zK("filter",t,e,n),strides:[a[1],a[2]],pad:r,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:c,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:r,dataFormat:s,dilations:o,biasArg:i,preluArg:c,activationFunc:l,leakyreluAlpha:u}=Bq(t,e,n);return[Fq({x:zK("x",t,e,n),filter:zK("filter",t,e,n),strides:[a[1],a[2]],pad:r,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:c,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=zK("outputShape",t,e,n),r=zK("strides",t,e,n),s=VK(t,e,n);return[Gj(zK("x",t,e,n),zK("filter",t,e,n),a,[r[1],r[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=zK("strides",t,e,n),r=VK(t,e,n),s=zK("dilations",t,e,n),o=zK("dataFormat",t,e,n).toUpperCase();return[jj(zK("input",t,e,n),zK("filter",t,e,n),[a[1],a[2]],r,o,[s[1],s[2]])]}case"Conv3D":{const a=zK("strides",t,e,n),r=zK("pad",t,e,n),s=zK("dataFormat",t,e,n).toUpperCase(),o=zK("dilations",t,e,n);return[Mq(zK("x",t,e,n),zK("filter",t,e,n),[a[1],a[2],a[3]],r,s,[o[1],o[2],o[3]])]}case"AvgPool":{const a=zK("strides",t,e,n),r=zK("pad",t,e,n),s=zK("kernelSize",t,e,n);return[Pj(zK("x",t,e,n),[s[1],s[2]],[a[1],a[2]],r)]}case"MaxPool":{const a=zK("strides",t,e,n),r=zK("pad",t,e,n),s=zK("kernelSize",t,e,n);return[fK(zK("x",t,e,n),[s[1],s[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{const a=zK("strides",t,e,n),r=zK("pad",t,e,n),s=zK("kernelSize",t,e,n),o=zK("includeBatchInIndex",t,e,n),{result:i,indexes:c}=Lq(zK("x",t,e,n),[s[1],s[2]],[a[1],a[2]],r,o);return[i,c]}case"AvgPool3D":{const a=zK("strides",t,e,n),r=zK("pad",t,e,n),s=zK("kernelSize",t,e,n);return[zq(zK("x",t,e,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{const a=zK("strides",t,e,n),r=zK("pad",t,e,n),s=zK("kernelSize",t,e,n);return[Pq(zK("x",t,e,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{const a=zK("strides",t,e,n),r=zK("pad",t,e,n),s=zK("dilations",t,e,n),o=a[1],i=a[2],c=s[1],l=s[2];return[Kj(zK("x",t,e,n),zK("filter",t,e,n),[o,i],r,[c,l],"NHWC")]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"creation":return gV((()=>((t,e,n)=>{switch(t.op){case"Fill":{const a=zK("shape",t,e,n),r=zK("dtype",t,e,n);return[CU(a,zK("value",t,e,n),r)]}case"LinSpace":return[Wq(zK("start",t,e,n),zK("stop",t,e,n),zK("num",t,e,n))];case"Multinomial":{const a=zK("logits",t,e,n),r=zK("numSamples",t,e,n),s=zK("seed",t,e,n);return[Uq(a,r,s)]}case"OneHot":{const a=zK("indices",t,e,n),r=zK("depth",t,e,n),s=zK("onValue",t,e,n),o=zK("offValue",t,e,n);return[gK(a,r,s,o)]}case"Ones":return[RV(zK("shape",t,e,n),zK("dtype",t,e,n))];case"OnesLike":return[yK(zK("x",t,e,n))];case"RandomUniform":return[jq(zK("shape",t,e,n),zK("minval",t,e,n),zK("maxval",t,e,n),zK("dtype",t,e,n))];case"Range":return[$U(zK("start",t,e,n),zK("stop",t,e,n),zK("step",t,e,n),zK("dtype",t,e,n))];case"TruncatedNormal":{const a=zK("shape",t,e,n),r=zK("mean",t,e,n),s=zK("stdDev",t,e,n),o=zK("seed",t,e,n);return[Kq(a,r,s,zK("dtype",t,e,n),o)]}case"Zeros":return[xU(zK("shape",t,e,n),zK("dtype",t,e,n))];case"ZerosLike":return[vU(zK("x",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:r,maxOutputSize:s,iouThreshold:o,scoreThreshold:i,softNmsSigma:c}=Yq(t,e,n),l=await BV.nonMaxSuppressionWithScoreAsync(a,r,s,o,i,c);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:r,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=Yq(t,e,n),c=zK("padToMaxOutputSize",t,e,n),l=await BV.nonMaxSuppressionPaddedAsync(a,r,s,o,i,c);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:r,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=Yq(t,e,n);return[await BV.nonMaxSuppressionAsync(a,r,s,o,i)]}case"Where":{const a=UW(zK("condition",t,e,n),"bool"),r=[await qq(a)];return a.dispose(),r}case"ListDiff":return Xq(zK("x",t,e,n),zK("y",t,e,n));default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n);case"evaluation":return gV((()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const a=zK("x",t,e,n),r=zK("k",t,e,n),s=zK("sorted",t,e,n),o=AK(a,r,s);return[o.values,o.indices]}case"Unique":{const a=zK("x",t,e,n),r=DK(a);return[r.values,r.indices]}case"UniqueV2":{const a=zK("x",t,e,n),r=zK("axis",t,e,n),s=DK(a,r);return[s.values,s.indices]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"image":return gV((()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const a=zK("images",t,e,n),r=zK("size",t,e,n),s=zK("alignCorners",t,e,n),o=zK("halfPixelCenters",t,e,n);return[BV.resizeBilinear(a,[r[0],r[1]],s,o)]}case"ResizeNearestNeighbor":{const a=zK("images",t,e,n),r=zK("size",t,e,n),s=zK("alignCorners",t,e,n),o=zK("halfPixelCenters",t,e,n);return[BV.resizeNearestNeighbor(a,[r[0],r[1]],s,o)]}case"CropAndResize":{const a=zK("image",t,e,n),r=zK("boxes",t,e,n),s=zK("boxInd",t,e,n),o=zK("cropSize",t,e,n),i=zK("method",t,e,n),c=zK("extrapolationValue",t,e,n);return[BV.cropAndResize(a,r,s,o,i,c)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"graph":return gV((()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const a=zK("default",t,e,n);return[PK(t.name,e,n)||a];case"Placeholder":return[PK(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[GK(zK("x",t,e,n))];case"IdentityN":return zK("x",t,e,n).map((t=>GK(t)));case"Shape":return[pU(zK("x",t,e,n).shape,"int32")];case"ShapeN":return zK("x",t,e,n).map((t=>pU(t.shape)));case"Size":return[cU(zK("x",t,e,n).size,"int32")];case"Rank":return[cU(zK("x",t,e,n).rank,"int32")];case"NoOp":return[cU(1)];case"Print":const r=zK("x",t,e,n),s=zK("data",t,e,n),o=zK("message",t,e,n),i=zK("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let t=0;t<s.length;t++)console.log(Array.prototype.slice.call(s[t].dataSync()).slice(0,i));return[r];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"logical":return gV((()=>((t,e,n)=>{switch(t.op){case"Equal":return[iH(zK("a",t,e,n),zK("b",t,e,n))];case"NotEqual":return[CV(zK("a",t,e,n),zK("b",t,e,n))];case"Greater":return[wV(zK("a",t,e,n),zK("b",t,e,n))];case"GreaterEqual":return[QU(zK("a",t,e,n),zK("b",t,e,n))];case"Less":return[uH(zK("a",t,e,n),zK("b",t,e,n))];case"LessEqual":return[JU(zK("a",t,e,n),zK("b",t,e,n))];case"LogicalAnd":return[ZU(zK("a",t,e,n),zK("b",t,e,n))];case"LogicalNot":return[WH(zK("a",t,e,n))];case"LogicalOr":return[dK(zK("a",t,e,n),zK("b",t,e,n))];case"Select":case"SelectV2":return[eV(zK("condition",t,e,n),zK("a",t,e,n),zK("b",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"matrices":return gV((()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[kV(zK("a",t,e,n),zK("b",t,e,n),zK("transposeA",t,e,n),zK("transposeB",t,e,n))];case"Transpose":return[SV(zK("x",t,e,n),zK("perm",t,e,n))];case"_FusedMatMul":const[a,r]=zK("fusedOps",t,e,n),s="biasadd"===a,o="prelu"===r,i=zK("numArgs",t,e,n),c=zK("leakyreluAlpha",t,e,n);if(s){if(o&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,u]=zK("args",t,e,n);return[Oq({a:zK("a",t,e,n),b:zK("b",t,e,n),transposeA:zK("transposeA",t,e,n),transposeB:zK("transposeB",t,e,n),bias:l,activation:r,preluActivationWeights:u,leakyreluAlpha:c})];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"normalization":return gV((()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Bj(zK("x",t,e,n),zK("mean",t,e,n),zK("variance",t,e,n),zK("offset",t,e,n),zK("scale",t,e,n),zK("epsilon",t,e,n))];case"LRN":return[cK(zK("x",t,e,n),zK("radius",t,e,n),zK("bias",t,e,n),zK("alpha",t,e,n),zK("beta",t,e,n))];case"Softmax":return[EK(zK("x",t,e,n))];case"LogSoftmax":return[hK(zK("x",t,e,n))];case"SparseToDense":return[Jq(zK("sparseIndices",t,e,n),zK("outputShape",t,e,n),zK("sparseValues",t,e,n),zK("defaultValue",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"reduction":return gV((()=>((t,e,n)=>{switch(t.op){case"Max":{const a=zK("axis",t,e,n),r=zK("keepDims",t,e,n);return[oV(zK("x",t,e,n),a,r)]}case"Mean":{const a=zK("axis",t,e,n),r=zK("keepDims",t,e,n);return[EV(zK("x",t,e,n),a,r)]}case"Min":{const a=zK("axis",t,e,n),r=zK("keepDims",t,e,n);return[iV(zK("x",t,e,n),a,r)]}case"Sum":{const a=zK("axis",t,e,n),r=zK("keepDims",t,e,n);return[hV(zK("x",t,e,n),a,r)]}case"All":{const a=zK("axis",t,e,n),r=zK("keepDims",t,e,n);return[Rj(zK("x",t,e,n),a,r)]}case"Any":{const a=zK("axis",t,e,n),r=zK("keepDims",t,e,n);return[_j(zK("x",t,e,n),a,r)]}case"ArgMax":{const a=zK("axis",t,e,n);return[Aj(zK("x",t,e,n),a)]}case"ArgMin":{const a=zK("axis",t,e,n);return[Dj(zK("x",t,e,n),a)]}case"Prod":{const a=zK("axis",t,e,n),r=zK("keepDims",t,e,n);return[vK(zK("x",t,e,n),a,r)]}case"Cumsum":{const a=zK("axis",t,e,n),r=zK("exclusive",t,e,n),s=zK("reverse",t,e,n);return[AG(zK("x",t,e,n),a,r,s)]}case"Bincount":const a=zK("x",t,e,n),r=zK("weights",t,e,n),s=zK("size",t,e,n);return[Zq(a,r,s)];case"DenseBincount":{const a=zK("x",t,e,n),r=zK("weights",t,e,n),s=zK("size",t,e,n),o=zK("binaryOutput",t,e,n);return[$q(a,r,s,o)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"slice_join":return gV((()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const a=zK("n",t,e,n),r=zK("axis",t,e,n);let s=zK("tensors",t,e,n);return s=s.slice(0,a),[nU(s,r)]}case"Gather":{const a=zK("x",t,e,n),r=zK("indices",t,e,n);return[pj(a,UW(r,"int32"),0)]}case"GatherV2":{const a=zK("axis",t,e,n),r=zK("batchDims",t,e,n),s=zK("x",t,e,n),o=zK("indices",t,e,n);return[pj(s,UW(o,"int32"),a,r)]}case"Reverse":{const a=zK("dims",t,e,n),r=[];for(let t=0;t<a.length;t++)a[t]&&r.push(t);const s=zK("x",t,e,n);return[SU(s,r)]}case"ReverseV2":{const a=zK("axis",t,e,n),r=zK("x",t,e,n);return[SU(r,a)]}case"Slice":{const a=zK("begin",t,e,n),r=zK("size",t,e,n);return[uU(zK("x",t,e,n),a,r)]}case"StridedSlice":{const a=zK("begin",t,e,n),r=zK("end",t,e,n),s=zK("strides",t,e,n),o=zK("beginMask",t,e,n),i=zK("endMask",t,e,n),c=zK("ellipsisMask",t,e,n),l=zK("newAxisMask",t,e,n),u=zK("shrinkAxisMask",t,e,n),h=zK("x",t,e,n);return[CK(h,a,r,s,o,i,c,l,u)]}case"Pack":return gV((()=>{const a=zK("axis",t,e,n),r=zK("tensors",t,e,n),s=r[0].shape,o=fV(r[0]).shape,i=r.map((t=>{const e=sz(t.shape,s);if(!e&&!sz(fV(t).shape,o))throw new Error("the input tensors shape does not match");return e?t:iU(t,s)}));return[hU(i,a)]}));case"Unpack":{const a=zK("axis",t,e,n),r=zK("tensor",t,e,n);return mU(r,a)}case"Tile":{const a=zK("reps",t,e,n);return[xV(zK("x",t,e,n),a)]}case"Split":case"SplitV":{const a=zK("axis",t,e,n),r=zK("numOrSizeSplits",t,e,n),s=zK("x",t,e,n);return bU(s,r,a)}case"ScatterNd":{const a=zK("indices",t,e,n),r=zK("values",t,e,n),s=zK("shape",t,e,n);return[eX(a,r,s)]}case"GatherNd":{const a=zK("x",t,e,n),r=zK("indices",t,e,n);return[nX(a,r)]}case"SparseToDense":{const a=zK("sparseIndices",t,e,n),r=zK("outputShape",t,e,n),s=zK("sparseValues",t,e,n),o=zK("defaultValue",t,e,n);return[Jq(a,s,r,s.dtype===o.dtype?o:UW(o,s.dtype))]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"spectral":return gV((()=>((t,e,n)=>{switch(t.op){case"FFT":return[wU(zK("x",t,e,n))];case"IFFT":return[IU(zK("x",t,e,n))];case"RFFT":return[kU(zK("x",t,e,n))];case"IRFFT":return[NU(zK("x",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"transformation":return gV((()=>((t,e,n)=>{switch(t.op){case"Cast":return[UW(zK("x",t,e,n),zK("dtype",t,e,n))];case"ExpandDims":{const a=zK("axis",t,e,n);return[bV(zK("x",t,e,n),a)]}case"Squeeze":{const a=zK("axis",t,e,n);return[fV(zK("x",t,e,n),a)]}case"Reshape":return[iU(zK("x",t,e,n),zK("shape",t,e,n))];case"MirrorPad":return[mK(zK("x",t,e,n),zK("padding",t,e,n),zK("mode",t,e,n))];case"PadV2":case"Pad":return[YH(zK("x",t,e,n),zK("padding",t,e,n),zK("constantValue",t,e,n))];case"SpaceToBatchND":{const a=zK("blockShape",t,e,n),r=zK("paddings",t,e,n);return[hG(zK("x",t,e,n),a,r)]}case"BatchToSpaceND":{const a=zK("blockShape",t,e,n),r=zK("crops",t,e,n);return[$H(zK("x",t,e,n),a,r)]}case"DepthToSpace":{const a=zK("blockSize",t,e,n),r=zK("dataFormat",t,e,n).toUpperCase();return[Hj(zK("x",t,e,n),a,r)]}case"BroadcastTo":return[tV(zK("x",t,e,n),zK("shape",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"hash_table":return(async(t,e,n,a)=>{switch(t.op){case"HashTable":case"HashTableV2":{const r=zK("keyDType",t,e,n),s=zK("valueDType",t,e,n),o=new Qq(r,s);return a.addHashTable(t.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=zK("tableHandle",t,e,n,a),s=zK("keys",t,e,n),o=zK("values",t,e,n),i=a.getHashTableById(r.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=zK("tableHandle",t,e,n,a),s=zK("keys",t,e,n),o=zK("defaultValue",t,e,n),i=a.getHashTableById(r.id);return[await i.find(s,o)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n,a);case"custom":const r=LK(t.op);if(r&&r.customExecutor)return r.customExecutor(new kq(t,e,n));throw TypeError("Custom op ".concat(t.op," is not registered."));default:throw TypeError("Unknown op '".concat(t.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(t,e,n);return xz(r)?r.then((t=>[].concat(t))):[].concat(r)}class rX{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":"".concat(t.frameName,"-").concat(t.iterationId))).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function sX(t,e,n,a){const r=new Set,s=[];let o=null,i=null;const c=new Set,l=Object.keys(t).map((t=>UK(t)[0]));let u=[];null!=a&&(u=a.map((t=>UK(t.name)[0])));const h=[...e];for(;h.length>0;){const t=h.pop();(lX(t)||uX(t)||hX(t))&&null==o&&(o=t,i=o.children.map((t=>t.name)).filter((t=>r.has(t)))),r.add(t.name),null==n[t.name]&&(-1===l.indexOf(t.name)&&-1===u.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{c.has(t.name)||(c.add(t.name),h.push(t))})):s.push(t.name)))}return{inputs:t,outputs:e,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:i}}const oX=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],iX=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],cX=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function lX(t){return oX.indexOf(t.op)>=0}function uX(t){return iX.indexOf(t.op)>=0}function hX(t){return cX.indexOf(t.op)>=0}class dX{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new dX(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?"".concat(e,":").concat(t.defaultOutput):e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),a=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+a.join(this.SEPERATOR)}compile(t,e){const n=sX(t,e,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(s,"]"));if(a.length>0){const n=e.map((t=>t.name)),r=Object.keys(t);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}return function(t,e,n){const{usedNodes:a,inputs:r}=n,s=[],o=Object.keys(r).map((t=>UK(t)[0])).map((e=>t.nodes[e])),i=t.initNodes;o.forEach((t=>{a.has(t.name)&&s.push(t)})),t.weights.forEach((t=>{a.has(t.name)&&s.push(t)})),null!=i&&i.forEach((t=>{a.has(t.name)&&s.push(t)}));const c=new Set,l=[];for(;s.length>0;){const t=s.pop();c.add(t.name),e[t.name]||l.push(t),t.children.forEach((t=>{!c.has(t.name)&&a.has(t.name)&&t.inputs.every((t=>c.has(t.name)))&&s.push(t)}))}return l}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const a=n.map((t=>this.graph.nodes[UK(t)[0]])),r=e.map((t=>UK(t)[0]));let s=r.map((t=>this.graph.nodes[t]));0===s.length&&(s=this._outputs);const o=this.getCompilationKey(a,s);let i=this.compiledMap.get(o);null==i&&(i=this.compile(t,s),this.compiledMap.set(o,i));const c={},l={};return gV((()=>{const n=new rX(this.weightMap,c,l,this.functionExecutorMap),a=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=UK(e),s=[];s[r]=t[e],a[n]=s}));const s=this.getFrozenTensorIds(a),o={};for(let t=0;t<i.length;t++){const e=i[t];if(!a[e.name]){const t=aX(e,a,n,this._resourceManager);if(xz(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.checkTensorForDisposal(e.name,e,a,n,s,r,o)}}return null==this.parent&&n.dispose(s),e.map((t=>PK(t,a,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,a,r,s,o){"control"!==e.category&&-1===s.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(o[t.id]=(o[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const e=function(t,e,n){return e[WK(t,n.currentContextId)]}(t.name,n,a);null!=e&&e.forEach((t=>{if(t&&!r.has(t.id)){const e=o[t.id];1===e?(t.dispose(),delete o[t.id]):null!=e&&o[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const s=new rX(this.weightMap,a,r,this.functionExecutorMap),o=await this.executeWithControlFlow(t,s,e,n),i=e.map((t=>PK(t,o,s))),c=i.map((t=>t.id)),l=Object.keys(t).map((e=>t[e].id)),u=new Set([...c,...l,...this.weightIds]);return Object.keys(o).forEach((t=>{o[t].forEach((t=>{!t||t.isDisposed||u.has(t.id)||t.dispose()}))})),null==this.parent&&s.dispose(u),i}async executeFunctionAsync(t,e,n){const a=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(a,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,a){const r=Object.keys(t),s=r.map((t=>this.graph.nodes[UK(t)[0]])),o=n.map((t=>UK(t)[0]));let i=o.map((t=>this.graph.nodes[t]));0===i.length&&(i=this._outputs);const{usedNodes:c,missingInputs:l,dynamicNode:u,syncInputs:h}=sX(t,i,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),p=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,a]=UK(e),r=[];r[a]=t[e],p[n]=r}));const f={},m=this.getFrozenTensorIds(p),g={};for(;d.length>0;){const t=this.processStack(s,d,e,p,g,m,o,f,c);await Promise.all(t)}null!=u||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=i.filter((t=>!lX(t)&&!PK(t.name,p,e))).map((t=>t.name));if(y.length>0){let t="";throw null!=u&&(t="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(h,"]")),new Error("Cannot compute the outputs [".concat(y,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(l,"]. ").concat(t))}return p}processStack(t,e,n,a,r,s,o,i,c){const l=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let u="";if("Enter"===t.node.op&&zK("isConstant",t.node,a,n)&&([u]=BK(t.node.name,n)),null==a[t.node.name]){const h=aX(t.node,a,n,this._resourceManager);u||([u]=BK(t.node.name,n));const d=n.currentContext;xz(h)?l.push(h.then((l=>(a[u]=l,n.currentContext=d,this.checkTensorForDisposal(u,t.node,a,n,s,o,i),this.processChildNodes(t.node,e,n,a,r,c),l)))):(a[u]=h,this.checkTensorForDisposal(u,t.node,a,n,s,o,i),this.processChildNodes(t.node,e,n,a,r,c))}else this.processChildNodes(t.node,e,n,a,r,c)}return l}processChildNodes(t,e,n,a,r,s){t.children.forEach((t=>{const[o]=BK(t.name,n);!r[o]&&s.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!PK(t,a,n)))&&(r[o]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!PK(t,a,n)))&&(r[o]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[a]=UK(e),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const t=r.attrParams.shape.value;tz(t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e)),(()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(t,"], but was ")+"[".concat(n.shape,"]")))}r.attrParams.dtype&&r.attrParams.dtype.value&&tz(n.dtype===r.attrParams.dtype.value,(()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(t){const e={};for(const n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){e[this._signature.inputs[n].name]=t[n]}else e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=UK(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(e,"] that are not part of graph"))}mapOutputs(t){return t.map((t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){return this._signature.outputs[t].name}return t}),{})}checkOutputs(t){t.forEach((t=>{const[e]=UK(t);if(!this.graph.nodes[e])throw new Error("The output '".concat(t,"' is not found in the graph"))}))}}class pX{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}const fX="?tfjs-format=file",mX="model.json";class gX{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new pX}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=ZW(t,this.loadOptions);else{const a=(e=t,n=this.loadOptions,pW.getLoadHandlers(e,n));if(0===a.length)a.push(ZW(t,this.loadOptions));else if(a.length>1)throw new Error("Found more than one (".concat(a.length,") load handlers for ")+"URL '".concat([t],"'"));this.handler=a[0]}var e,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version="".concat(e.versions.producer,".").concat(e.versions.minConsumer);const a=iW(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new dX(iq.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(a),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=iq.Instance.transformGraph(t.modelInitializer);this.initializer=new dX(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"===typeof t){const e=(n=t,pW.getSaveHandlers(n));if(0===e.length)throw new Error("Cannot find any save handlers for URL '".concat(t,"'"));if(e.length>1)throw new Error("Found more than one (".concat(e.length,") save handlers for ")+"URL '".concat(t,"'"));t=e[0]}var n;if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof DB)&&!Array.isArray(t))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,"+"the graph model has ".concat(this.inputNodes.length," placeholders, ")+"while there are ".concat(t.length," input tensors."));return this.inputNodes.reduce(((e,n,a)=>(e[n]=t[a],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function yX(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t="".concat(t).concat(mX).concat(fX));const n=new gX(t,e);return await n.load(),n}var bX=function(){return(bX=Object.assign||function(t){for(var e,n=1,a=arguments.length;n<a;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)};function xX(t,e,n,a){return new(n||(n=Promise))((function(r,s){function o(t){try{c(a.next(t))}catch(t){s(t)}}function i(t){try{c(a.throw(t))}catch(t){s(t)}}function c(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,i)}c((a=a.apply(t,e||[])).next())}))}function vX(t,e){var n,a,r,s,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,a&&(r=2&s[0]?a.return:s[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,s[1])).done)return r;switch(a=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,a=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!((r=(r=o.trys).length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){o.label=s[1];break}if(6===s[0]&&o.label<r[1]){o.label=r[1],r=s;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(s);break}r[2]&&o.ops.pop(),o.trys.pop();continue}s=e.call(t,o)}catch(t){s=[6,t],a=0}finally{n=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}}const wX=t=>({startEndTensor:t,startPoint:uU(t,[0,0],[-1,2]),endPoint:uU(t,[0,2],[-1,2])}),kX={strides:[8,16],anchors:[2,6]};function IX(t,e){let n,a,r;if(t.topLeft instanceof DB&&t.bottomRight instanceof DB){const[s,o]=gV((()=>[nU([dU(e-1,t.topLeft.slice(0,1)),t.topLeft.slice(1,1)]),nU([dU(e-1,t.bottomRight.slice(0,1)),t.bottomRight.slice(1,1)])]));n=s,a=o,null!=t.landmarks&&(r=gV((()=>{const n=dU(pU([e-1,0]),t.landmarks),a=pU([1,-1]);return oU(n,a)})))}else{const[s,o]=t.topLeft,[i,c]=t.bottomRight;n=[e-1-s,o],a=[e-1-i,c],null!=t.landmarks&&(r=t.landmarks.map((t=>[e-1-t[0],t[1]])))}const s={topLeft:n,bottomRight:a};return null!=r&&(s.landmarks=r),null!=t.probability&&(s.probability=t.probability instanceof DB?t.probability.clone():t.probability),s}function SX(t,e){return gV((()=>{let n;return n=t.hasOwnProperty("box")?t.box:t,((t,e)=>{const n=oU(t.startPoint,e),a=oU(t.endPoint,e),r=aU([n,a],1);return wX(r)})(n,e).startEndTensor.squeeze()}))}class NX{constructor(t,e,n,a,r,s){this.blazeFaceModel=t,this.width=e,this.height=n,this.maxFaces=a,this.anchorsData=function(t,e,n){const a=[];for(let r=0;r<n.strides.length;r++){const s=n.strides[r],o=Math.floor((e+s-1)/s),i=Math.floor((t+s-1)/s),c=n.anchors[r];for(let t=0;t<o;t++){const e=s*(t+.5);for(let t=0;t<i;t++){const n=s*(t+.5);for(let t=0;t<c;t++)a.push([n,e])}}}return a}(e,n,kX),this.anchors=fU(this.anchorsData),this.inputSizeData=[e,n],this.inputSize=pU([e,n]),this.iouThreshold=r,this.scoreThreshold=s}async getBoundingBoxes(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const[a,r,s]=gV((()=>{const e=t.resizeBilinear([this.width,this.height]),n=oU(dU(e.div(255),.5),2),a=this.blazeFaceModel.predict(n).squeeze(),r=function(t,e,n){const a=uU(t,[0,1],[-1,2]),r=eU(a,e),s=uU(t,[0,3],[-1,2]),o=sU(s,n),i=sU(r,n),c=sU(o,2),l=dU(i,c),u=eU(i,c),h=oU(l,n),d=oU(u,n);return aU([h,d],1)}(a,this.anchors,this.inputSize),s=uU(a,[0,0],[-1,1]);return[a,r,lU(s).squeeze()]})),o=console.warn;console.warn=()=>{};const i=BV.nonMaxSuppression(r,s,this.maxFaces,this.iouThreshold,this.scoreThreshold);console.warn=o;const c=await i.array();i.dispose();let l=c.map((t=>uU(r,[t,0],[1,-1])));e||(l=await Promise.all(l.map((async t=>{const e=await t.array();return t.dispose(),e}))));const u=t.shape[1],h=t.shape[2];let d;d=e?sU([h,u],this.inputSize):[h/this.inputSizeData[0],u/this.inputSizeData[1]];const p=[];for(let f=0;f<l.length;f++){const t=l[f],r=gV((()=>{const r=wX(t instanceof DB?t:fU(t));if(!n)return r;const o=c[f];let i;return i=e?this.anchors.slice([o,0],[1,2]):this.anchorsData[o],{box:r,landmarks:uU(a,[o,5],[1,-1]).squeeze().reshape([6,-1]),probability:uU(s,[o],[1]),anchor:i}}));p.push(r)}return r.dispose(),s.dispose(),a.dispose(),{boxes:p,scaleFactor:d}}async estimateFaces(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const[,r]=function(t){return t instanceof DB?[t.shape[0],t.shape[1]]:[t.height,t.width]}(t),s=gV((()=>(t instanceof DB||(t=tU(t)),t.toFloat().expandDims(0)))),{boxes:o,scaleFactor:i}=await this.getBoundingBoxes(s,e,a);return s.dispose(),e?o.map((t=>{const e=SX(t,i);let s={topLeft:e.slice([0],[2]),bottomRight:e.slice([2],[2])};if(a){const{landmarks:e,probability:n,anchor:a}=t,r=e.add(a).mul(i);s.landmarks=r,s.probability=n}return n&&(s=IX(s,r)),s})):Promise.all(o.map((async t=>{const e=SX(t,i);let s;if(a){const[n,a,r]=await Promise.all([t.landmarks,e,t.probability].map((async t=>t.array()))),o=t.anchor,[c,l]=i,u=n.map((t=>[(t[0]+o[0])*c,(t[1]+o[1])*l]));s={topLeft:a.slice(0,2),bottomRight:a.slice(2),landmarks:u,probability:r},(t=>{t.startEndTensor.dispose(),t.startPoint.dispose(),t.endPoint.dispose()})(t.box),t.landmarks.dispose(),t.probability.dispose()}else{const t=await e.array();s={topLeft:t.slice(0,2),bottomRight:t.slice(2)}}return e.dispose(),n&&(s=IX(s,r)),s})))}}async function TX(){let{maxFaces:t=10,inputWidth:e=128,inputHeight:n=128,iouThreshold:a=.3,scoreThreshold:r=.75}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const s=await yX("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0});return new NX(s,e,n,t,a,r)}var EX={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]};function CX(t){return[Math.abs(t.endPoint[0]-t.startPoint[0]),Math.abs(t.endPoint[1]-t.startPoint[1])]}function RX(t){return[t.startPoint[0]+(t.endPoint[0]-t.startPoint[0])/2,t.startPoint[1]+(t.endPoint[1]-t.startPoint[1])/2]}function _X(t,e){void 0===e&&(e=1.5);var n=RX(t),a=CX(t),r=[e*a[0]/2,e*a[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:t.landmarks}}function AX(t,e){var n;return(n=Math.PI/2-Math.atan2(-(e[1]-t[1]),e[0]-t[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}function DX(t,e){return[[1,0,t],[0,1,e],[0,0,1]]}function FX(t,e){for(var n=0,a=0;a<t.length;a++)n+=t[a]*e[a];return n}function OX(t,e){for(var n=[],a=0;a<t.length;a++)n.push(t[a][e]);return n}function MX(t,e){for(var n=[],a=t.length,r=0;r<a;r++){n.push([]);for(var s=0;s<a;s++)n[r].push(FX(t[r],OX(e,s)))}return n}function LX(t,e){var n=Math.cos(t),a=Math.sin(t),r=[[n,-a,0],[a,n,0],[0,0,1]],s=MX(DX(e[0],e[1]),r);return MX(s,DX(-e[0],-e[1]))}var zX=[1,168],PX=[3,2],BX=function(){function t(t,e,n,a,r,s){this.regionsOfInterest=[],this.runsWithoutFaceDetector=0,this.boundingBoxDetector=t,this.meshDetector=e,this.meshWidth=n,this.meshHeight=a,this.maxContinuousChecks=r,this.maxFaces=s}return t.prototype.transformRawCoords=function(t,e,n,a){var r,s,o,i,c=this,l=CX({startPoint:e.startPoint,endPoint:e.endPoint}),u=[l[0]/this.meshWidth,l[1]/this.meshHeight],h=t.map((function(t){return[u[0]*(t[0]-c.meshWidth/2),u[1]*(t[1]-c.meshHeight/2),t[2]]})),d=LX(n,[0,0]),p=h.map((function(t){return function(t,e){return[FX(t,e[0]),FX(t,e[1])]}(t,d).concat([t[2]])})),f=(s=[[(r=a)[0][0],r[1][0]],[r[0][1],r[1][1]]],o=[r[0][2],r[1][2]],i=[-FX(s[0],o),-FX(s[1],o)],[s[0].concat(i[0]),s[1].concat(i[1]),[0,0,1]]),m=RX({startPoint:e.startPoint,endPoint:e.endPoint}).concat([1]),g=[FX(m,f[0]),FX(m,f[1])];return p.map((function(t){return[t[0]+g[0],t[1]+g[1],t[2]]}))},t.prototype.predict=function(t){return xX(this,void 0,void 0,(function(){var e,n,a,r,s=this;return vX(this,(function(o){switch(o.label){case 0:return this.shouldUpdateRegionsOfInterest()?[4,this.boundingBoxDetector.getBoundingBoxes(t,!1,!0)]:[3,2];case 1:return e=o.sent(),n=e.boxes,a=e.scaleFactor,0===n.length?(this.regionsOfInterest=[],[2,null]):(r=n.map((function(t){var e,n,r={startPoint:t.box.startPoint.squeeze().arraySync(),endPoint:t.box.endPoint.squeeze().arraySync()},s=_X((n=a,{startPoint:[(e=r).startPoint[0]*n[0],e.startPoint[1]*n[1]],endPoint:[e.endPoint[0]*n[0],e.endPoint[1]*n[1]]}));return bX({},s,{landmarks:t.landmarks.arraySync()})})),n.forEach((function(t){null!=t&&null!=t.startPoint&&(t.startEndTensor.dispose(),t.startPoint.dispose(),t.endPoint.dispose())})),this.updateRegionsOfInterest(r),this.runsWithoutFaceDetector=0,[3,3]);case 2:this.runsWithoutFaceDetector++,o.label=3;case 3:return[2,gV((function(){return s.regionsOfInterest.map((function(e,n){var a;if(468===e.landmarks.length){var r=zX[0],o=zX[1];a=AX(e.landmarks[r],e.landmarks[o])}else r=PX[0],o=PX[1],a=AX(e.landmarks[r],e.landmarks[o]);var i=RX({startPoint:e.startPoint,endPoint:e.endPoint}),c=[i[0]/t.shape[2],i[1]/t.shape[1]],l=BV.rotateWithOffset(t,a,0,c),u=LX(-a,i),h=function(t,e,n){var a=e.shape[1],r=e.shape[2],s=[[t.startPoint[1]/a,t.startPoint[0]/r,t.endPoint[1]/a,t.endPoint[0]/r]];return BV.cropAndResize(e,s,[0],n)}({startPoint:e.startPoint,endPoint:e.endPoint},l,[s.meshHeight,s.meshWidth]).div(255),d=s.meshDetector.predict(h),p=d[1],f=d[2],m=iU(f,[-1,3]),g=m.arraySync(),y=s.transformRawCoords(g,e,a,u),b=fU(y),x=s.calculateLandmarksBoundingBox(y);return s.regionsOfInterest[n]=bX({},x,{landmarks:b.arraySync()}),{coords:m,scaledCoords:b,box:x,flag:p.squeeze()}}))}))]}}))}))},t.prototype.updateRegionsOfInterest=function(t){for(var e=0;e<t.length;e++){var n=t[e],a=this.regionsOfInterest[e],r=0;if(a&&a.startPoint){var s=n.startPoint,o=s[0],i=s[1],c=n.endPoint,l=c[0],u=c[1],h=a.startPoint,d=h[0],p=h[1],f=a.endPoint,m=f[0],g=f[1],y=Math.max(o,d),b=Math.max(i,p),x=(Math.min(l,m)-y)*(Math.min(u,g)-b);r=x/((l-o)*(u-i)+(m-d)*(g-i)-x)}r<.25&&(this.regionsOfInterest[e]=n)}this.regionsOfInterest=this.regionsOfInterest.slice(0,t.length)},t.prototype.clearRegionOfInterest=function(t){null!=this.regionsOfInterest[t]&&(this.regionsOfInterest=this.regionsOfInterest.slice(0,t).concat(this.regionsOfInterest.slice(t+1)))},t.prototype.shouldUpdateRegionsOfInterest=function(){var t=this.regionsOfInterest.length,e=0===t;return 1===this.maxFaces||e?e:t!==this.maxFaces&&this.runsWithoutFaceDetector>=this.maxContinuousChecks},t.prototype.calculateLandmarksBoundingBox=function(t){var e=t.map((function(t){return t[0]})),n=t.map((function(t){return t[1]})),a={startPoint:[Math.min.apply(Math,e),Math.min.apply(Math,n)],endPoint:[Math.max.apply(Math,e),Math.max.apply(Math,n)]};return _X({startPoint:a.startPoint,endPoint:a.endPoint})},t}(),WX=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]];function UX(t,e,n){return xX(this,void 0,void 0,(function(){return vX(this,(function(a){return[2,TX({maxFaces:t,iouThreshold:e,scoreThreshold:n})]}))}))}function VX(){return xX(this,void 0,void 0,(function(){return vX(this,(function(t){return[2,yX("https://tfhub.dev/mediapipe/tfjs-model/facemesh/1/default/1",{fromTFHub:!0})]}))}))}function GX(t,e){if(t.mesh instanceof DB){var n=gV((function(){var n=pU([e-1,0,0]),a=pU([1,-1,1]);return gV((function(){return[nU([dU(e-1,t.boundingBox.topLeft.slice(0,1)),t.boundingBox.topLeft.slice(1,1)]),nU([dU(e-1,t.boundingBox.bottomRight.slice(0,1)),t.boundingBox.bottomRight.slice(1,1)]),dU(n,t.mesh).mul(a),dU(n,t.scaledMesh).mul(a)]}))})),a=n[0],r=n[1],s=n[2],o=n[3];return Object.assign({},t,{boundingBox:{topLeft:a,bottomRight:r},mesh:s,scaledMesh:o})}return Object.assign({},t,{boundingBox:{topLeft:[e-1-t.boundingBox.topLeft[0],t.boundingBox.topLeft[1]],bottomRight:[e-1-t.boundingBox.bottomRight[0],t.boundingBox.bottomRight[1]]},mesh:t.mesh.map((function(t){var n=t.slice(0);return n[0]=e-1-t[0],n})),scaledMesh:t.scaledMesh.map((function(t){var n=t.slice(0);return n[0]=e-1-t[0],n}))})}var HX=function(){function t(t,e,n,a,r){this.pipeline=new BX(t,e,192,192,n,r),this.detectionConfidence=a}return t.getAnnotations=function(){return EX},t.getUVCoords=function(){return WX},t.prototype.estimateFaces=function(t,e,n){return void 0===e&&(e=!1),void 0===n&&(n=!1),xX(this,void 0,void 0,(function(){var a,r,s,o,i,c=this;return vX(this,(function(l){switch(l.label){case 0:return a=function(t){return t instanceof DB?[t.shape[0],t.shape[1]]:[t.height,t.width]}(t),r=a[1],s=gV((function(){return t instanceof DB||(t=tU(t)),t.toFloat().expandDims(0)})),"webgl"!==qB.backendName?[3,2]:(i=kz().get("WEBGL_PACK_DEPTHWISECONV"),kz().set("WEBGL_PACK_DEPTHWISECONV",!0),[4,this.pipeline.predict(s)]);case 1:return o=l.sent(),kz().set("WEBGL_PACK_DEPTHWISECONV",i),[3,4];case 2:return[4,this.pipeline.predict(s)];case 3:o=l.sent(),l.label=4;case 4:return s.dispose(),null!=o&&o.length>0?[2,Promise.all(o.map((function(t,a){return xX(c,void 0,void 0,(function(){var s,o,i,c,l,u,h,d,p,f,m,g,y,b,x=this;return vX(this,(function(v){switch(v.label){case 0:return s=t.coords,o=t.scaledCoords,i=t.box,c=t.flag,l=[c],e||(l=l.concat([s,o])),[4,Promise.all(l.map((function(t){return xX(x,void 0,void 0,(function(){return vX(this,(function(e){return[2,t.array()]}))}))})))];case 1:if(u=v.sent(),h=u[0],c.dispose(),h<this.detectionConfidence&&this.pipeline.clearRegionOfInterest(a),e)return d={faceInViewConfidence:h,mesh:s,scaledMesh:o,boundingBox:{topLeft:pU(i.startPoint),bottomRight:pU(i.endPoint)}},n?[2,GX(d,r)]:[2,d];for(b in p=u.slice(1),f=p[0],m=p[1],o.dispose(),s.dispose(),g={faceInViewConfidence:h,boundingBox:{topLeft:i.startPoint,bottomRight:i.endPoint},mesh:f,scaledMesh:m},n&&(g=GX(g,r)),y={},EX)y[b]=EX[b].map((function(t){return g.scaledMesh[t]}));return g.annotations=y,[2,g]}}))}))})))]:[2,[]]}}))}))},t}(),jX=n(97),KX=n.n(jX);const qX=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255],XX=(t,e,n)=>{const a=new Path2D;a.moveTo(e[0],e[1]);for(let r=1;r<e.length;r++){const t=e[r];a.lineTo(t[0],t[1])}n&&a.closePath(),t.strokeStyle="grey",t.stroke(a)};var YX=n(184);const QX=function(){const t=(0,k.useRef)(null),e=(0,k.useRef)(null),n=async n=>{if("undefined"!==typeof t.current&&null!==t.current&&4===t.current.video.readyState){const a=t.current.video,r=t.current.video.videoWidth,s=t.current.video.videoHeight;t.current.video.width=r,t.current.video.height=s,e.current.width=r,e.current.height=s;((t,e)=>{t.length>0&&t.forEach((t=>{const n=t.scaledMesh;for(let a=0;a<qX.length/3;a++){const t=[qX[3*a],qX[3*a+1],qX[3*a+2]].map((t=>n[t]));XX(e,t,!0)}for(let a=0;a<n.length;a++){const t=n[a][0],r=n[a][1];e.beginPath(),e.arc(t,r,1,0,3*Math.PI),e.fillStyle="aqua",e.fill()}}))})(await n.estimateFaces(a),e.current.getContext("2d"))}};return(async()=>{const t=await function(t){var e=void 0===t?{}:t,n=e.maxContinuousChecks,a=void 0===n?5:n,r=e.detectionConfidence,s=void 0===r?.9:r,o=e.maxFaces,i=void 0===o?10:o,c=e.iouThreshold,l=void 0===c?.3:c,u=e.scoreThreshold,h=void 0===u?.75:u;return xX(this,void 0,void 0,(function(){var t,e,n;return vX(this,(function(r){switch(r.label){case 0:return[4,Promise.all([UX(i,l,h),VX()])];case 1:return t=r.sent(),e=t[0],n=t[1],[2,new HX(e,n,a,s,i)]}}))}))}({inputResolution:{width:640,height:480},scale:.8});setInterval((()=>{n(t)}),100)})(),(0,YX.jsxs)("div",{className:"App",children:[(0,YX.jsx)("h1",{style:{margin:0,padding:0,paddingTop:"8vh"},children:"MET - FACE DETECTOR"}),(0,YX.jsxs)("header",{className:"App-header",children:[(0,YX.jsx)(KX(),{ref:t,style:{position:"absolute",marginLeft:"auto",marginRight:"auto",left:0,right:0,textAlign:"center",zIndex:9,width:"640px",height:"480px"}}),(0,YX.jsx)("canvas",{ref:e,style:{position:"absolute",marginLeft:"auto",marginRight:"auto",left:0,right:0,textAlign:"center",zIndex:9,width:"640px",height:"480px"}})]})]})};I.createRoot(document.getElementById("root")).render((0,YX.jsx)(k.StrictMode,{children:(0,YX.jsx)(QX,{})}))})()})();
//# sourceMappingURL=main.c5739f79.js.map